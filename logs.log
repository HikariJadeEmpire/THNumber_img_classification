2023-06-02 13:43:52,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 13:43:52,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 13:43:52,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 13:43:52,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 13:44:02,028:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 13:44:40,064:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_14376\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 13:52:02,586:INFO:PyCaret ClassificationExperiment
2023-06-02 13:52:02,586:INFO:Logging name: clf-default-name
2023-06-02 13:52:02,586:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 13:52:02,586:INFO:version 3.0.2
2023-06-02 13:52:02,586:INFO:Initializing setup()
2023-06-02 13:52:02,587:INFO:self.USI: 9f2a
2023-06-02 13:52:02,587:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'logging_param', '_ml_usecase', 'USI', 'idx', '_available_plots', 'gpu_param', 'y', 'memory', 'is_multiclass', 'log_plots_param', 'exp_id', 'data', 'pipeline', 'y_test', 'fix_imbalance', 'exp_name_log', 'seed', 'X_train', 'X', 'y_train', 'n_jobs_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'X_test', 'fold_groups_param'}
2023-06-02 13:52:02,587:INFO:Checking environment
2023-06-02 13:52:02,587:INFO:python_version: 3.10.9
2023-06-02 13:52:02,587:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-02 13:52:02,587:INFO:machine: AMD64
2023-06-02 13:52:02,587:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 13:52:02,587:INFO:Memory: svmem(total=17106501632, available=8650579968, percent=49.4, used=8455921664, free=8650579968)
2023-06-02 13:52:02,587:INFO:Physical Core: 6
2023-06-02 13:52:02,587:INFO:Logical Core: 12
2023-06-02 13:52:02,587:INFO:Checking libraries
2023-06-02 13:52:02,587:INFO:System:
2023-06-02 13:52:02,587:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-02 13:52:02,588:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-06-02 13:52:02,588:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 13:52:02,588:INFO:PyCaret required dependencies:
2023-06-02 13:52:02,588:INFO:                 pip: 22.3.1
2023-06-02 13:52:02,588:INFO:          setuptools: 65.6.3
2023-06-02 13:52:02,588:INFO:             pycaret: 3.0.2
2023-06-02 13:52:02,588:INFO:             IPython: 8.10.0
2023-06-02 13:52:02,588:INFO:          ipywidgets: 7.6.5
2023-06-02 13:52:02,588:INFO:                tqdm: 4.64.1
2023-06-02 13:52:02,588:INFO:               numpy: 1.23.5
2023-06-02 13:52:02,588:INFO:              pandas: 1.5.3
2023-06-02 13:52:02,588:INFO:              jinja2: 3.1.2
2023-06-02 13:52:02,588:INFO:               scipy: 1.10.0
2023-06-02 13:52:02,588:INFO:              joblib: 1.1.1
2023-06-02 13:52:02,589:INFO:             sklearn: 1.2.1
2023-06-02 13:52:02,589:INFO:                pyod: 1.0.9
2023-06-02 13:52:02,589:INFO:            imblearn: 0.10.1
2023-06-02 13:52:02,589:INFO:   category_encoders: 2.6.1
2023-06-02 13:52:02,589:INFO:            lightgbm: 3.3.5
2023-06-02 13:52:02,589:INFO:               numba: 0.56.4
2023-06-02 13:52:02,589:INFO:            requests: 2.28.1
2023-06-02 13:52:02,589:INFO:          matplotlib: 3.7.0
2023-06-02 13:52:02,589:INFO:          scikitplot: 0.3.7
2023-06-02 13:52:02,589:INFO:         yellowbrick: 1.5
2023-06-02 13:52:02,589:INFO:              plotly: 5.9.0
2023-06-02 13:52:02,589:INFO:             kaleido: 0.2.1
2023-06-02 13:52:02,589:INFO:         statsmodels: 0.13.5
2023-06-02 13:52:02,589:INFO:              sktime: 0.17.0
2023-06-02 13:52:02,589:INFO:               tbats: 1.1.3
2023-06-02 13:52:02,590:INFO:            pmdarima: 2.0.3
2023-06-02 13:52:02,590:INFO:              psutil: 5.9.0
2023-06-02 13:52:02,590:INFO:PyCaret optional dependencies:
2023-06-02 13:52:02,613:INFO:                shap: Not installed
2023-06-02 13:52:02,613:INFO:           interpret: Not installed
2023-06-02 13:52:02,613:INFO:                umap: Not installed
2023-06-02 13:52:02,614:INFO:    pandas_profiling: Not installed
2023-06-02 13:52:02,614:INFO:  explainerdashboard: Not installed
2023-06-02 13:52:02,614:INFO:             autoviz: Not installed
2023-06-02 13:52:02,614:INFO:           fairlearn: Not installed
2023-06-02 13:52:02,614:INFO:             xgboost: Not installed
2023-06-02 13:52:02,614:INFO:            catboost: Not installed
2023-06-02 13:52:02,614:INFO:              kmodes: Not installed
2023-06-02 13:52:02,614:INFO:             mlxtend: Not installed
2023-06-02 13:52:02,614:INFO:       statsforecast: Not installed
2023-06-02 13:52:02,614:INFO:        tune_sklearn: 0.4.5
2023-06-02 13:52:02,614:INFO:                 ray: 2.4.0
2023-06-02 13:52:02,614:INFO:            hyperopt: Not installed
2023-06-02 13:52:02,614:INFO:              optuna: Not installed
2023-06-02 13:52:02,614:INFO:               skopt: Not installed
2023-06-02 13:52:02,614:INFO:              mlflow: Not installed
2023-06-02 13:52:02,615:INFO:              gradio: Not installed
2023-06-02 13:52:02,615:INFO:             fastapi: Not installed
2023-06-02 13:52:02,615:INFO:             uvicorn: Not installed
2023-06-02 13:52:02,615:INFO:              m2cgen: Not installed
2023-06-02 13:52:02,615:INFO:           evidently: Not installed
2023-06-02 13:52:02,615:INFO:               fugue: Not installed
2023-06-02 13:52:02,615:INFO:           streamlit: Not installed
2023-06-02 13:52:02,615:INFO:             prophet: Not installed
2023-06-02 13:52:02,615:INFO:None
2023-06-02 13:52:02,615:INFO:Set up data.
2023-06-02 13:52:02,668:INFO:Set up train/test split.
2023-06-02 13:52:02,722:INFO:Set up index.
2023-06-02 13:52:02,722:INFO:Set up folding strategy.
2023-06-02 13:52:02,722:INFO:Assigning column types.
2023-06-02 13:52:02,727:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 13:52:02,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 13:52:02,828:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:03,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 13:52:04,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:04,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,554:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 13:52:04,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:04,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,745:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:04,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,790:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 13:52:04,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:04,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,070:INFO:Preparing preprocessing pipeline...
2023-06-02 13:52:05,091:INFO:Set up label encoding.
2023-06-02 13:52:05,091:INFO:Set up simple imputation.
2023-06-02 13:52:05,101:INFO:Set up encoding of categorical features.
2023-06-02 13:52:05,202:INFO:Finished creating preprocessing pipeline.
2023-06-02 13:52:05,240:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 13:52:05,241:INFO:Creating final display dataframe.
2023-06-02 13:52:05,453:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                3785  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               9f2a  
2023-06-02 13:52:05,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:05,702:INFO:setup() successfully completed in 3.12s...............
2023-06-02 13:52:35,832:INFO:PyCaret ClassificationExperiment
2023-06-02 13:52:35,832:INFO:Logging name: clf-default-name
2023-06-02 13:52:35,832:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 13:52:35,833:INFO:version 3.0.2
2023-06-02 13:52:35,833:INFO:Initializing setup()
2023-06-02 13:52:35,833:INFO:self.USI: 1d94
2023-06-02 13:52:35,833:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'logging_param', '_ml_usecase', 'USI', 'idx', '_available_plots', 'gpu_param', 'y', 'memory', 'is_multiclass', 'log_plots_param', 'exp_id', 'data', 'pipeline', 'y_test', 'fix_imbalance', 'exp_name_log', 'seed', 'X_train', 'X', 'y_train', 'n_jobs_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'X_test', 'fold_groups_param'}
2023-06-02 13:52:35,833:INFO:Checking environment
2023-06-02 13:52:35,833:INFO:python_version: 3.10.9
2023-06-02 13:52:35,833:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-02 13:52:35,833:INFO:machine: AMD64
2023-06-02 13:52:35,833:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 13:52:35,833:INFO:Memory: svmem(total=17106501632, available=8641224704, percent=49.5, used=8465276928, free=8641224704)
2023-06-02 13:52:35,833:INFO:Physical Core: 6
2023-06-02 13:52:35,833:INFO:Logical Core: 12
2023-06-02 13:52:35,834:INFO:Checking libraries
2023-06-02 13:52:35,834:INFO:System:
2023-06-02 13:52:35,834:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-02 13:52:35,834:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-06-02 13:52:35,834:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 13:52:35,834:INFO:PyCaret required dependencies:
2023-06-02 13:52:35,834:INFO:                 pip: 22.3.1
2023-06-02 13:52:35,834:INFO:          setuptools: 65.6.3
2023-06-02 13:52:35,834:INFO:             pycaret: 3.0.2
2023-06-02 13:52:35,834:INFO:             IPython: 8.10.0
2023-06-02 13:52:35,834:INFO:          ipywidgets: 7.6.5
2023-06-02 13:52:35,834:INFO:                tqdm: 4.64.1
2023-06-02 13:52:35,834:INFO:               numpy: 1.23.5
2023-06-02 13:52:35,834:INFO:              pandas: 1.5.3
2023-06-02 13:52:35,835:INFO:              jinja2: 3.1.2
2023-06-02 13:52:35,835:INFO:               scipy: 1.10.0
2023-06-02 13:52:35,835:INFO:              joblib: 1.1.1
2023-06-02 13:52:35,835:INFO:             sklearn: 1.2.1
2023-06-02 13:52:35,835:INFO:                pyod: 1.0.9
2023-06-02 13:52:35,835:INFO:            imblearn: 0.10.1
2023-06-02 13:52:35,835:INFO:   category_encoders: 2.6.1
2023-06-02 13:52:35,835:INFO:            lightgbm: 3.3.5
2023-06-02 13:52:35,835:INFO:               numba: 0.56.4
2023-06-02 13:52:35,835:INFO:            requests: 2.28.1
2023-06-02 13:52:35,835:INFO:          matplotlib: 3.7.0
2023-06-02 13:52:35,835:INFO:          scikitplot: 0.3.7
2023-06-02 13:52:35,835:INFO:         yellowbrick: 1.5
2023-06-02 13:52:35,835:INFO:              plotly: 5.9.0
2023-06-02 13:52:35,835:INFO:             kaleido: 0.2.1
2023-06-02 13:52:35,835:INFO:         statsmodels: 0.13.5
2023-06-02 13:52:35,836:INFO:              sktime: 0.17.0
2023-06-02 13:52:35,836:INFO:               tbats: 1.1.3
2023-06-02 13:52:35,836:INFO:            pmdarima: 2.0.3
2023-06-02 13:52:35,836:INFO:              psutil: 5.9.0
2023-06-02 13:52:35,836:INFO:PyCaret optional dependencies:
2023-06-02 13:52:35,836:INFO:                shap: Not installed
2023-06-02 13:52:35,836:INFO:           interpret: Not installed
2023-06-02 13:52:35,836:INFO:                umap: Not installed
2023-06-02 13:52:35,836:INFO:    pandas_profiling: Not installed
2023-06-02 13:52:35,836:INFO:  explainerdashboard: Not installed
2023-06-02 13:52:35,836:INFO:             autoviz: Not installed
2023-06-02 13:52:35,836:INFO:           fairlearn: Not installed
2023-06-02 13:52:35,836:INFO:             xgboost: Not installed
2023-06-02 13:52:35,836:INFO:            catboost: Not installed
2023-06-02 13:52:35,837:INFO:              kmodes: Not installed
2023-06-02 13:52:35,837:INFO:             mlxtend: Not installed
2023-06-02 13:52:35,837:INFO:       statsforecast: Not installed
2023-06-02 13:52:35,837:INFO:        tune_sklearn: 0.4.5
2023-06-02 13:52:35,837:INFO:                 ray: 2.4.0
2023-06-02 13:52:35,837:INFO:            hyperopt: Not installed
2023-06-02 13:52:35,837:INFO:              optuna: Not installed
2023-06-02 13:52:35,837:INFO:               skopt: Not installed
2023-06-02 13:52:35,837:INFO:              mlflow: Not installed
2023-06-02 13:52:35,837:INFO:              gradio: Not installed
2023-06-02 13:52:35,837:INFO:             fastapi: Not installed
2023-06-02 13:52:35,837:INFO:             uvicorn: Not installed
2023-06-02 13:52:35,837:INFO:              m2cgen: Not installed
2023-06-02 13:52:35,837:INFO:           evidently: Not installed
2023-06-02 13:52:35,838:INFO:               fugue: Not installed
2023-06-02 13:52:35,838:INFO:           streamlit: Not installed
2023-06-02 13:52:35,838:INFO:             prophet: Not installed
2023-06-02 13:52:35,838:INFO:None
2023-06-02 13:52:35,838:INFO:Set up data.
2023-06-02 13:52:35,842:INFO:Set up train/test split.
2023-06-02 13:52:35,848:INFO:Set up index.
2023-06-02 13:52:35,848:INFO:Set up folding strategy.
2023-06-02 13:52:35,848:INFO:Assigning column types.
2023-06-02 13:52:35,851:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 13:52:35,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 13:52:35,930:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:35,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:35,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 13:52:36,051:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:36,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,095:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 13:52:36,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:36,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:52:36,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,327:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 13:52:36,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,562:INFO:Preparing preprocessing pipeline...
2023-06-02 13:52:36,563:INFO:Set up label encoding.
2023-06-02 13:52:36,563:INFO:Set up simple imputation.
2023-06-02 13:52:36,565:INFO:Set up encoding of categorical features.
2023-06-02 13:52:36,628:INFO:Finished creating preprocessing pipeline.
2023-06-02 13:52:36,638:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 13:52:36,638:INFO:Creating final display dataframe.
2023-06-02 13:52:36,860:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                2929  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               1d94  
2023-06-02 13:52:36,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:36,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:37,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:37,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:52:37,102:INFO:setup() successfully completed in 1.27s...............
2023-06-02 13:52:37,104:INFO:Initializing compare_models()
2023-06-02 13:52:37,104:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 13:52:37,104:INFO:Checking exceptions
2023-06-02 13:52:37,107:INFO:Preparing display monitor
2023-06-02 13:52:37,142:INFO:Initializing Logistic Regression
2023-06-02 13:52:37,142:INFO:Total runtime is 0.0 minutes
2023-06-02 13:52:37,147:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:37,147:INFO:Initializing create_model()
2023-06-02 13:52:37,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:37,148:INFO:Checking exceptions
2023-06-02 13:52:37,148:INFO:Importing libraries
2023-06-02 13:52:37,148:INFO:Copying training dataset
2023-06-02 13:52:37,153:INFO:Defining folds
2023-06-02 13:52:37,153:INFO:Declaring metric variables
2023-06-02 13:52:37,157:INFO:Importing untrained model
2023-06-02 13:52:37,162:INFO:Logistic Regression Imported successfully
2023-06-02 13:52:37,171:INFO:Starting cross validation
2023-06-02 13:52:37,173:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:44,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,167:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,167:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,169:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,169:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,169:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,169:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,169:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,170:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:44,170:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:44,170:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:44,170:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:44,170:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:44,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,172:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:44,222:INFO:Calculating mean and std
2023-06-02 13:52:44,224:INFO:Creating metrics dataframe
2023-06-02 13:52:44,237:INFO:Uploading results into container
2023-06-02 13:52:44,239:INFO:Uploading model into container now
2023-06-02 13:52:44,240:INFO:_master_model_container: 1
2023-06-02 13:52:44,240:INFO:_display_container: 2
2023-06-02 13:52:44,241:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 13:52:44,241:INFO:create_model() successfully completed......................................
2023-06-02 13:52:44,499:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:44,500:INFO:Creating metrics dataframe
2023-06-02 13:52:44,511:INFO:Initializing K Neighbors Classifier
2023-06-02 13:52:44,511:INFO:Total runtime is 0.1228138248125712 minutes
2023-06-02 13:52:44,516:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:44,517:INFO:Initializing create_model()
2023-06-02 13:52:44,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:44,517:INFO:Checking exceptions
2023-06-02 13:52:44,517:INFO:Importing libraries
2023-06-02 13:52:44,518:INFO:Copying training dataset
2023-06-02 13:52:44,523:INFO:Defining folds
2023-06-02 13:52:44,523:INFO:Declaring metric variables
2023-06-02 13:52:44,528:INFO:Importing untrained model
2023-06-02 13:52:44,532:INFO:K Neighbors Classifier Imported successfully
2023-06-02 13:52:44,540:INFO:Starting cross validation
2023-06-02 13:52:44,542:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:48,294:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,297:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,298:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,300:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,308:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,310:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,311:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,315:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,318:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,317:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,318:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,319:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,320:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,321:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,321:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,323:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,324:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,324:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,326:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,328:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,343:INFO:Calculating mean and std
2023-06-02 13:52:48,345:INFO:Creating metrics dataframe
2023-06-02 13:52:48,361:INFO:Uploading results into container
2023-06-02 13:52:48,362:INFO:Uploading model into container now
2023-06-02 13:52:48,363:INFO:_master_model_container: 2
2023-06-02 13:52:48,363:INFO:_display_container: 2
2023-06-02 13:52:48,364:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 13:52:48,364:INFO:create_model() successfully completed......................................
2023-06-02 13:52:48,611:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:48,611:INFO:Creating metrics dataframe
2023-06-02 13:52:48,625:INFO:Initializing Naive Bayes
2023-06-02 13:52:48,626:INFO:Total runtime is 0.19138007958730063 minutes
2023-06-02 13:52:48,630:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:48,630:INFO:Initializing create_model()
2023-06-02 13:52:48,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:48,631:INFO:Checking exceptions
2023-06-02 13:52:48,631:INFO:Importing libraries
2023-06-02 13:52:48,631:INFO:Copying training dataset
2023-06-02 13:52:48,635:INFO:Defining folds
2023-06-02 13:52:48,635:INFO:Declaring metric variables
2023-06-02 13:52:48,639:INFO:Importing untrained model
2023-06-02 13:52:48,644:INFO:Naive Bayes Imported successfully
2023-06-02 13:52:48,653:INFO:Starting cross validation
2023-06-02 13:52:48,654:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:48,900:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,903:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,904:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,905:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,914:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,916:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,918:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,919:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,921:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,924:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:48,925:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:48,926:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,835:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,836:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,837:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:51,839:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,839:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:51,840:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:51,849:INFO:Calculating mean and std
2023-06-02 13:52:51,851:INFO:Creating metrics dataframe
2023-06-02 13:52:51,863:INFO:Uploading results into container
2023-06-02 13:52:51,864:INFO:Uploading model into container now
2023-06-02 13:52:51,865:INFO:_master_model_container: 3
2023-06-02 13:52:51,865:INFO:_display_container: 2
2023-06-02 13:52:51,865:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 13:52:51,865:INFO:create_model() successfully completed......................................
2023-06-02 13:52:52,103:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:52,103:INFO:Creating metrics dataframe
2023-06-02 13:52:52,117:INFO:Initializing Decision Tree Classifier
2023-06-02 13:52:52,117:INFO:Total runtime is 0.24958026011784873 minutes
2023-06-02 13:52:52,121:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:52,121:INFO:Initializing create_model()
2023-06-02 13:52:52,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:52,121:INFO:Checking exceptions
2023-06-02 13:52:52,121:INFO:Importing libraries
2023-06-02 13:52:52,122:INFO:Copying training dataset
2023-06-02 13:52:52,126:INFO:Defining folds
2023-06-02 13:52:52,126:INFO:Declaring metric variables
2023-06-02 13:52:52,130:INFO:Importing untrained model
2023-06-02 13:52:52,135:INFO:Decision Tree Classifier Imported successfully
2023-06-02 13:52:52,143:INFO:Starting cross validation
2023-06-02 13:52:52,145:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:52,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,441:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,442:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,442:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,442:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,442:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,442:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:52,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:52,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:52,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,444:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,444:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,444:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,444:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,445:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:52,445:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:52,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:52,469:INFO:Calculating mean and std
2023-06-02 13:52:52,470:INFO:Creating metrics dataframe
2023-06-02 13:52:52,480:INFO:Uploading results into container
2023-06-02 13:52:52,481:INFO:Uploading model into container now
2023-06-02 13:52:52,482:INFO:_master_model_container: 4
2023-06-02 13:52:52,482:INFO:_display_container: 2
2023-06-02 13:52:52,482:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2929, splitter='best')
2023-06-02 13:52:52,482:INFO:create_model() successfully completed......................................
2023-06-02 13:52:52,692:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:52,692:INFO:Creating metrics dataframe
2023-06-02 13:52:52,706:INFO:Initializing SVM - Linear Kernel
2023-06-02 13:52:52,706:INFO:Total runtime is 0.2593972206115723 minutes
2023-06-02 13:52:52,710:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:52,710:INFO:Initializing create_model()
2023-06-02 13:52:52,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:52,710:INFO:Checking exceptions
2023-06-02 13:52:52,711:INFO:Importing libraries
2023-06-02 13:52:52,711:INFO:Copying training dataset
2023-06-02 13:52:52,715:INFO:Defining folds
2023-06-02 13:52:52,716:INFO:Declaring metric variables
2023-06-02 13:52:52,720:INFO:Importing untrained model
2023-06-02 13:52:52,724:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 13:52:52,732:INFO:Starting cross validation
2023-06-02 13:52:52,734:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:53,006:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 13:52:53,006:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 13:52:53,007:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 13:52:53,007:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 13:52:53,007:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,007:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,012:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,012:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,012:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,013:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,036:INFO:Calculating mean and std
2023-06-02 13:52:53,038:INFO:Creating metrics dataframe
2023-06-02 13:52:53,048:INFO:Uploading results into container
2023-06-02 13:52:53,049:INFO:Uploading model into container now
2023-06-02 13:52:53,049:INFO:_master_model_container: 5
2023-06-02 13:52:53,049:INFO:_display_container: 2
2023-06-02 13:52:53,050:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2929, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 13:52:53,050:INFO:create_model() successfully completed......................................
2023-06-02 13:52:53,257:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:53,258:INFO:Creating metrics dataframe
2023-06-02 13:52:53,272:INFO:Initializing Ridge Classifier
2023-06-02 13:52:53,272:INFO:Total runtime is 0.268835441271464 minutes
2023-06-02 13:52:53,276:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:53,276:INFO:Initializing create_model()
2023-06-02 13:52:53,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:53,277:INFO:Checking exceptions
2023-06-02 13:52:53,277:INFO:Importing libraries
2023-06-02 13:52:53,277:INFO:Copying training dataset
2023-06-02 13:52:53,281:INFO:Defining folds
2023-06-02 13:52:53,282:INFO:Declaring metric variables
2023-06-02 13:52:53,286:INFO:Importing untrained model
2023-06-02 13:52:53,291:INFO:Ridge Classifier Imported successfully
2023-06-02 13:52:53,299:INFO:Starting cross validation
2023-06-02 13:52:53,300:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:53,698:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 13:52:53,699:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,701:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,702:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 13:52:53,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,704:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,705:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 13:52:53,705:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,708:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,709:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 13:52:53,710:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,710:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 13:52:53,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:53,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:53,744:INFO:Calculating mean and std
2023-06-02 13:52:53,745:INFO:Creating metrics dataframe
2023-06-02 13:52:53,759:INFO:Uploading results into container
2023-06-02 13:52:53,760:INFO:Uploading model into container now
2023-06-02 13:52:53,760:INFO:_master_model_container: 6
2023-06-02 13:52:53,760:INFO:_display_container: 2
2023-06-02 13:52:53,761:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2929, solver='auto',
                tol=0.0001)
2023-06-02 13:52:53,761:INFO:create_model() successfully completed......................................
2023-06-02 13:52:53,968:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:53,968:INFO:Creating metrics dataframe
2023-06-02 13:52:53,982:INFO:Initializing Random Forest Classifier
2023-06-02 13:52:53,983:INFO:Total runtime is 0.2806928475697835 minutes
2023-06-02 13:52:53,987:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:53,987:INFO:Initializing create_model()
2023-06-02 13:52:53,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:53,987:INFO:Checking exceptions
2023-06-02 13:52:53,987:INFO:Importing libraries
2023-06-02 13:52:53,988:INFO:Copying training dataset
2023-06-02 13:52:53,992:INFO:Defining folds
2023-06-02 13:52:53,993:INFO:Declaring metric variables
2023-06-02 13:52:53,997:INFO:Importing untrained model
2023-06-02 13:52:54,001:INFO:Random Forest Classifier Imported successfully
2023-06-02 13:52:54,009:INFO:Starting cross validation
2023-06-02 13:52:54,011:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:54,944:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,947:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,949:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:54,950:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,964:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,964:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,966:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,966:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,968:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:54,968:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:54,969:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,970:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,971:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,972:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,974:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:54,975:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:54,975:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:54,976:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,012:INFO:Calculating mean and std
2023-06-02 13:52:55,014:INFO:Creating metrics dataframe
2023-06-02 13:52:55,032:INFO:Uploading results into container
2023-06-02 13:52:55,033:INFO:Uploading model into container now
2023-06-02 13:52:55,034:INFO:_master_model_container: 7
2023-06-02 13:52:55,034:INFO:_display_container: 2
2023-06-02 13:52:55,034:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2929, verbose=0, warm_start=False)
2023-06-02 13:52:55,034:INFO:create_model() successfully completed......................................
2023-06-02 13:52:55,242:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:55,242:INFO:Creating metrics dataframe
2023-06-02 13:52:55,257:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 13:52:55,257:INFO:Total runtime is 0.3019146720568339 minutes
2023-06-02 13:52:55,261:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:55,261:INFO:Initializing create_model()
2023-06-02 13:52:55,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:55,262:INFO:Checking exceptions
2023-06-02 13:52:55,262:INFO:Importing libraries
2023-06-02 13:52:55,262:INFO:Copying training dataset
2023-06-02 13:52:55,267:INFO:Defining folds
2023-06-02 13:52:55,267:INFO:Declaring metric variables
2023-06-02 13:52:55,271:INFO:Importing untrained model
2023-06-02 13:52:55,275:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 13:52:55,284:INFO:Starting cross validation
2023-06-02 13:52:55,286:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:55,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 13:52:55,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 13:52:55,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 13:52:55,534:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,534:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,538:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,538:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,538:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,587:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,588:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,588:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,589:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,590:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,590:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,592:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,592:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,592:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,595:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,596:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,596:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,596:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 13:52:55,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 13:52:55,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 13:52:55,598:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 13:52:55,598:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 13:52:55,599:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 13:52:55,599:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,600:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 13:52:55,600:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,601:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 13:52:55,601:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,602:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,602:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,602:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,602:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:55,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:55,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:55,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:55,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:55,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:55,657:INFO:Calculating mean and std
2023-06-02 13:52:55,658:INFO:Creating metrics dataframe
2023-06-02 13:52:55,677:INFO:Uploading results into container
2023-06-02 13:52:55,678:INFO:Uploading model into container now
2023-06-02 13:52:55,678:INFO:_master_model_container: 8
2023-06-02 13:52:55,678:INFO:_display_container: 2
2023-06-02 13:52:55,679:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 13:52:55,679:INFO:create_model() successfully completed......................................
2023-06-02 13:52:55,896:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:55,896:INFO:Creating metrics dataframe
2023-06-02 13:52:55,912:INFO:Initializing Ada Boost Classifier
2023-06-02 13:52:55,912:INFO:Total runtime is 0.3128297011057536 minutes
2023-06-02 13:52:55,916:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:55,917:INFO:Initializing create_model()
2023-06-02 13:52:55,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:55,917:INFO:Checking exceptions
2023-06-02 13:52:55,917:INFO:Importing libraries
2023-06-02 13:52:55,917:INFO:Copying training dataset
2023-06-02 13:52:55,922:INFO:Defining folds
2023-06-02 13:52:55,922:INFO:Declaring metric variables
2023-06-02 13:52:55,927:INFO:Importing untrained model
2023-06-02 13:52:55,931:INFO:Ada Boost Classifier Imported successfully
2023-06-02 13:52:55,940:INFO:Starting cross validation
2023-06-02 13:52:55,942:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:56,534:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,534:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,534:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:56,538:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:56,538:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:56,538:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,539:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,539:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,547:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,549:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:56,550:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,555:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,558:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,559:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:52:56,560:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:52:56,605:INFO:Calculating mean and std
2023-06-02 13:52:56,606:INFO:Creating metrics dataframe
2023-06-02 13:52:56,627:INFO:Uploading results into container
2023-06-02 13:52:56,628:INFO:Uploading model into container now
2023-06-02 13:52:56,628:INFO:_master_model_container: 9
2023-06-02 13:52:56,629:INFO:_display_container: 2
2023-06-02 13:52:56,629:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2929)
2023-06-02 13:52:56,629:INFO:create_model() successfully completed......................................
2023-06-02 13:52:56,845:INFO:SubProcess create_model() end ==================================
2023-06-02 13:52:56,845:INFO:Creating metrics dataframe
2023-06-02 13:52:56,861:INFO:Initializing Gradient Boosting Classifier
2023-06-02 13:52:56,862:INFO:Total runtime is 0.3286648948987325 minutes
2023-06-02 13:52:56,866:INFO:SubProcess create_model() called ==================================
2023-06-02 13:52:56,867:INFO:Initializing create_model()
2023-06-02 13:52:56,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:52:56,867:INFO:Checking exceptions
2023-06-02 13:52:56,867:INFO:Importing libraries
2023-06-02 13:52:56,867:INFO:Copying training dataset
2023-06-02 13:52:56,872:INFO:Defining folds
2023-06-02 13:52:56,872:INFO:Declaring metric variables
2023-06-02 13:52:56,876:INFO:Importing untrained model
2023-06-02 13:52:56,881:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 13:52:56,889:INFO:Starting cross validation
2023-06-02 13:52:56,891:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:52:58,804:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 13:52:58,825:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 13:52:58,826:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 13:52:58,846:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 13:52:58,851:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 13:53:00,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,486:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,488:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:00,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,492:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,495:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,497:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:00,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,506:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,508:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,510:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:00,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:00,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,513:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,539:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,540:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:00,541:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:00,579:INFO:Calculating mean and std
2023-06-02 13:53:00,581:INFO:Creating metrics dataframe
2023-06-02 13:53:00,608:INFO:Uploading results into container
2023-06-02 13:53:00,609:INFO:Uploading model into container now
2023-06-02 13:53:00,609:INFO:_master_model_container: 10
2023-06-02 13:53:00,609:INFO:_display_container: 2
2023-06-02 13:53:00,610:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2929, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 13:53:00,610:INFO:create_model() successfully completed......................................
2023-06-02 13:53:00,832:INFO:SubProcess create_model() end ==================================
2023-06-02 13:53:00,833:INFO:Creating metrics dataframe
2023-06-02 13:53:00,851:INFO:Initializing Linear Discriminant Analysis
2023-06-02 13:53:00,851:INFO:Total runtime is 0.39514883756637575 minutes
2023-06-02 13:53:00,855:INFO:SubProcess create_model() called ==================================
2023-06-02 13:53:00,856:INFO:Initializing create_model()
2023-06-02 13:53:00,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:00,856:INFO:Checking exceptions
2023-06-02 13:53:00,856:INFO:Importing libraries
2023-06-02 13:53:00,856:INFO:Copying training dataset
2023-06-02 13:53:00,861:INFO:Defining folds
2023-06-02 13:53:00,861:INFO:Declaring metric variables
2023-06-02 13:53:00,867:INFO:Importing untrained model
2023-06-02 13:53:00,871:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 13:53:00,880:INFO:Starting cross validation
2023-06-02 13:53:00,882:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:53:01,114:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,116:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,117:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:01,118:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,133:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,137:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:01,137:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,138:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,142:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:01,143:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,146:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,148:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,149:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,151:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:01,151:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,152:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,153:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:01,154:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:01,201:INFO:Calculating mean and std
2023-06-02 13:53:01,202:INFO:Creating metrics dataframe
2023-06-02 13:53:01,226:INFO:Uploading results into container
2023-06-02 13:53:01,227:INFO:Uploading model into container now
2023-06-02 13:53:01,228:INFO:_master_model_container: 11
2023-06-02 13:53:01,228:INFO:_display_container: 2
2023-06-02 13:53:01,228:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 13:53:01,228:INFO:create_model() successfully completed......................................
2023-06-02 13:53:01,442:INFO:SubProcess create_model() end ==================================
2023-06-02 13:53:01,442:INFO:Creating metrics dataframe
2023-06-02 13:53:01,459:INFO:Initializing Extra Trees Classifier
2023-06-02 13:53:01,459:INFO:Total runtime is 0.4052899559338888 minutes
2023-06-02 13:53:01,463:INFO:SubProcess create_model() called ==================================
2023-06-02 13:53:01,464:INFO:Initializing create_model()
2023-06-02 13:53:01,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:01,464:INFO:Checking exceptions
2023-06-02 13:53:01,464:INFO:Importing libraries
2023-06-02 13:53:01,464:INFO:Copying training dataset
2023-06-02 13:53:01,469:INFO:Defining folds
2023-06-02 13:53:01,469:INFO:Declaring metric variables
2023-06-02 13:53:01,474:INFO:Importing untrained model
2023-06-02 13:53:01,478:INFO:Extra Trees Classifier Imported successfully
2023-06-02 13:53:01,491:INFO:Starting cross validation
2023-06-02 13:53:01,494:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:53:02,362:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,365:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,366:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:02,367:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,376:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,379:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,381:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:02,382:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,383:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,385:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,386:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:02,387:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,394:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,395:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:02,396:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,411:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,414:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,415:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:02,416:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:02,463:INFO:Calculating mean and std
2023-06-02 13:53:02,465:INFO:Creating metrics dataframe
2023-06-02 13:53:02,493:INFO:Uploading results into container
2023-06-02 13:53:02,494:INFO:Uploading model into container now
2023-06-02 13:53:02,494:INFO:_master_model_container: 12
2023-06-02 13:53:02,494:INFO:_display_container: 2
2023-06-02 13:53:02,495:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2929, verbose=0, warm_start=False)
2023-06-02 13:53:02,495:INFO:create_model() successfully completed......................................
2023-06-02 13:53:02,703:INFO:SubProcess create_model() end ==================================
2023-06-02 13:53:02,703:INFO:Creating metrics dataframe
2023-06-02 13:53:02,722:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 13:53:02,722:INFO:Total runtime is 0.42633692423502606 minutes
2023-06-02 13:53:02,727:INFO:SubProcess create_model() called ==================================
2023-06-02 13:53:02,727:INFO:Initializing create_model()
2023-06-02 13:53:02,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:02,727:INFO:Checking exceptions
2023-06-02 13:53:02,728:INFO:Importing libraries
2023-06-02 13:53:02,728:INFO:Copying training dataset
2023-06-02 13:53:02,733:INFO:Defining folds
2023-06-02 13:53:02,733:INFO:Declaring metric variables
2023-06-02 13:53:02,737:INFO:Importing untrained model
2023-06-02 13:53:02,742:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 13:53:02,750:INFO:Starting cross validation
2023-06-02 13:53:02,752:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:53:04,337:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,339:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,341:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,342:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,343:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,346:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,347:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,349:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,350:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,352:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,354:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,355:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,395:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,397:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,399:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,400:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,414:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,416:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,417:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,418:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,442:INFO:Calculating mean and std
2023-06-02 13:53:04,443:INFO:Creating metrics dataframe
2023-06-02 13:53:04,472:INFO:Uploading results into container
2023-06-02 13:53:04,473:INFO:Uploading model into container now
2023-06-02 13:53:04,473:INFO:_master_model_container: 13
2023-06-02 13:53:04,474:INFO:_display_container: 2
2023-06-02 13:53:04,474:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2929, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 13:53:04,474:INFO:create_model() successfully completed......................................
2023-06-02 13:53:04,698:INFO:SubProcess create_model() end ==================================
2023-06-02 13:53:04,698:INFO:Creating metrics dataframe
2023-06-02 13:53:04,716:INFO:Initializing Dummy Classifier
2023-06-02 13:53:04,717:INFO:Total runtime is 0.4595804293950399 minutes
2023-06-02 13:53:04,721:INFO:SubProcess create_model() called ==================================
2023-06-02 13:53:04,721:INFO:Initializing create_model()
2023-06-02 13:53:04,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C6BAC80>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:04,722:INFO:Checking exceptions
2023-06-02 13:53:04,722:INFO:Importing libraries
2023-06-02 13:53:04,722:INFO:Copying training dataset
2023-06-02 13:53:04,726:INFO:Defining folds
2023-06-02 13:53:04,727:INFO:Declaring metric variables
2023-06-02 13:53:04,731:INFO:Importing untrained model
2023-06-02 13:53:04,735:INFO:Dummy Classifier Imported successfully
2023-06-02 13:53:04,742:INFO:Starting cross validation
2023-06-02 13:53:04,744:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:53:04,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,976:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,978:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,979:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,979:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,982:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,985:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,986:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,991:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,994:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,995:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,995:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:04,998:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:04,999:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:05,001:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:05,002:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:05,005:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:05,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:05,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:53:05,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:53:05,087:INFO:Calculating mean and std
2023-06-02 13:53:05,088:INFO:Creating metrics dataframe
2023-06-02 13:53:05,119:INFO:Uploading results into container
2023-06-02 13:53:05,120:INFO:Uploading model into container now
2023-06-02 13:53:05,120:INFO:_master_model_container: 14
2023-06-02 13:53:05,120:INFO:_display_container: 2
2023-06-02 13:53:05,120:INFO:DummyClassifier(constant=None, random_state=2929, strategy='prior')
2023-06-02 13:53:05,121:INFO:create_model() successfully completed......................................
2023-06-02 13:53:05,352:INFO:SubProcess create_model() end ==================================
2023-06-02 13:53:05,353:INFO:Creating metrics dataframe
2023-06-02 13:53:05,382:INFO:Initializing create_model()
2023-06-02 13:53:05,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:05,383:INFO:Checking exceptions
2023-06-02 13:53:05,385:INFO:Importing libraries
2023-06-02 13:53:05,385:INFO:Copying training dataset
2023-06-02 13:53:05,389:INFO:Defining folds
2023-06-02 13:53:05,389:INFO:Declaring metric variables
2023-06-02 13:53:05,390:INFO:Importing untrained model
2023-06-02 13:53:05,390:INFO:Declaring custom model
2023-06-02 13:53:05,390:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 13:53:05,391:INFO:Cross validation set to False
2023-06-02 13:53:05,392:INFO:Fitting Model
2023-06-02 13:53:05,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 13:53:05,487:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 13:53:05,488:INFO:create_model() successfully completed......................................
2023-06-02 13:53:05,705:INFO:Initializing create_model()
2023-06-02 13:53:05,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:05,705:INFO:Checking exceptions
2023-06-02 13:53:05,708:INFO:Importing libraries
2023-06-02 13:53:05,708:INFO:Copying training dataset
2023-06-02 13:53:05,712:INFO:Defining folds
2023-06-02 13:53:05,712:INFO:Declaring metric variables
2023-06-02 13:53:05,712:INFO:Importing untrained model
2023-06-02 13:53:05,712:INFO:Declaring custom model
2023-06-02 13:53:05,713:INFO:K Neighbors Classifier Imported successfully
2023-06-02 13:53:05,714:INFO:Cross validation set to False
2023-06-02 13:53:05,714:INFO:Fitting Model
2023-06-02 13:53:05,809:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 13:53:05,809:INFO:create_model() successfully completed......................................
2023-06-02 13:53:06,033:INFO:Initializing create_model()
2023-06-02 13:53:06,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:06,033:INFO:Checking exceptions
2023-06-02 13:53:06,036:INFO:Importing libraries
2023-06-02 13:53:06,036:INFO:Copying training dataset
2023-06-02 13:53:06,041:INFO:Defining folds
2023-06-02 13:53:06,041:INFO:Declaring metric variables
2023-06-02 13:53:06,042:INFO:Importing untrained model
2023-06-02 13:53:06,042:INFO:Declaring custom model
2023-06-02 13:53:06,042:INFO:Naive Bayes Imported successfully
2023-06-02 13:53:06,043:INFO:Cross validation set to False
2023-06-02 13:53:06,043:INFO:Fitting Model
2023-06-02 13:53:06,142:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 13:53:06,142:INFO:create_model() successfully completed......................................
2023-06-02 13:53:06,361:INFO:Initializing create_model()
2023-06-02 13:53:06,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2929, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:06,362:INFO:Checking exceptions
2023-06-02 13:53:06,365:INFO:Importing libraries
2023-06-02 13:53:06,365:INFO:Copying training dataset
2023-06-02 13:53:06,368:INFO:Defining folds
2023-06-02 13:53:06,369:INFO:Declaring metric variables
2023-06-02 13:53:06,369:INFO:Importing untrained model
2023-06-02 13:53:06,369:INFO:Declaring custom model
2023-06-02 13:53:06,370:INFO:Decision Tree Classifier Imported successfully
2023-06-02 13:53:06,371:INFO:Cross validation set to False
2023-06-02 13:53:06,371:INFO:Fitting Model
2023-06-02 13:53:06,465:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2929, splitter='best')
2023-06-02 13:53:06,465:INFO:create_model() successfully completed......................................
2023-06-02 13:53:06,683:INFO:Initializing create_model()
2023-06-02 13:53:06,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B135B9990>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2929, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:53:06,684:INFO:Checking exceptions
2023-06-02 13:53:06,686:INFO:Importing libraries
2023-06-02 13:53:06,686:INFO:Copying training dataset
2023-06-02 13:53:06,690:INFO:Defining folds
2023-06-02 13:53:06,690:INFO:Declaring metric variables
2023-06-02 13:53:06,690:INFO:Importing untrained model
2023-06-02 13:53:06,690:INFO:Declaring custom model
2023-06-02 13:53:06,691:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 13:53:06,692:INFO:Cross validation set to False
2023-06-02 13:53:06,693:INFO:Fitting Model
2023-06-02 13:53:06,799:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2929, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 13:53:06,800:INFO:create_model() successfully completed......................................
2023-06-02 13:53:07,049:INFO:_master_model_container: 14
2023-06-02 13:53:07,049:INFO:_display_container: 2
2023-06-02 13:53:07,051:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2929, splitter='best'), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2929, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-02 13:53:07,051:INFO:compare_models() successfully completed......................................
2023-06-02 13:59:49,938:INFO:PyCaret ClassificationExperiment
2023-06-02 13:59:49,938:INFO:Logging name: clf-default-name
2023-06-02 13:59:49,938:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 13:59:49,938:INFO:version 3.0.2
2023-06-02 13:59:49,938:INFO:Initializing setup()
2023-06-02 13:59:49,938:INFO:self.USI: 9354
2023-06-02 13:59:49,938:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'logging_param', '_ml_usecase', 'USI', 'idx', '_available_plots', 'gpu_param', 'y', 'memory', 'is_multiclass', 'log_plots_param', 'exp_id', 'data', 'pipeline', 'y_test', 'fix_imbalance', 'exp_name_log', 'seed', 'X_train', 'X', 'y_train', 'n_jobs_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'X_test', 'fold_groups_param'}
2023-06-02 13:59:49,938:INFO:Checking environment
2023-06-02 13:59:49,938:INFO:python_version: 3.10.9
2023-06-02 13:59:49,938:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-02 13:59:49,938:INFO:machine: AMD64
2023-06-02 13:59:49,938:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 13:59:49,939:INFO:Memory: svmem(total=17106501632, available=8718692352, percent=49.0, used=8387809280, free=8718692352)
2023-06-02 13:59:49,939:INFO:Physical Core: 6
2023-06-02 13:59:49,939:INFO:Logical Core: 12
2023-06-02 13:59:49,939:INFO:Checking libraries
2023-06-02 13:59:49,939:INFO:System:
2023-06-02 13:59:49,939:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-02 13:59:49,939:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-06-02 13:59:49,939:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 13:59:49,939:INFO:PyCaret required dependencies:
2023-06-02 13:59:49,939:INFO:                 pip: 22.3.1
2023-06-02 13:59:49,939:INFO:          setuptools: 65.6.3
2023-06-02 13:59:49,939:INFO:             pycaret: 3.0.2
2023-06-02 13:59:49,939:INFO:             IPython: 8.10.0
2023-06-02 13:59:49,940:INFO:          ipywidgets: 7.6.5
2023-06-02 13:59:49,940:INFO:                tqdm: 4.64.1
2023-06-02 13:59:49,940:INFO:               numpy: 1.23.5
2023-06-02 13:59:49,940:INFO:              pandas: 1.5.3
2023-06-02 13:59:49,940:INFO:              jinja2: 3.1.2
2023-06-02 13:59:49,940:INFO:               scipy: 1.10.0
2023-06-02 13:59:49,940:INFO:              joblib: 1.1.1
2023-06-02 13:59:49,940:INFO:             sklearn: 1.2.1
2023-06-02 13:59:49,940:INFO:                pyod: 1.0.9
2023-06-02 13:59:49,940:INFO:            imblearn: 0.10.1
2023-06-02 13:59:49,940:INFO:   category_encoders: 2.6.1
2023-06-02 13:59:49,940:INFO:            lightgbm: 3.3.5
2023-06-02 13:59:49,940:INFO:               numba: 0.56.4
2023-06-02 13:59:49,940:INFO:            requests: 2.28.1
2023-06-02 13:59:49,940:INFO:          matplotlib: 3.7.0
2023-06-02 13:59:49,941:INFO:          scikitplot: 0.3.7
2023-06-02 13:59:49,941:INFO:         yellowbrick: 1.5
2023-06-02 13:59:49,941:INFO:              plotly: 5.9.0
2023-06-02 13:59:49,941:INFO:             kaleido: 0.2.1
2023-06-02 13:59:49,941:INFO:         statsmodels: 0.13.5
2023-06-02 13:59:49,941:INFO:              sktime: 0.17.0
2023-06-02 13:59:49,941:INFO:               tbats: 1.1.3
2023-06-02 13:59:49,941:INFO:            pmdarima: 2.0.3
2023-06-02 13:59:49,941:INFO:              psutil: 5.9.0
2023-06-02 13:59:49,941:INFO:PyCaret optional dependencies:
2023-06-02 13:59:49,941:INFO:                shap: Not installed
2023-06-02 13:59:49,941:INFO:           interpret: Not installed
2023-06-02 13:59:49,941:INFO:                umap: Not installed
2023-06-02 13:59:49,941:INFO:    pandas_profiling: Not installed
2023-06-02 13:59:49,941:INFO:  explainerdashboard: Not installed
2023-06-02 13:59:49,942:INFO:             autoviz: Not installed
2023-06-02 13:59:49,942:INFO:           fairlearn: Not installed
2023-06-02 13:59:49,942:INFO:             xgboost: Not installed
2023-06-02 13:59:49,942:INFO:            catboost: Not installed
2023-06-02 13:59:49,942:INFO:              kmodes: Not installed
2023-06-02 13:59:49,942:INFO:             mlxtend: Not installed
2023-06-02 13:59:49,942:INFO:       statsforecast: Not installed
2023-06-02 13:59:49,942:INFO:        tune_sklearn: 0.4.5
2023-06-02 13:59:49,942:INFO:                 ray: 2.4.0
2023-06-02 13:59:49,942:INFO:            hyperopt: Not installed
2023-06-02 13:59:49,942:INFO:              optuna: Not installed
2023-06-02 13:59:49,942:INFO:               skopt: Not installed
2023-06-02 13:59:49,942:INFO:              mlflow: Not installed
2023-06-02 13:59:49,942:INFO:              gradio: Not installed
2023-06-02 13:59:49,943:INFO:             fastapi: Not installed
2023-06-02 13:59:49,943:INFO:             uvicorn: Not installed
2023-06-02 13:59:49,943:INFO:              m2cgen: Not installed
2023-06-02 13:59:49,943:INFO:           evidently: Not installed
2023-06-02 13:59:49,943:INFO:               fugue: Not installed
2023-06-02 13:59:49,943:INFO:           streamlit: Not installed
2023-06-02 13:59:49,943:INFO:             prophet: Not installed
2023-06-02 13:59:49,943:INFO:None
2023-06-02 13:59:49,943:INFO:Set up data.
2023-06-02 13:59:49,947:INFO:Set up train/test split.
2023-06-02 13:59:49,952:INFO:Set up index.
2023-06-02 13:59:49,952:INFO:Set up folding strategy.
2023-06-02 13:59:49,952:INFO:Assigning column types.
2023-06-02 13:59:49,956:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 13:59:50,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 13:59:50,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:59:50,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 13:59:50,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:59:50,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,190:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 13:59:50,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:59:50,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 13:59:50,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,429:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 13:59:50,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:50,666:INFO:Preparing preprocessing pipeline...
2023-06-02 13:59:50,668:INFO:Set up label encoding.
2023-06-02 13:59:50,668:INFO:Set up simple imputation.
2023-06-02 13:59:50,670:INFO:Set up encoding of categorical features.
2023-06-02 13:59:50,733:INFO:Finished creating preprocessing pipeline.
2023-06-02 13:59:50,742:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 13:59:50,742:INFO:Creating final display dataframe.
2023-06-02 13:59:50,971:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 903  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (240, 2)  
7                                             (60, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               9354  
2023-06-02 13:59:51,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:51,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:51,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:51,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 13:59:51,213:INFO:setup() successfully completed in 1.3s...............
2023-06-02 13:59:51,233:INFO:Initializing compare_models()
2023-06-02 13:59:51,233:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 13:59:51,233:INFO:Checking exceptions
2023-06-02 13:59:51,236:INFO:Preparing display monitor
2023-06-02 13:59:51,268:INFO:Initializing Logistic Regression
2023-06-02 13:59:51,268:INFO:Total runtime is 0.0 minutes
2023-06-02 13:59:51,274:INFO:SubProcess create_model() called ==================================
2023-06-02 13:59:51,277:INFO:Initializing create_model()
2023-06-02 13:59:51,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:59:51,278:INFO:Checking exceptions
2023-06-02 13:59:51,278:INFO:Importing libraries
2023-06-02 13:59:51,278:INFO:Copying training dataset
2023-06-02 13:59:51,284:INFO:Defining folds
2023-06-02 13:59:51,284:INFO:Declaring metric variables
2023-06-02 13:59:51,291:INFO:Importing untrained model
2023-06-02 13:59:51,298:INFO:Logistic Regression Imported successfully
2023-06-02 13:59:51,310:INFO:Starting cross validation
2023-06-02 13:59:51,312:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 13:59:58,091:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,093:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,094:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:59:58,095:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,096:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,098:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,099:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:59:58,101:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,111:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,113:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,116:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 13:59:58,136:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,137:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:59:58,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,141:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 13:59:58,142:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 13:59:58,200:INFO:Calculating mean and std
2023-06-02 13:59:58,203:INFO:Creating metrics dataframe
2023-06-02 13:59:58,236:INFO:Uploading results into container
2023-06-02 13:59:58,237:INFO:Uploading model into container now
2023-06-02 13:59:58,237:INFO:_master_model_container: 1
2023-06-02 13:59:58,237:INFO:_display_container: 2
2023-06-02 13:59:58,238:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=903, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 13:59:58,238:INFO:create_model() successfully completed......................................
2023-06-02 13:59:58,466:INFO:SubProcess create_model() end ==================================
2023-06-02 13:59:58,466:INFO:Creating metrics dataframe
2023-06-02 13:59:58,478:INFO:Initializing K Neighbors Classifier
2023-06-02 13:59:58,478:INFO:Total runtime is 0.12017621199289957 minutes
2023-06-02 13:59:58,482:INFO:SubProcess create_model() called ==================================
2023-06-02 13:59:58,483:INFO:Initializing create_model()
2023-06-02 13:59:58,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 13:59:58,483:INFO:Checking exceptions
2023-06-02 13:59:58,483:INFO:Importing libraries
2023-06-02 13:59:58,483:INFO:Copying training dataset
2023-06-02 13:59:58,488:INFO:Defining folds
2023-06-02 13:59:58,488:INFO:Declaring metric variables
2023-06-02 13:59:58,492:INFO:Importing untrained model
2023-06-02 13:59:58,496:INFO:K Neighbors Classifier Imported successfully
2023-06-02 13:59:58,506:INFO:Starting cross validation
2023-06-02 13:59:58,507:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:02,449:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,451:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,453:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:02,454:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,490:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,493:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,495:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:02,496:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,507:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,507:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,510:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,510:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:02,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:02,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,513:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:02,514:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:02,585:INFO:Calculating mean and std
2023-06-02 14:00:02,587:INFO:Creating metrics dataframe
2023-06-02 14:00:02,621:INFO:Uploading results into container
2023-06-02 14:00:02,622:INFO:Uploading model into container now
2023-06-02 14:00:02,623:INFO:_master_model_container: 2
2023-06-02 14:00:02,623:INFO:_display_container: 2
2023-06-02 14:00:02,623:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:00:02,623:INFO:create_model() successfully completed......................................
2023-06-02 14:00:02,840:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:02,840:INFO:Creating metrics dataframe
2023-06-02 14:00:02,853:INFO:Initializing Naive Bayes
2023-06-02 14:00:02,853:INFO:Total runtime is 0.1930844306945801 minutes
2023-06-02 14:00:02,857:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:02,857:INFO:Initializing create_model()
2023-06-02 14:00:02,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:02,858:INFO:Checking exceptions
2023-06-02 14:00:02,858:INFO:Importing libraries
2023-06-02 14:00:02,858:INFO:Copying training dataset
2023-06-02 14:00:02,862:INFO:Defining folds
2023-06-02 14:00:02,863:INFO:Declaring metric variables
2023-06-02 14:00:02,867:INFO:Importing untrained model
2023-06-02 14:00:02,872:INFO:Naive Bayes Imported successfully
2023-06-02 14:00:02,879:INFO:Starting cross validation
2023-06-02 14:00:02,880:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:03,141:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,144:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,145:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:03,146:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,147:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,150:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,152:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:03,153:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,154:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:03,154:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:03,156:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,060:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,062:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,062:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,063:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,064:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,064:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,065:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,066:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,092:INFO:Calculating mean and std
2023-06-02 14:00:06,093:INFO:Creating metrics dataframe
2023-06-02 14:00:06,123:INFO:Uploading results into container
2023-06-02 14:00:06,124:INFO:Uploading model into container now
2023-06-02 14:00:06,125:INFO:_master_model_container: 3
2023-06-02 14:00:06,125:INFO:_display_container: 2
2023-06-02 14:00:06,125:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:00:06,125:INFO:create_model() successfully completed......................................
2023-06-02 14:00:06,343:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:06,343:INFO:Creating metrics dataframe
2023-06-02 14:00:06,357:INFO:Initializing Decision Tree Classifier
2023-06-02 14:00:06,358:INFO:Total runtime is 0.2515018423398336 minutes
2023-06-02 14:00:06,362:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:06,362:INFO:Initializing create_model()
2023-06-02 14:00:06,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:06,362:INFO:Checking exceptions
2023-06-02 14:00:06,363:INFO:Importing libraries
2023-06-02 14:00:06,363:INFO:Copying training dataset
2023-06-02 14:00:06,367:INFO:Defining folds
2023-06-02 14:00:06,367:INFO:Declaring metric variables
2023-06-02 14:00:06,373:INFO:Importing untrained model
2023-06-02 14:00:06,377:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:00:06,385:INFO:Starting cross validation
2023-06-02 14:00:06,387:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:06,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,633:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,634:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,635:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,636:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,637:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,638:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,639:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,646:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,648:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,651:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,656:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,657:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,658:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,659:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,659:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,660:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,660:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:06,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:06,733:INFO:Calculating mean and std
2023-06-02 14:00:06,734:INFO:Creating metrics dataframe
2023-06-02 14:00:06,763:INFO:Uploading results into container
2023-06-02 14:00:06,763:INFO:Uploading model into container now
2023-06-02 14:00:06,764:INFO:_master_model_container: 4
2023-06-02 14:00:06,764:INFO:_display_container: 2
2023-06-02 14:00:06,764:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=903, splitter='best')
2023-06-02 14:00:06,765:INFO:create_model() successfully completed......................................
2023-06-02 14:00:06,987:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:06,987:INFO:Creating metrics dataframe
2023-06-02 14:00:07,001:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:00:07,002:INFO:Total runtime is 0.2622363289197286 minutes
2023-06-02 14:00:07,006:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:07,006:INFO:Initializing create_model()
2023-06-02 14:00:07,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:07,007:INFO:Checking exceptions
2023-06-02 14:00:07,007:INFO:Importing libraries
2023-06-02 14:00:07,007:INFO:Copying training dataset
2023-06-02 14:00:07,011:INFO:Defining folds
2023-06-02 14:00:07,011:INFO:Declaring metric variables
2023-06-02 14:00:07,015:INFO:Importing untrained model
2023-06-02 14:00:07,020:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:00:07,029:INFO:Starting cross validation
2023-06-02 14:00:07,031:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:07,202:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:00:07,204:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,207:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,208:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,210:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,219:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:00:07,220:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,222:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,223:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:00:07,223:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,224:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,224:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,226:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,227:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,228:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,232:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:00:07,233:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,236:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:00:07,237:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,238:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,239:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,240:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,241:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,243:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,304:INFO:Calculating mean and std
2023-06-02 14:00:07,305:INFO:Creating metrics dataframe
2023-06-02 14:00:07,332:INFO:Uploading results into container
2023-06-02 14:00:07,333:INFO:Uploading model into container now
2023-06-02 14:00:07,333:INFO:_master_model_container: 5
2023-06-02 14:00:07,334:INFO:_display_container: 2
2023-06-02 14:00:07,334:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=903, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:00:07,334:INFO:create_model() successfully completed......................................
2023-06-02 14:00:07,545:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:07,545:INFO:Creating metrics dataframe
2023-06-02 14:00:07,559:INFO:Initializing Ridge Classifier
2023-06-02 14:00:07,559:INFO:Total runtime is 0.2715207894643148 minutes
2023-06-02 14:00:07,563:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:07,564:INFO:Initializing create_model()
2023-06-02 14:00:07,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:07,564:INFO:Checking exceptions
2023-06-02 14:00:07,564:INFO:Importing libraries
2023-06-02 14:00:07,564:INFO:Copying training dataset
2023-06-02 14:00:07,569:INFO:Defining folds
2023-06-02 14:00:07,569:INFO:Declaring metric variables
2023-06-02 14:00:07,573:INFO:Importing untrained model
2023-06-02 14:00:07,578:INFO:Ridge Classifier Imported successfully
2023-06-02 14:00:07,586:INFO:Starting cross validation
2023-06-02 14:00:07,588:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:07,775:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:00:07,776:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,778:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,780:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:00:07,780:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,784:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,786:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,792:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:00:07,793:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,796:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,797:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,800:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:00:07,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,808:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:00:07,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,811:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,812:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:07,813:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:07,874:INFO:Calculating mean and std
2023-06-02 14:00:07,876:INFO:Creating metrics dataframe
2023-06-02 14:00:07,904:INFO:Uploading results into container
2023-06-02 14:00:07,905:INFO:Uploading model into container now
2023-06-02 14:00:07,905:INFO:_master_model_container: 6
2023-06-02 14:00:07,905:INFO:_display_container: 2
2023-06-02 14:00:07,906:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=903, solver='auto',
                tol=0.0001)
2023-06-02 14:00:07,906:INFO:create_model() successfully completed......................................
2023-06-02 14:00:08,121:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:08,121:INFO:Creating metrics dataframe
2023-06-02 14:00:08,136:INFO:Initializing Random Forest Classifier
2023-06-02 14:00:08,136:INFO:Total runtime is 0.2811442732810974 minutes
2023-06-02 14:00:08,140:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:08,141:INFO:Initializing create_model()
2023-06-02 14:00:08,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:08,141:INFO:Checking exceptions
2023-06-02 14:00:08,141:INFO:Importing libraries
2023-06-02 14:00:08,142:INFO:Copying training dataset
2023-06-02 14:00:08,146:INFO:Defining folds
2023-06-02 14:00:08,146:INFO:Declaring metric variables
2023-06-02 14:00:08,150:INFO:Importing untrained model
2023-06-02 14:00:08,156:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:00:08,164:INFO:Starting cross validation
2023-06-02 14:00:08,165:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:09,126:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,129:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,130:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,132:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,136:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,136:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,137:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,138:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,138:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,141:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,141:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,142:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,162:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,164:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,242:INFO:Calculating mean and std
2023-06-02 14:00:09,243:INFO:Creating metrics dataframe
2023-06-02 14:00:09,276:INFO:Uploading results into container
2023-06-02 14:00:09,277:INFO:Uploading model into container now
2023-06-02 14:00:09,277:INFO:_master_model_container: 7
2023-06-02 14:00:09,277:INFO:_display_container: 2
2023-06-02 14:00:09,278:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=903, verbose=0, warm_start=False)
2023-06-02 14:00:09,278:INFO:create_model() successfully completed......................................
2023-06-02 14:00:09,484:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:09,484:INFO:Creating metrics dataframe
2023-06-02 14:00:09,500:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:00:09,501:INFO:Total runtime is 0.30388122002283735 minutes
2023-06-02 14:00:09,505:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:09,506:INFO:Initializing create_model()
2023-06-02 14:00:09,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:09,506:INFO:Checking exceptions
2023-06-02 14:00:09,506:INFO:Importing libraries
2023-06-02 14:00:09,507:INFO:Copying training dataset
2023-06-02 14:00:09,511:INFO:Defining folds
2023-06-02 14:00:09,511:INFO:Declaring metric variables
2023-06-02 14:00:09,515:INFO:Importing untrained model
2023-06-02 14:00:09,520:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:00:09,528:INFO:Starting cross validation
2023-06-02 14:00:09,530:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:09,656:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:00:09,656:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:00:09,660:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:00:09,670:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:00:09,670:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:00:09,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,724:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,725:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,725:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,728:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,771:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,771:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,772:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,775:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:00:09,776:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,777:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,778:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,780:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,780:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,783:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,786:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:00:09,787:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:00:09,787:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,787:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:00:09,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:00:09,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:00:09,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,789:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,791:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:00:09,792:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,793:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:09,796:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:09,887:INFO:Calculating mean and std
2023-06-02 14:00:09,888:INFO:Creating metrics dataframe
2023-06-02 14:00:09,920:INFO:Uploading results into container
2023-06-02 14:00:09,921:INFO:Uploading model into container now
2023-06-02 14:00:09,921:INFO:_master_model_container: 8
2023-06-02 14:00:09,921:INFO:_display_container: 2
2023-06-02 14:00:09,922:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:00:09,922:INFO:create_model() successfully completed......................................
2023-06-02 14:00:10,133:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:10,133:INFO:Creating metrics dataframe
2023-06-02 14:00:10,149:INFO:Initializing Ada Boost Classifier
2023-06-02 14:00:10,149:INFO:Total runtime is 0.3146819869677226 minutes
2023-06-02 14:00:10,153:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:10,153:INFO:Initializing create_model()
2023-06-02 14:00:10,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:10,154:INFO:Checking exceptions
2023-06-02 14:00:10,154:INFO:Importing libraries
2023-06-02 14:00:10,154:INFO:Copying training dataset
2023-06-02 14:00:10,158:INFO:Defining folds
2023-06-02 14:00:10,159:INFO:Declaring metric variables
2023-06-02 14:00:10,163:INFO:Importing untrained model
2023-06-02 14:00:10,167:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:00:10,175:INFO:Starting cross validation
2023-06-02 14:00:10,177:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:10,637:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,640:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,641:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:10,643:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,743:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,745:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,746:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:10,747:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,753:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,755:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,756:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:10,757:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,764:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,767:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,768:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,768:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:10,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,771:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:10,772:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:10,838:INFO:Calculating mean and std
2023-06-02 14:00:10,840:INFO:Creating metrics dataframe
2023-06-02 14:00:10,874:INFO:Uploading results into container
2023-06-02 14:00:10,875:INFO:Uploading model into container now
2023-06-02 14:00:10,876:INFO:_master_model_container: 9
2023-06-02 14:00:10,876:INFO:_display_container: 2
2023-06-02 14:00:10,876:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=903)
2023-06-02 14:00:10,876:INFO:create_model() successfully completed......................................
2023-06-02 14:00:11,084:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:11,084:INFO:Creating metrics dataframe
2023-06-02 14:00:11,100:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:00:11,100:INFO:Total runtime is 0.3305330713589986 minutes
2023-06-02 14:00:11,104:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:11,104:INFO:Initializing create_model()
2023-06-02 14:00:11,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:11,105:INFO:Checking exceptions
2023-06-02 14:00:11,105:INFO:Importing libraries
2023-06-02 14:00:11,105:INFO:Copying training dataset
2023-06-02 14:00:11,110:INFO:Defining folds
2023-06-02 14:00:11,110:INFO:Declaring metric variables
2023-06-02 14:00:11,114:INFO:Importing untrained model
2023-06-02 14:00:11,119:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:00:11,127:INFO:Starting cross validation
2023-06-02 14:00:11,129:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:13,036:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:00:13,053:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:00:13,067:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:00:13,072:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:00:13,075:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:00:14,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,682:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,683:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:14,684:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,699:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,700:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:14,701:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,715:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:14,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,752:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,755:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,756:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:14,758:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,764:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,766:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,767:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:14,769:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:14,818:INFO:Calculating mean and std
2023-06-02 14:00:14,819:INFO:Creating metrics dataframe
2023-06-02 14:00:14,857:INFO:Uploading results into container
2023-06-02 14:00:14,858:INFO:Uploading model into container now
2023-06-02 14:00:14,858:INFO:_master_model_container: 10
2023-06-02 14:00:14,858:INFO:_display_container: 2
2023-06-02 14:00:14,859:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=903, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:00:14,859:INFO:create_model() successfully completed......................................
2023-06-02 14:00:15,067:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:15,067:INFO:Creating metrics dataframe
2023-06-02 14:00:15,083:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:00:15,083:INFO:Total runtime is 0.39692397117614747 minutes
2023-06-02 14:00:15,087:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:15,087:INFO:Initializing create_model()
2023-06-02 14:00:15,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:15,088:INFO:Checking exceptions
2023-06-02 14:00:15,088:INFO:Importing libraries
2023-06-02 14:00:15,088:INFO:Copying training dataset
2023-06-02 14:00:15,092:INFO:Defining folds
2023-06-02 14:00:15,093:INFO:Declaring metric variables
2023-06-02 14:00:15,096:INFO:Importing untrained model
2023-06-02 14:00:15,101:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:00:15,109:INFO:Starting cross validation
2023-06-02 14:00:15,111:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:15,329:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,331:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,333:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:15,334:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,337:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,340:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,341:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:15,342:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,356:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,358:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,359:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:15,360:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,362:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,364:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,366:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:15,368:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,377:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,379:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,380:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:15,381:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:15,479:INFO:Calculating mean and std
2023-06-02 14:00:15,481:INFO:Creating metrics dataframe
2023-06-02 14:00:15,525:INFO:Uploading results into container
2023-06-02 14:00:15,526:INFO:Uploading model into container now
2023-06-02 14:00:15,527:INFO:_master_model_container: 11
2023-06-02 14:00:15,527:INFO:_display_container: 2
2023-06-02 14:00:15,527:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:00:15,527:INFO:create_model() successfully completed......................................
2023-06-02 14:00:15,758:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:15,758:INFO:Creating metrics dataframe
2023-06-02 14:00:15,775:INFO:Initializing Extra Trees Classifier
2023-06-02 14:00:15,776:INFO:Total runtime is 0.40846225023269656 minutes
2023-06-02 14:00:15,780:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:15,780:INFO:Initializing create_model()
2023-06-02 14:00:15,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:15,780:INFO:Checking exceptions
2023-06-02 14:00:15,780:INFO:Importing libraries
2023-06-02 14:00:15,781:INFO:Copying training dataset
2023-06-02 14:00:15,784:INFO:Defining folds
2023-06-02 14:00:15,784:INFO:Declaring metric variables
2023-06-02 14:00:15,789:INFO:Importing untrained model
2023-06-02 14:00:15,794:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:00:15,803:INFO:Starting cross validation
2023-06-02 14:00:15,804:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:16,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,652:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,654:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:16,656:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,670:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,672:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,674:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:16,675:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,676:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,679:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:16,681:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,691:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,694:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,695:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:16,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,704:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:16,708:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:16,804:INFO:Calculating mean and std
2023-06-02 14:00:16,805:INFO:Creating metrics dataframe
2023-06-02 14:00:16,846:INFO:Uploading results into container
2023-06-02 14:00:16,847:INFO:Uploading model into container now
2023-06-02 14:00:16,847:INFO:_master_model_container: 12
2023-06-02 14:00:16,847:INFO:_display_container: 2
2023-06-02 14:00:16,848:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=903, verbose=0, warm_start=False)
2023-06-02 14:00:16,848:INFO:create_model() successfully completed......................................
2023-06-02 14:00:17,059:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:17,059:INFO:Creating metrics dataframe
2023-06-02 14:00:17,077:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:00:17,077:INFO:Total runtime is 0.4301597952842713 minutes
2023-06-02 14:00:17,082:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:17,082:INFO:Initializing create_model()
2023-06-02 14:00:17,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:17,083:INFO:Checking exceptions
2023-06-02 14:00:17,083:INFO:Importing libraries
2023-06-02 14:00:17,083:INFO:Copying training dataset
2023-06-02 14:00:17,087:INFO:Defining folds
2023-06-02 14:00:17,088:INFO:Declaring metric variables
2023-06-02 14:00:17,092:INFO:Importing untrained model
2023-06-02 14:00:17,097:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:00:17,105:INFO:Starting cross validation
2023-06-02 14:00:17,107:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:18,694:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,697:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:18,698:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,699:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,701:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,702:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:18,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,715:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:18,720:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,783:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:18,784:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,784:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,786:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:18,787:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:18,844:INFO:Calculating mean and std
2023-06-02 14:00:18,846:INFO:Creating metrics dataframe
2023-06-02 14:00:18,887:INFO:Uploading results into container
2023-06-02 14:00:18,888:INFO:Uploading model into container now
2023-06-02 14:00:18,888:INFO:_master_model_container: 13
2023-06-02 14:00:18,889:INFO:_display_container: 2
2023-06-02 14:00:18,889:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=903, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:00:18,889:INFO:create_model() successfully completed......................................
2023-06-02 14:00:19,111:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:19,111:INFO:Creating metrics dataframe
2023-06-02 14:00:19,130:INFO:Initializing Dummy Classifier
2023-06-02 14:00:19,130:INFO:Total runtime is 0.46436492602030444 minutes
2023-06-02 14:00:19,134:INFO:SubProcess create_model() called ==================================
2023-06-02 14:00:19,134:INFO:Initializing create_model()
2023-06-02 14:00:19,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B13771AE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:19,135:INFO:Checking exceptions
2023-06-02 14:00:19,135:INFO:Importing libraries
2023-06-02 14:00:19,135:INFO:Copying training dataset
2023-06-02 14:00:19,140:INFO:Defining folds
2023-06-02 14:00:19,140:INFO:Declaring metric variables
2023-06-02 14:00:19,144:INFO:Importing untrained model
2023-06-02 14:00:19,148:INFO:Dummy Classifier Imported successfully
2023-06-02 14:00:19,157:INFO:Starting cross validation
2023-06-02 14:00:19,158:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:00:19,406:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,408:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,410:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:19,411:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,415:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,416:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,418:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,418:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,420:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:19,420:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:19,421:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,422:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,423:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,426:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,426:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,428:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:19,429:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,429:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,430:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:00:19,432:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:00:19,557:INFO:Calculating mean and std
2023-06-02 14:00:19,559:INFO:Creating metrics dataframe
2023-06-02 14:00:19,601:INFO:Uploading results into container
2023-06-02 14:00:19,601:INFO:Uploading model into container now
2023-06-02 14:00:19,602:INFO:_master_model_container: 14
2023-06-02 14:00:19,602:INFO:_display_container: 2
2023-06-02 14:00:19,602:INFO:DummyClassifier(constant=None, random_state=903, strategy='prior')
2023-06-02 14:00:19,602:INFO:create_model() successfully completed......................................
2023-06-02 14:00:19,810:INFO:SubProcess create_model() end ==================================
2023-06-02 14:00:19,812:INFO:Creating metrics dataframe
2023-06-02 14:00:19,843:INFO:Initializing create_model()
2023-06-02 14:00:19,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=903, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:19,843:INFO:Checking exceptions
2023-06-02 14:00:19,845:INFO:Importing libraries
2023-06-02 14:00:19,846:INFO:Copying training dataset
2023-06-02 14:00:19,849:INFO:Defining folds
2023-06-02 14:00:19,849:INFO:Declaring metric variables
2023-06-02 14:00:19,850:INFO:Importing untrained model
2023-06-02 14:00:19,850:INFO:Declaring custom model
2023-06-02 14:00:19,851:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:00:19,852:INFO:Cross validation set to False
2023-06-02 14:00:19,852:INFO:Fitting Model
2023-06-02 14:00:19,992:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=903, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:00:19,992:INFO:create_model() successfully completed......................................
2023-06-02 14:00:20,221:INFO:Initializing create_model()
2023-06-02 14:00:20,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:20,222:INFO:Checking exceptions
2023-06-02 14:00:20,224:INFO:Importing libraries
2023-06-02 14:00:20,224:INFO:Copying training dataset
2023-06-02 14:00:20,229:INFO:Defining folds
2023-06-02 14:00:20,229:INFO:Declaring metric variables
2023-06-02 14:00:20,229:INFO:Importing untrained model
2023-06-02 14:00:20,229:INFO:Declaring custom model
2023-06-02 14:00:20,230:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:00:20,232:INFO:Cross validation set to False
2023-06-02 14:00:20,232:INFO:Fitting Model
2023-06-02 14:00:20,313:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:00:20,346:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:00:20,346:INFO:create_model() successfully completed......................................
2023-06-02 14:00:20,568:INFO:Initializing create_model()
2023-06-02 14:00:20,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:20,569:INFO:Checking exceptions
2023-06-02 14:00:20,572:INFO:Importing libraries
2023-06-02 14:00:20,573:INFO:Copying training dataset
2023-06-02 14:00:20,576:INFO:Defining folds
2023-06-02 14:00:20,576:INFO:Declaring metric variables
2023-06-02 14:00:20,576:INFO:Importing untrained model
2023-06-02 14:00:20,576:INFO:Declaring custom model
2023-06-02 14:00:20,577:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:00:20,578:INFO:Cross validation set to False
2023-06-02 14:00:20,578:INFO:Fitting Model
2023-06-02 14:00:20,686:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:00:20,686:INFO:create_model() successfully completed......................................
2023-06-02 14:00:20,903:INFO:Initializing create_model()
2023-06-02 14:00:20,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:20,903:INFO:Checking exceptions
2023-06-02 14:00:20,906:INFO:Importing libraries
2023-06-02 14:00:20,906:INFO:Copying training dataset
2023-06-02 14:00:20,910:INFO:Defining folds
2023-06-02 14:00:20,910:INFO:Declaring metric variables
2023-06-02 14:00:20,911:INFO:Importing untrained model
2023-06-02 14:00:20,911:INFO:Declaring custom model
2023-06-02 14:00:20,911:INFO:Naive Bayes Imported successfully
2023-06-02 14:00:20,912:INFO:Cross validation set to False
2023-06-02 14:00:20,912:INFO:Fitting Model
2023-06-02 14:00:21,020:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:00:21,021:INFO:create_model() successfully completed......................................
2023-06-02 14:00:21,237:INFO:Initializing create_model()
2023-06-02 14:00:21,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B1357B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=903, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:00:21,238:INFO:Checking exceptions
2023-06-02 14:00:21,240:INFO:Importing libraries
2023-06-02 14:00:21,241:INFO:Copying training dataset
2023-06-02 14:00:21,244:INFO:Defining folds
2023-06-02 14:00:21,244:INFO:Declaring metric variables
2023-06-02 14:00:21,244:INFO:Importing untrained model
2023-06-02 14:00:21,244:INFO:Declaring custom model
2023-06-02 14:00:21,245:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:00:21,246:INFO:Cross validation set to False
2023-06-02 14:00:21,246:INFO:Fitting Model
2023-06-02 14:00:21,355:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=903, splitter='best')
2023-06-02 14:00:21,355:INFO:create_model() successfully completed......................................
2023-06-02 14:00:21,603:INFO:_master_model_container: 14
2023-06-02 14:00:21,603:INFO:_display_container: 2
2023-06-02 14:00:21,605:INFO:[SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=903, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=903, splitter='best')]
2023-06-02 14:00:21,605:INFO:compare_models() successfully completed......................................
2023-06-02 14:02:23,155:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_14376\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 14:03:00,410:INFO:PyCaret ClassificationExperiment
2023-06-02 14:03:00,410:INFO:Logging name: clf-default-name
2023-06-02 14:03:00,410:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 14:03:00,410:INFO:version 3.0.2
2023-06-02 14:03:00,410:INFO:Initializing setup()
2023-06-02 14:03:00,411:INFO:self.USI: a106
2023-06-02 14:03:00,411:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'logging_param', '_ml_usecase', 'USI', 'idx', '_available_plots', 'gpu_param', 'y', 'memory', 'is_multiclass', 'log_plots_param', 'exp_id', 'data', 'pipeline', 'y_test', 'fix_imbalance', 'exp_name_log', 'seed', 'X_train', 'X', 'y_train', 'n_jobs_param', 'fold_generator', 'html_param', 'gpu_n_jobs_param', 'X_test', 'fold_groups_param'}
2023-06-02 14:03:00,411:INFO:Checking environment
2023-06-02 14:03:00,411:INFO:python_version: 3.10.9
2023-06-02 14:03:00,411:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-02 14:03:00,411:INFO:machine: AMD64
2023-06-02 14:03:00,411:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 14:03:00,411:INFO:Memory: svmem(total=17106501632, available=7091666944, percent=58.5, used=10014834688, free=7091666944)
2023-06-02 14:03:00,411:INFO:Physical Core: 6
2023-06-02 14:03:00,411:INFO:Logical Core: 12
2023-06-02 14:03:00,411:INFO:Checking libraries
2023-06-02 14:03:00,411:INFO:System:
2023-06-02 14:03:00,411:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-02 14:03:00,411:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-06-02 14:03:00,412:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 14:03:00,412:INFO:PyCaret required dependencies:
2023-06-02 14:03:00,412:INFO:                 pip: 22.3.1
2023-06-02 14:03:00,412:INFO:          setuptools: 65.6.3
2023-06-02 14:03:00,412:INFO:             pycaret: 3.0.2
2023-06-02 14:03:00,412:INFO:             IPython: 8.10.0
2023-06-02 14:03:00,412:INFO:          ipywidgets: 7.6.5
2023-06-02 14:03:00,412:INFO:                tqdm: 4.64.1
2023-06-02 14:03:00,412:INFO:               numpy: 1.23.5
2023-06-02 14:03:00,412:INFO:              pandas: 1.5.3
2023-06-02 14:03:00,412:INFO:              jinja2: 3.1.2
2023-06-02 14:03:00,412:INFO:               scipy: 1.10.0
2023-06-02 14:03:00,412:INFO:              joblib: 1.1.1
2023-06-02 14:03:00,412:INFO:             sklearn: 1.2.1
2023-06-02 14:03:00,412:INFO:                pyod: 1.0.9
2023-06-02 14:03:00,412:INFO:            imblearn: 0.10.1
2023-06-02 14:03:00,412:INFO:   category_encoders: 2.6.1
2023-06-02 14:03:00,413:INFO:            lightgbm: 3.3.5
2023-06-02 14:03:00,413:INFO:               numba: 0.56.4
2023-06-02 14:03:00,413:INFO:            requests: 2.28.1
2023-06-02 14:03:00,413:INFO:          matplotlib: 3.7.0
2023-06-02 14:03:00,413:INFO:          scikitplot: 0.3.7
2023-06-02 14:03:00,413:INFO:         yellowbrick: 1.5
2023-06-02 14:03:00,413:INFO:              plotly: 5.9.0
2023-06-02 14:03:00,413:INFO:             kaleido: 0.2.1
2023-06-02 14:03:00,413:INFO:         statsmodels: 0.13.5
2023-06-02 14:03:00,413:INFO:              sktime: 0.17.0
2023-06-02 14:03:00,413:INFO:               tbats: 1.1.3
2023-06-02 14:03:00,413:INFO:            pmdarima: 2.0.3
2023-06-02 14:03:00,413:INFO:              psutil: 5.9.0
2023-06-02 14:03:00,413:INFO:PyCaret optional dependencies:
2023-06-02 14:03:00,414:INFO:                shap: Not installed
2023-06-02 14:03:00,414:INFO:           interpret: Not installed
2023-06-02 14:03:00,414:INFO:                umap: Not installed
2023-06-02 14:03:00,414:INFO:    pandas_profiling: Not installed
2023-06-02 14:03:00,414:INFO:  explainerdashboard: Not installed
2023-06-02 14:03:00,414:INFO:             autoviz: Not installed
2023-06-02 14:03:00,414:INFO:           fairlearn: Not installed
2023-06-02 14:03:00,414:INFO:             xgboost: Not installed
2023-06-02 14:03:00,414:INFO:            catboost: Not installed
2023-06-02 14:03:00,414:INFO:              kmodes: Not installed
2023-06-02 14:03:00,414:INFO:             mlxtend: Not installed
2023-06-02 14:03:00,414:INFO:       statsforecast: Not installed
2023-06-02 14:03:00,414:INFO:        tune_sklearn: 0.4.5
2023-06-02 14:03:00,414:INFO:                 ray: 2.4.0
2023-06-02 14:03:00,414:INFO:            hyperopt: Not installed
2023-06-02 14:03:00,415:INFO:              optuna: Not installed
2023-06-02 14:03:00,415:INFO:               skopt: Not installed
2023-06-02 14:03:00,415:INFO:              mlflow: Not installed
2023-06-02 14:03:00,415:INFO:              gradio: Not installed
2023-06-02 14:03:00,415:INFO:             fastapi: Not installed
2023-06-02 14:03:00,415:INFO:             uvicorn: Not installed
2023-06-02 14:03:00,415:INFO:              m2cgen: Not installed
2023-06-02 14:03:00,415:INFO:           evidently: Not installed
2023-06-02 14:03:00,415:INFO:               fugue: Not installed
2023-06-02 14:03:00,415:INFO:           streamlit: Not installed
2023-06-02 14:03:00,415:INFO:             prophet: Not installed
2023-06-02 14:03:00,415:INFO:None
2023-06-02 14:03:00,415:INFO:Set up data.
2023-06-02 14:03:00,420:INFO:Set up train/test split.
2023-06-02 14:03:00,424:INFO:Set up index.
2023-06-02 14:03:00,424:INFO:Set up folding strategy.
2023-06-02 14:03:00,424:INFO:Assigning column types.
2023-06-02 14:03:00,427:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 14:03:00,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 14:03:00,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:03:00,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 14:03:00,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:03:00,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,693:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 14:03:00,765:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:03:00,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:03:00,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:00,926:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 14:03:01,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,166:INFO:Preparing preprocessing pipeline...
2023-06-02 14:03:01,167:INFO:Set up label encoding.
2023-06-02 14:03:01,167:INFO:Set up simple imputation.
2023-06-02 14:03:01,169:INFO:Set up encoding of categorical features.
2023-06-02 14:03:01,237:INFO:Finished creating preprocessing pipeline.
2023-06-02 14:03:01,247:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 14:03:01,247:INFO:Creating final display dataframe.
2023-06-02 14:03:01,480:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                8601  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               a106  
2023-06-02 14:03:01,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:03:01,734:INFO:setup() successfully completed in 1.36s...............
2023-06-02 14:03:01,767:INFO:Initializing compare_models()
2023-06-02 14:03:01,768:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 14:03:01,768:INFO:Checking exceptions
2023-06-02 14:03:01,771:INFO:Preparing display monitor
2023-06-02 14:03:01,813:INFO:Initializing Logistic Regression
2023-06-02 14:03:01,814:INFO:Total runtime is 1.665353775024414e-05 minutes
2023-06-02 14:03:01,821:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:01,822:INFO:Initializing create_model()
2023-06-02 14:03:01,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:01,822:INFO:Checking exceptions
2023-06-02 14:03:01,822:INFO:Importing libraries
2023-06-02 14:03:01,822:INFO:Copying training dataset
2023-06-02 14:03:01,828:INFO:Defining folds
2023-06-02 14:03:01,829:INFO:Declaring metric variables
2023-06-02 14:03:01,835:INFO:Importing untrained model
2023-06-02 14:03:01,840:INFO:Logistic Regression Imported successfully
2023-06-02 14:03:01,849:INFO:Starting cross validation
2023-06-02 14:03:01,852:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:02,104:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,106:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,107:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,108:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,116:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,118:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,119:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,119:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,120:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,122:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,124:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,126:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,131:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,133:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,147:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,149:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,150:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,151:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,256:INFO:Calculating mean and std
2023-06-02 14:03:02,257:INFO:Creating metrics dataframe
2023-06-02 14:03:02,298:INFO:Uploading results into container
2023-06-02 14:03:02,299:INFO:Uploading model into container now
2023-06-02 14:03:02,299:INFO:_master_model_container: 1
2023-06-02 14:03:02,299:INFO:_display_container: 2
2023-06-02 14:03:02,300:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8601, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:03:02,300:INFO:create_model() successfully completed......................................
2023-06-02 14:03:02,559:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:02,559:INFO:Creating metrics dataframe
2023-06-02 14:03:02,571:INFO:Initializing K Neighbors Classifier
2023-06-02 14:03:02,571:INFO:Total runtime is 0.012638163566589354 minutes
2023-06-02 14:03:02,575:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:02,575:INFO:Initializing create_model()
2023-06-02 14:03:02,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:02,575:INFO:Checking exceptions
2023-06-02 14:03:02,576:INFO:Importing libraries
2023-06-02 14:03:02,576:INFO:Copying training dataset
2023-06-02 14:03:02,580:INFO:Defining folds
2023-06-02 14:03:02,580:INFO:Declaring metric variables
2023-06-02 14:03:02,584:INFO:Importing untrained model
2023-06-02 14:03:02,588:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:03:02,597:INFO:Starting cross validation
2023-06-02 14:03:02,599:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:02,848:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,850:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,851:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,852:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,861:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,863:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,864:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,865:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,866:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,867:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,869:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,877:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,878:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,880:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,880:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,882:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:02,882:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:02,883:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,000:INFO:Calculating mean and std
2023-06-02 14:03:03,002:INFO:Creating metrics dataframe
2023-06-02 14:03:03,044:INFO:Uploading results into container
2023-06-02 14:03:03,045:INFO:Uploading model into container now
2023-06-02 14:03:03,045:INFO:_master_model_container: 2
2023-06-02 14:03:03,045:INFO:_display_container: 2
2023-06-02 14:03:03,046:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:03:03,046:INFO:create_model() successfully completed......................................
2023-06-02 14:03:03,257:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:03,257:INFO:Creating metrics dataframe
2023-06-02 14:03:03,270:INFO:Initializing Naive Bayes
2023-06-02 14:03:03,270:INFO:Total runtime is 0.02429401079813639 minutes
2023-06-02 14:03:03,274:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:03,274:INFO:Initializing create_model()
2023-06-02 14:03:03,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:03,275:INFO:Checking exceptions
2023-06-02 14:03:03,275:INFO:Importing libraries
2023-06-02 14:03:03,275:INFO:Copying training dataset
2023-06-02 14:03:03,280:INFO:Defining folds
2023-06-02 14:03:03,281:INFO:Declaring metric variables
2023-06-02 14:03:03,285:INFO:Importing untrained model
2023-06-02 14:03:03,289:INFO:Naive Bayes Imported successfully
2023-06-02 14:03:03,297:INFO:Starting cross validation
2023-06-02 14:03:03,299:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:03,523:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,526:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,528:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:03,529:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,529:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,531:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,531:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:03,532:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,539:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,542:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,543:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:03,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,547:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,548:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:03,549:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,551:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,552:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,554:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:03,554:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:03,672:INFO:Calculating mean and std
2023-06-02 14:03:03,674:INFO:Creating metrics dataframe
2023-06-02 14:03:03,718:INFO:Uploading results into container
2023-06-02 14:03:03,718:INFO:Uploading model into container now
2023-06-02 14:03:03,719:INFO:_master_model_container: 3
2023-06-02 14:03:03,719:INFO:_display_container: 2
2023-06-02 14:03:03,719:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:03:03,719:INFO:create_model() successfully completed......................................
2023-06-02 14:03:03,932:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:03,933:INFO:Creating metrics dataframe
2023-06-02 14:03:03,947:INFO:Initializing Decision Tree Classifier
2023-06-02 14:03:03,947:INFO:Total runtime is 0.03557257254918416 minutes
2023-06-02 14:03:03,951:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:03,952:INFO:Initializing create_model()
2023-06-02 14:03:03,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:03,952:INFO:Checking exceptions
2023-06-02 14:03:03,952:INFO:Importing libraries
2023-06-02 14:03:03,952:INFO:Copying training dataset
2023-06-02 14:03:03,957:INFO:Defining folds
2023-06-02 14:03:03,957:INFO:Declaring metric variables
2023-06-02 14:03:03,962:INFO:Importing untrained model
2023-06-02 14:03:03,966:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:03:03,974:INFO:Starting cross validation
2023-06-02 14:03:03,975:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:04,225:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,225:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,227:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,228:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,228:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,229:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,229:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,230:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,230:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,231:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,231:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,232:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,237:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,239:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,239:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,241:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,241:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,242:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,242:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,243:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,374:INFO:Calculating mean and std
2023-06-02 14:03:04,376:INFO:Creating metrics dataframe
2023-06-02 14:03:04,419:INFO:Uploading results into container
2023-06-02 14:03:04,420:INFO:Uploading model into container now
2023-06-02 14:03:04,420:INFO:_master_model_container: 4
2023-06-02 14:03:04,420:INFO:_display_container: 2
2023-06-02 14:03:04,421:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8601, splitter='best')
2023-06-02 14:03:04,421:INFO:create_model() successfully completed......................................
2023-06-02 14:03:04,633:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:04,633:INFO:Creating metrics dataframe
2023-06-02 14:03:04,646:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:03:04,646:INFO:Total runtime is 0.0472307284673055 minutes
2023-06-02 14:03:04,650:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:04,651:INFO:Initializing create_model()
2023-06-02 14:03:04,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:04,651:INFO:Checking exceptions
2023-06-02 14:03:04,651:INFO:Importing libraries
2023-06-02 14:03:04,652:INFO:Copying training dataset
2023-06-02 14:03:04,656:INFO:Defining folds
2023-06-02 14:03:04,657:INFO:Declaring metric variables
2023-06-02 14:03:04,661:INFO:Importing untrained model
2023-06-02 14:03:04,666:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:03:04,674:INFO:Starting cross validation
2023-06-02 14:03:04,675:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:04,864:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:03:04,865:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,865:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:03:04,866:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,867:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,869:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,870:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,871:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:03:04,871:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,874:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,875:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,876:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,877:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:03:04,878:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,883:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,884:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,887:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:03:04,888:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,890:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:04,891:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:04,892:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,013:INFO:Calculating mean and std
2023-06-02 14:03:05,014:INFO:Creating metrics dataframe
2023-06-02 14:03:05,056:INFO:Uploading results into container
2023-06-02 14:03:05,057:INFO:Uploading model into container now
2023-06-02 14:03:05,058:INFO:_master_model_container: 5
2023-06-02 14:03:05,058:INFO:_display_container: 2
2023-06-02 14:03:05,058:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8601, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:03:05,059:INFO:create_model() successfully completed......................................
2023-06-02 14:03:05,275:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:05,275:INFO:Creating metrics dataframe
2023-06-02 14:03:05,289:INFO:Initializing Ridge Classifier
2023-06-02 14:03:05,289:INFO:Total runtime is 0.057939851284027094 minutes
2023-06-02 14:03:05,293:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:05,293:INFO:Initializing create_model()
2023-06-02 14:03:05,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:05,294:INFO:Checking exceptions
2023-06-02 14:03:05,294:INFO:Importing libraries
2023-06-02 14:03:05,294:INFO:Copying training dataset
2023-06-02 14:03:05,299:INFO:Defining folds
2023-06-02 14:03:05,299:INFO:Declaring metric variables
2023-06-02 14:03:05,303:INFO:Importing untrained model
2023-06-02 14:03:05,307:INFO:Ridge Classifier Imported successfully
2023-06-02 14:03:05,315:INFO:Starting cross validation
2023-06-02 14:03:05,317:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:05,485:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:03:05,486:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,488:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:03:05,488:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:05,490:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,491:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,492:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:05,493:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,496:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:03:05,497:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,498:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:03:05,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,500:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:05,501:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,501:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,502:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:05,503:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,506:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:03:05,507:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:05,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:05,632:INFO:Calculating mean and std
2023-06-02 14:03:05,634:INFO:Creating metrics dataframe
2023-06-02 14:03:05,676:INFO:Uploading results into container
2023-06-02 14:03:05,676:INFO:Uploading model into container now
2023-06-02 14:03:05,677:INFO:_master_model_container: 6
2023-06-02 14:03:05,677:INFO:_display_container: 2
2023-06-02 14:03:05,677:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8601, solver='auto',
                tol=0.0001)
2023-06-02 14:03:05,678:INFO:create_model() successfully completed......................................
2023-06-02 14:03:05,891:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:05,891:INFO:Creating metrics dataframe
2023-06-02 14:03:05,906:INFO:Initializing Random Forest Classifier
2023-06-02 14:03:05,906:INFO:Total runtime is 0.06822636524836222 minutes
2023-06-02 14:03:05,910:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:05,910:INFO:Initializing create_model()
2023-06-02 14:03:05,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:05,911:INFO:Checking exceptions
2023-06-02 14:03:05,911:INFO:Importing libraries
2023-06-02 14:03:05,911:INFO:Copying training dataset
2023-06-02 14:03:05,916:INFO:Defining folds
2023-06-02 14:03:05,917:INFO:Declaring metric variables
2023-06-02 14:03:05,921:INFO:Importing untrained model
2023-06-02 14:03:05,925:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:03:05,934:INFO:Starting cross validation
2023-06-02 14:03:05,936:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:06,848:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,850:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,850:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:06,853:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,861:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,863:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,864:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,864:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,866:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,866:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:06,866:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,867:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:06,867:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:06,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,870:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:06,872:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:06,874:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,009:INFO:Calculating mean and std
2023-06-02 14:03:07,011:INFO:Creating metrics dataframe
2023-06-02 14:03:07,055:INFO:Uploading results into container
2023-06-02 14:03:07,056:INFO:Uploading model into container now
2023-06-02 14:03:07,056:INFO:_master_model_container: 7
2023-06-02 14:03:07,057:INFO:_display_container: 2
2023-06-02 14:03:07,057:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8601, verbose=0, warm_start=False)
2023-06-02 14:03:07,057:INFO:create_model() successfully completed......................................
2023-06-02 14:03:07,274:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:07,275:INFO:Creating metrics dataframe
2023-06-02 14:03:07,295:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:03:07,296:INFO:Total runtime is 0.09138471682866414 minutes
2023-06-02 14:03:07,303:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:07,303:INFO:Initializing create_model()
2023-06-02 14:03:07,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:07,304:INFO:Checking exceptions
2023-06-02 14:03:07,304:INFO:Importing libraries
2023-06-02 14:03:07,304:INFO:Copying training dataset
2023-06-02 14:03:07,309:INFO:Defining folds
2023-06-02 14:03:07,309:INFO:Declaring metric variables
2023-06-02 14:03:07,316:INFO:Importing untrained model
2023-06-02 14:03:07,322:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:03:07,332:INFO:Starting cross validation
2023-06-02 14:03:07,334:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:07,454:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:03:07,457:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:03:07,465:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:03:07,466:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:03:07,470:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:03:07,508:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,518:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,519:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,519:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,521:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,522:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,522:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,527:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,528:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,528:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,564:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,564:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,565:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,569:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:03:07,570:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,572:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,573:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,574:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:07,574:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,574:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,575:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,578:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,578:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,579:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,579:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:03:07,580:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,583:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:03:07,583:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,584:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,584:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:07,584:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,585:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,585:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,585:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,586:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,587:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:03:07,588:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:07,588:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,589:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,590:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:03:07,590:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,590:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:03:07,591:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:03:07,591:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:07,593:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,595:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:03:07,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,599:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,602:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:07,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:07,741:INFO:Calculating mean and std
2023-06-02 14:03:07,742:INFO:Creating metrics dataframe
2023-06-02 14:03:07,788:INFO:Uploading results into container
2023-06-02 14:03:07,789:INFO:Uploading model into container now
2023-06-02 14:03:07,790:INFO:_master_model_container: 8
2023-06-02 14:03:07,790:INFO:_display_container: 2
2023-06-02 14:03:07,790:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:03:07,790:INFO:create_model() successfully completed......................................
2023-06-02 14:03:08,007:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:08,007:INFO:Creating metrics dataframe
2023-06-02 14:03:08,023:INFO:Initializing Ada Boost Classifier
2023-06-02 14:03:08,023:INFO:Total runtime is 0.10350281794865926 minutes
2023-06-02 14:03:08,026:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:08,027:INFO:Initializing create_model()
2023-06-02 14:03:08,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:08,027:INFO:Checking exceptions
2023-06-02 14:03:08,028:INFO:Importing libraries
2023-06-02 14:03:08,028:INFO:Copying training dataset
2023-06-02 14:03:08,032:INFO:Defining folds
2023-06-02 14:03:08,032:INFO:Declaring metric variables
2023-06-02 14:03:08,037:INFO:Importing untrained model
2023-06-02 14:03:08,041:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:03:08,050:INFO:Starting cross validation
2023-06-02 14:03:08,052:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:08,546:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,549:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,551:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:08,552:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,652:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,653:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:08,654:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,665:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:08,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:08,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,667:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,668:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,671:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,673:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:08,674:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:08,788:INFO:Calculating mean and std
2023-06-02 14:03:08,790:INFO:Creating metrics dataframe
2023-06-02 14:03:08,840:INFO:Uploading results into container
2023-06-02 14:03:08,841:INFO:Uploading model into container now
2023-06-02 14:03:08,842:INFO:_master_model_container: 9
2023-06-02 14:03:08,842:INFO:_display_container: 2
2023-06-02 14:03:08,842:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8601)
2023-06-02 14:03:08,842:INFO:create_model() successfully completed......................................
2023-06-02 14:03:09,052:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:09,053:INFO:Creating metrics dataframe
2023-06-02 14:03:09,069:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:03:09,070:INFO:Total runtime is 0.12096037864685058 minutes
2023-06-02 14:03:09,074:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:09,074:INFO:Initializing create_model()
2023-06-02 14:03:09,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:09,074:INFO:Checking exceptions
2023-06-02 14:03:09,074:INFO:Importing libraries
2023-06-02 14:03:09,075:INFO:Copying training dataset
2023-06-02 14:03:09,080:INFO:Defining folds
2023-06-02 14:03:09,080:INFO:Declaring metric variables
2023-06-02 14:03:09,084:INFO:Importing untrained model
2023-06-02 14:03:09,088:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:03:09,097:INFO:Starting cross validation
2023-06-02 14:03:09,099:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:10,998:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:03:11,009:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:03:11,033:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:03:11,058:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:03:11,059:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:03:12,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,713:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:12,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:12,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,725:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,728:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:12,730:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,750:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,752:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,754:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:12,755:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,792:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:12,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:12,903:INFO:Calculating mean and std
2023-06-02 14:03:12,904:INFO:Creating metrics dataframe
2023-06-02 14:03:12,956:INFO:Uploading results into container
2023-06-02 14:03:12,956:INFO:Uploading model into container now
2023-06-02 14:03:12,957:INFO:_master_model_container: 10
2023-06-02 14:03:12,957:INFO:_display_container: 2
2023-06-02 14:03:12,957:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8601, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:03:12,958:INFO:create_model() successfully completed......................................
2023-06-02 14:03:13,171:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:13,172:INFO:Creating metrics dataframe
2023-06-02 14:03:13,188:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:03:13,189:INFO:Total runtime is 0.18960465590159098 minutes
2023-06-02 14:03:13,193:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:13,193:INFO:Initializing create_model()
2023-06-02 14:03:13,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:13,194:INFO:Checking exceptions
2023-06-02 14:03:13,194:INFO:Importing libraries
2023-06-02 14:03:13,194:INFO:Copying training dataset
2023-06-02 14:03:13,199:INFO:Defining folds
2023-06-02 14:03:13,199:INFO:Declaring metric variables
2023-06-02 14:03:13,203:INFO:Importing untrained model
2023-06-02 14:03:13,207:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:03:13,216:INFO:Starting cross validation
2023-06-02 14:03:13,218:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:13,437:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:13,441:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,445:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:13,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,448:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,450:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:13,451:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,463:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,465:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,466:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:13,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,470:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,472:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,473:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:13,474:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:13,624:INFO:Calculating mean and std
2023-06-02 14:03:13,626:INFO:Creating metrics dataframe
2023-06-02 14:03:13,679:INFO:Uploading results into container
2023-06-02 14:03:13,680:INFO:Uploading model into container now
2023-06-02 14:03:13,680:INFO:_master_model_container: 11
2023-06-02 14:03:13,680:INFO:_display_container: 2
2023-06-02 14:03:13,681:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:03:13,681:INFO:create_model() successfully completed......................................
2023-06-02 14:03:13,889:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:13,890:INFO:Creating metrics dataframe
2023-06-02 14:03:13,908:INFO:Initializing Extra Trees Classifier
2023-06-02 14:03:13,908:INFO:Total runtime is 0.20159722169240316 minutes
2023-06-02 14:03:13,912:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:13,912:INFO:Initializing create_model()
2023-06-02 14:03:13,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:13,912:INFO:Checking exceptions
2023-06-02 14:03:13,913:INFO:Importing libraries
2023-06-02 14:03:13,913:INFO:Copying training dataset
2023-06-02 14:03:13,917:INFO:Defining folds
2023-06-02 14:03:13,918:INFO:Declaring metric variables
2023-06-02 14:03:13,922:INFO:Importing untrained model
2023-06-02 14:03:13,926:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:03:13,935:INFO:Starting cross validation
2023-06-02 14:03:13,936:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:14,766:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,768:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,769:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:14,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,796:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:14,798:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,807:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:14,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,813:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,816:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,818:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:14,819:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,879:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,882:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:14,883:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:14,972:INFO:Calculating mean and std
2023-06-02 14:03:14,974:INFO:Creating metrics dataframe
2023-06-02 14:03:15,028:INFO:Uploading results into container
2023-06-02 14:03:15,029:INFO:Uploading model into container now
2023-06-02 14:03:15,029:INFO:_master_model_container: 12
2023-06-02 14:03:15,029:INFO:_display_container: 2
2023-06-02 14:03:15,030:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8601, verbose=0, warm_start=False)
2023-06-02 14:03:15,030:INFO:create_model() successfully completed......................................
2023-06-02 14:03:15,239:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:15,240:INFO:Creating metrics dataframe
2023-06-02 14:03:15,258:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:03:15,258:INFO:Total runtime is 0.22408316135406495 minutes
2023-06-02 14:03:15,262:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:15,262:INFO:Initializing create_model()
2023-06-02 14:03:15,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:15,263:INFO:Checking exceptions
2023-06-02 14:03:15,263:INFO:Importing libraries
2023-06-02 14:03:15,263:INFO:Copying training dataset
2023-06-02 14:03:15,267:INFO:Defining folds
2023-06-02 14:03:15,268:INFO:Declaring metric variables
2023-06-02 14:03:15,272:INFO:Importing untrained model
2023-06-02 14:03:15,276:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:03:15,285:INFO:Starting cross validation
2023-06-02 14:03:15,286:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:15,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:15,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:15,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:15,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:15,629:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:15,630:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:15,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:15,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,732:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,735:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,737:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:16,738:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,773:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,776:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,778:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:16,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,810:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,812:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:16,813:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:16,841:INFO:Calculating mean and std
2023-06-02 14:03:16,842:INFO:Creating metrics dataframe
2023-06-02 14:03:16,900:INFO:Uploading results into container
2023-06-02 14:03:16,900:INFO:Uploading model into container now
2023-06-02 14:03:16,901:INFO:_master_model_container: 13
2023-06-02 14:03:16,901:INFO:_display_container: 2
2023-06-02 14:03:16,902:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8601, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:03:16,902:INFO:create_model() successfully completed......................................
2023-06-02 14:03:17,116:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:17,116:INFO:Creating metrics dataframe
2023-06-02 14:03:17,133:INFO:Initializing Dummy Classifier
2023-06-02 14:03:17,133:INFO:Total runtime is 0.2553472359975179 minutes
2023-06-02 14:03:17,137:INFO:SubProcess create_model() called ==================================
2023-06-02 14:03:17,138:INFO:Initializing create_model()
2023-06-02 14:03:17,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B0C75C5E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:17,138:INFO:Checking exceptions
2023-06-02 14:03:17,138:INFO:Importing libraries
2023-06-02 14:03:17,138:INFO:Copying training dataset
2023-06-02 14:03:17,143:INFO:Defining folds
2023-06-02 14:03:17,143:INFO:Declaring metric variables
2023-06-02 14:03:17,151:INFO:Importing untrained model
2023-06-02 14:03:17,155:INFO:Dummy Classifier Imported successfully
2023-06-02 14:03:17,164:INFO:Starting cross validation
2023-06-02 14:03:17,165:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:03:17,376:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,378:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,379:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:17,380:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,389:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,392:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:17,394:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,398:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,400:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,401:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:17,402:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,408:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,409:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,410:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,411:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:17,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,413:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:03:17,414:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:03:17,575:INFO:Calculating mean and std
2023-06-02 14:03:17,577:INFO:Creating metrics dataframe
2023-06-02 14:03:17,643:INFO:Uploading results into container
2023-06-02 14:03:17,644:INFO:Uploading model into container now
2023-06-02 14:03:17,645:INFO:_master_model_container: 14
2023-06-02 14:03:17,645:INFO:_display_container: 2
2023-06-02 14:03:17,645:INFO:DummyClassifier(constant=None, random_state=8601, strategy='prior')
2023-06-02 14:03:17,645:INFO:create_model() successfully completed......................................
2023-06-02 14:03:17,858:INFO:SubProcess create_model() end ==================================
2023-06-02 14:03:17,858:INFO:Creating metrics dataframe
2023-06-02 14:03:17,888:INFO:Initializing create_model()
2023-06-02 14:03:17,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8601, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:17,889:INFO:Checking exceptions
2023-06-02 14:03:17,891:INFO:Importing libraries
2023-06-02 14:03:17,891:INFO:Copying training dataset
2023-06-02 14:03:17,895:INFO:Defining folds
2023-06-02 14:03:17,896:INFO:Declaring metric variables
2023-06-02 14:03:17,896:INFO:Importing untrained model
2023-06-02 14:03:17,896:INFO:Declaring custom model
2023-06-02 14:03:17,897:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:03:17,898:INFO:Cross validation set to False
2023-06-02 14:03:17,898:INFO:Fitting Model
2023-06-02 14:03:18,031:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8601, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:03:18,031:INFO:create_model() successfully completed......................................
2023-06-02 14:03:18,249:INFO:Initializing create_model()
2023-06-02 14:03:18,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:18,249:INFO:Checking exceptions
2023-06-02 14:03:18,252:INFO:Importing libraries
2023-06-02 14:03:18,252:INFO:Copying training dataset
2023-06-02 14:03:18,256:INFO:Defining folds
2023-06-02 14:03:18,256:INFO:Declaring metric variables
2023-06-02 14:03:18,256:INFO:Importing untrained model
2023-06-02 14:03:18,256:INFO:Declaring custom model
2023-06-02 14:03:18,257:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:03:18,258:INFO:Cross validation set to False
2023-06-02 14:03:18,258:INFO:Fitting Model
2023-06-02 14:03:18,378:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:03:18,378:INFO:create_model() successfully completed......................................
2023-06-02 14:03:18,592:INFO:Initializing create_model()
2023-06-02 14:03:18,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:18,593:INFO:Checking exceptions
2023-06-02 14:03:18,595:INFO:Importing libraries
2023-06-02 14:03:18,596:INFO:Copying training dataset
2023-06-02 14:03:18,599:INFO:Defining folds
2023-06-02 14:03:18,600:INFO:Declaring metric variables
2023-06-02 14:03:18,600:INFO:Importing untrained model
2023-06-02 14:03:18,600:INFO:Declaring custom model
2023-06-02 14:03:18,600:INFO:Naive Bayes Imported successfully
2023-06-02 14:03:18,602:INFO:Cross validation set to False
2023-06-02 14:03:18,602:INFO:Fitting Model
2023-06-02 14:03:18,731:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:03:18,731:INFO:create_model() successfully completed......................................
2023-06-02 14:03:18,952:INFO:Initializing create_model()
2023-06-02 14:03:18,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8601, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:18,952:INFO:Checking exceptions
2023-06-02 14:03:18,954:INFO:Importing libraries
2023-06-02 14:03:18,955:INFO:Copying training dataset
2023-06-02 14:03:18,958:INFO:Defining folds
2023-06-02 14:03:18,958:INFO:Declaring metric variables
2023-06-02 14:03:18,958:INFO:Importing untrained model
2023-06-02 14:03:18,958:INFO:Declaring custom model
2023-06-02 14:03:18,959:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:03:18,960:INFO:Cross validation set to False
2023-06-02 14:03:18,960:INFO:Fitting Model
2023-06-02 14:03:19,079:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8601, splitter='best')
2023-06-02 14:03:19,079:INFO:create_model() successfully completed......................................
2023-06-02 14:03:19,296:INFO:Initializing create_model()
2023-06-02 14:03:19,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B136E50C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8601, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:03:19,296:INFO:Checking exceptions
2023-06-02 14:03:19,298:INFO:Importing libraries
2023-06-02 14:03:19,299:INFO:Copying training dataset
2023-06-02 14:03:19,302:INFO:Defining folds
2023-06-02 14:03:19,302:INFO:Declaring metric variables
2023-06-02 14:03:19,302:INFO:Importing untrained model
2023-06-02 14:03:19,302:INFO:Declaring custom model
2023-06-02 14:03:19,303:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:03:19,304:INFO:Cross validation set to False
2023-06-02 14:03:19,304:INFO:Fitting Model
2023-06-02 14:03:19,792:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8601, verbose=0, warm_start=False)
2023-06-02 14:03:19,792:INFO:create_model() successfully completed......................................
2023-06-02 14:03:20,035:INFO:_master_model_container: 14
2023-06-02 14:03:20,035:INFO:_display_container: 2
2023-06-02 14:03:20,037:INFO:[SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8601, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8601, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8601, verbose=0, warm_start=False)]
2023-06-02 14:03:20,037:INFO:compare_models() successfully completed......................................
2023-06-02 14:08:06,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:08:06,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:08:06,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:08:06,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:08:07,858:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 14:08:08,128:INFO:PyCaret ClassificationExperiment
2023-06-02 14:08:08,128:INFO:Logging name: clf-default-name
2023-06-02 14:08:08,128:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 14:08:08,128:INFO:version 3.0.2
2023-06-02 14:08:08,128:INFO:Initializing setup()
2023-06-02 14:08:08,128:INFO:self.USI: 313a
2023-06-02 14:08:08,128:INFO:self._variable_keys: {'logging_param', 'exp_id', '_ml_usecase', 'fold_generator', 'data', 'USI', 'y_test', 'memory', 'exp_name_log', 'fold_groups_param', 'X_test', 'X', 'log_plots_param', 'is_multiclass', 'idx', '_available_plots', 'fold_shuffle_param', 'X_train', 'gpu_n_jobs_param', 'html_param', 'target_param', 'y', 'pipeline', 'fix_imbalance', 'seed', 'gpu_param', 'y_train', 'n_jobs_param'}
2023-06-02 14:08:08,129:INFO:Checking environment
2023-06-02 14:08:08,129:INFO:python_version: 3.10.9
2023-06-02 14:08:08,129:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-02 14:08:08,129:INFO:machine: AMD64
2023-06-02 14:08:08,129:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 14:08:08,129:INFO:Memory: svmem(total=17106501632, available=8828190720, percent=48.4, used=8278310912, free=8828190720)
2023-06-02 14:08:08,129:INFO:Physical Core: 6
2023-06-02 14:08:08,129:INFO:Logical Core: 12
2023-06-02 14:08:08,129:INFO:Checking libraries
2023-06-02 14:08:08,129:INFO:System:
2023-06-02 14:08:08,129:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-02 14:08:08,129:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-06-02 14:08:08,129:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 14:08:08,130:INFO:PyCaret required dependencies:
2023-06-02 14:08:08,130:INFO:                 pip: 22.3.1
2023-06-02 14:08:08,130:INFO:          setuptools: 65.6.3
2023-06-02 14:08:08,130:INFO:             pycaret: 3.0.2
2023-06-02 14:08:08,130:INFO:             IPython: 8.10.0
2023-06-02 14:08:08,130:INFO:          ipywidgets: 7.6.5
2023-06-02 14:08:08,130:INFO:                tqdm: 4.64.1
2023-06-02 14:08:08,130:INFO:               numpy: 1.23.5
2023-06-02 14:08:08,130:INFO:              pandas: 1.5.3
2023-06-02 14:08:08,130:INFO:              jinja2: 3.1.2
2023-06-02 14:08:08,130:INFO:               scipy: 1.10.0
2023-06-02 14:08:08,130:INFO:              joblib: 1.1.1
2023-06-02 14:08:08,130:INFO:             sklearn: 1.2.1
2023-06-02 14:08:08,130:INFO:                pyod: 1.0.9
2023-06-02 14:08:08,131:INFO:            imblearn: 0.10.1
2023-06-02 14:08:08,131:INFO:   category_encoders: 2.6.1
2023-06-02 14:08:08,131:INFO:            lightgbm: 3.3.5
2023-06-02 14:08:08,131:INFO:               numba: 0.56.4
2023-06-02 14:08:08,131:INFO:            requests: 2.28.1
2023-06-02 14:08:08,131:INFO:          matplotlib: 3.7.0
2023-06-02 14:08:08,131:INFO:          scikitplot: 0.3.7
2023-06-02 14:08:08,131:INFO:         yellowbrick: 1.5
2023-06-02 14:08:08,131:INFO:              plotly: 5.9.0
2023-06-02 14:08:08,131:INFO:             kaleido: 0.2.1
2023-06-02 14:08:08,131:INFO:         statsmodels: 0.13.5
2023-06-02 14:08:08,131:INFO:              sktime: 0.17.0
2023-06-02 14:08:08,131:INFO:               tbats: 1.1.3
2023-06-02 14:08:08,131:INFO:            pmdarima: 2.0.3
2023-06-02 14:08:08,132:INFO:              psutil: 5.9.0
2023-06-02 14:08:08,132:INFO:PyCaret optional dependencies:
2023-06-02 14:08:08,155:INFO:                shap: Not installed
2023-06-02 14:08:08,155:INFO:           interpret: Not installed
2023-06-02 14:08:08,156:INFO:                umap: Not installed
2023-06-02 14:08:08,156:INFO:    pandas_profiling: Not installed
2023-06-02 14:08:08,156:INFO:  explainerdashboard: Not installed
2023-06-02 14:08:08,156:INFO:             autoviz: Not installed
2023-06-02 14:08:08,156:INFO:           fairlearn: Not installed
2023-06-02 14:08:08,156:INFO:             xgboost: Not installed
2023-06-02 14:08:08,156:INFO:            catboost: Not installed
2023-06-02 14:08:08,156:INFO:              kmodes: Not installed
2023-06-02 14:08:08,156:INFO:             mlxtend: Not installed
2023-06-02 14:08:08,156:INFO:       statsforecast: Not installed
2023-06-02 14:08:08,156:INFO:        tune_sklearn: 0.4.5
2023-06-02 14:08:08,156:INFO:                 ray: 2.4.0
2023-06-02 14:08:08,156:INFO:            hyperopt: Not installed
2023-06-02 14:08:08,156:INFO:              optuna: Not installed
2023-06-02 14:08:08,156:INFO:               skopt: Not installed
2023-06-02 14:08:08,157:INFO:              mlflow: Not installed
2023-06-02 14:08:08,157:INFO:              gradio: Not installed
2023-06-02 14:08:08,157:INFO:             fastapi: Not installed
2023-06-02 14:08:08,157:INFO:             uvicorn: Not installed
2023-06-02 14:08:08,157:INFO:              m2cgen: Not installed
2023-06-02 14:08:08,157:INFO:           evidently: Not installed
2023-06-02 14:08:08,157:INFO:               fugue: Not installed
2023-06-02 14:08:08,157:INFO:           streamlit: Not installed
2023-06-02 14:08:08,157:INFO:             prophet: Not installed
2023-06-02 14:08:08,157:INFO:None
2023-06-02 14:08:08,157:INFO:Set up data.
2023-06-02 14:08:08,163:INFO:Set up train/test split.
2023-06-02 14:08:08,167:INFO:Set up index.
2023-06-02 14:08:08,167:INFO:Set up folding strategy.
2023-06-02 14:08:08,167:INFO:Assigning column types.
2023-06-02 14:08:08,171:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 14:08:08,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 14:08:08,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:08:08,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 14:08:08,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:08:08,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,654:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 14:08:08,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:08:08,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,842:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:08:08,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:08,886:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 14:08:09,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,121:INFO:Preparing preprocessing pipeline...
2023-06-02 14:08:09,122:INFO:Set up label encoding.
2023-06-02 14:08:09,123:INFO:Set up simple imputation.
2023-06-02 14:08:09,125:INFO:Set up encoding of categorical features.
2023-06-02 14:08:09,191:INFO:Finished creating preprocessing pipeline.
2023-06-02 14:08:09,202:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 14:08:09,202:INFO:Creating final display dataframe.
2023-06-02 14:08:09,427:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                1156  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               313a  
2023-06-02 14:08:09,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:08:09,669:INFO:setup() successfully completed in 1.59s...............
2023-06-02 14:08:09,706:INFO:Initializing compare_models()
2023-06-02 14:08:09,706:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 14:08:09,707:INFO:Checking exceptions
2023-06-02 14:08:09,713:INFO:Preparing display monitor
2023-06-02 14:08:09,753:INFO:Initializing Logistic Regression
2023-06-02 14:08:09,754:INFO:Total runtime is 1.6681353251139323e-05 minutes
2023-06-02 14:08:09,759:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:09,759:INFO:Initializing create_model()
2023-06-02 14:08:09,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:09,760:INFO:Checking exceptions
2023-06-02 14:08:09,760:INFO:Importing libraries
2023-06-02 14:08:09,760:INFO:Copying training dataset
2023-06-02 14:08:09,765:INFO:Defining folds
2023-06-02 14:08:09,765:INFO:Declaring metric variables
2023-06-02 14:08:09,770:INFO:Importing untrained model
2023-06-02 14:08:09,775:INFO:Logistic Regression Imported successfully
2023-06-02 14:08:09,786:INFO:Starting cross validation
2023-06-02 14:08:09,788:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:16,593:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,595:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:16,598:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:16,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:16,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,611:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,612:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:16,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,619:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,620:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:16,621:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:16,821:INFO:Calculating mean and std
2023-06-02 14:08:16,823:INFO:Creating metrics dataframe
2023-06-02 14:08:16,879:INFO:Uploading results into container
2023-06-02 14:08:16,880:INFO:Uploading model into container now
2023-06-02 14:08:16,880:INFO:_master_model_container: 1
2023-06-02 14:08:16,880:INFO:_display_container: 2
2023-06-02 14:08:16,881:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:08:16,881:INFO:create_model() successfully completed......................................
2023-06-02 14:08:17,082:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:17,083:INFO:Creating metrics dataframe
2023-06-02 14:08:17,095:INFO:Initializing K Neighbors Classifier
2023-06-02 14:08:17,095:INFO:Total runtime is 0.12236676216125489 minutes
2023-06-02 14:08:17,099:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:17,099:INFO:Initializing create_model()
2023-06-02 14:08:17,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:17,099:INFO:Checking exceptions
2023-06-02 14:08:17,100:INFO:Importing libraries
2023-06-02 14:08:17,100:INFO:Copying training dataset
2023-06-02 14:08:17,105:INFO:Defining folds
2023-06-02 14:08:17,105:INFO:Declaring metric variables
2023-06-02 14:08:17,109:INFO:Importing untrained model
2023-06-02 14:08:17,114:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:08:17,122:INFO:Starting cross validation
2023-06-02 14:08:17,123:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:20,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:20,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,811:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,814:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,816:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:20,817:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,829:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,832:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,833:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:20,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,835:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,837:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,839:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:20,840:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,841:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,843:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:20,845:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:20,846:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,026:INFO:Calculating mean and std
2023-06-02 14:08:21,027:INFO:Creating metrics dataframe
2023-06-02 14:08:21,084:INFO:Uploading results into container
2023-06-02 14:08:21,085:INFO:Uploading model into container now
2023-06-02 14:08:21,085:INFO:_master_model_container: 2
2023-06-02 14:08:21,085:INFO:_display_container: 2
2023-06-02 14:08:21,085:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:08:21,086:INFO:create_model() successfully completed......................................
2023-06-02 14:08:21,295:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:21,295:INFO:Creating metrics dataframe
2023-06-02 14:08:21,308:INFO:Initializing Naive Bayes
2023-06-02 14:08:21,308:INFO:Total runtime is 0.19258654117584229 minutes
2023-06-02 14:08:21,312:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:21,313:INFO:Initializing create_model()
2023-06-02 14:08:21,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:21,313:INFO:Checking exceptions
2023-06-02 14:08:21,313:INFO:Importing libraries
2023-06-02 14:08:21,314:INFO:Copying training dataset
2023-06-02 14:08:21,318:INFO:Defining folds
2023-06-02 14:08:21,319:INFO:Declaring metric variables
2023-06-02 14:08:21,323:INFO:Importing untrained model
2023-06-02 14:08:21,328:INFO:Naive Bayes Imported successfully
2023-06-02 14:08:21,336:INFO:Starting cross validation
2023-06-02 14:08:21,337:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:21,590:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,592:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,594:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:21,596:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,601:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,601:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:21,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:21,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:21,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,593:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,594:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,596:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:24,598:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,598:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:24,600:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:24,652:INFO:Calculating mean and std
2023-06-02 14:08:24,653:INFO:Creating metrics dataframe
2023-06-02 14:08:24,723:INFO:Uploading results into container
2023-06-02 14:08:24,724:INFO:Uploading model into container now
2023-06-02 14:08:24,724:INFO:_master_model_container: 3
2023-06-02 14:08:24,724:INFO:_display_container: 2
2023-06-02 14:08:24,725:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:08:24,725:INFO:create_model() successfully completed......................................
2023-06-02 14:08:24,922:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:24,922:INFO:Creating metrics dataframe
2023-06-02 14:08:24,935:INFO:Initializing Decision Tree Classifier
2023-06-02 14:08:24,935:INFO:Total runtime is 0.253031317392985 minutes
2023-06-02 14:08:24,939:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:24,939:INFO:Initializing create_model()
2023-06-02 14:08:24,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:24,940:INFO:Checking exceptions
2023-06-02 14:08:24,940:INFO:Importing libraries
2023-06-02 14:08:24,940:INFO:Copying training dataset
2023-06-02 14:08:24,945:INFO:Defining folds
2023-06-02 14:08:24,945:INFO:Declaring metric variables
2023-06-02 14:08:24,949:INFO:Importing untrained model
2023-06-02 14:08:24,954:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:08:24,961:INFO:Starting cross validation
2023-06-02 14:08:24,963:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:25,198:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,200:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,201:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,203:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,203:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,204:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,205:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,207:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,215:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,216:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,218:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,218:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,219:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,219:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,220:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,221:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,233:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,235:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,236:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,237:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,403:INFO:Calculating mean and std
2023-06-02 14:08:25,404:INFO:Creating metrics dataframe
2023-06-02 14:08:25,460:INFO:Uploading results into container
2023-06-02 14:08:25,461:INFO:Uploading model into container now
2023-06-02 14:08:25,461:INFO:_master_model_container: 4
2023-06-02 14:08:25,462:INFO:_display_container: 2
2023-06-02 14:08:25,462:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:08:25,462:INFO:create_model() successfully completed......................................
2023-06-02 14:08:25,656:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:25,656:INFO:Creating metrics dataframe
2023-06-02 14:08:25,670:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:08:25,670:INFO:Total runtime is 0.265296200911204 minutes
2023-06-02 14:08:25,675:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:25,675:INFO:Initializing create_model()
2023-06-02 14:08:25,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:25,675:INFO:Checking exceptions
2023-06-02 14:08:25,676:INFO:Importing libraries
2023-06-02 14:08:25,676:INFO:Copying training dataset
2023-06-02 14:08:25,681:INFO:Defining folds
2023-06-02 14:08:25,681:INFO:Declaring metric variables
2023-06-02 14:08:25,685:INFO:Importing untrained model
2023-06-02 14:08:25,690:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:08:25,699:INFO:Starting cross validation
2023-06-02 14:08:25,701:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:25,893:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:08:25,894:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:08:25,894:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,895:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,897:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,898:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,899:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,899:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,900:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,901:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,913:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:08:25,914:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:08:25,915:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,915:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:08:25,917:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,918:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,919:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,920:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,920:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,920:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,921:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,922:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:25,922:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:25,923:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,121:INFO:Calculating mean and std
2023-06-02 14:08:26,122:INFO:Creating metrics dataframe
2023-06-02 14:08:26,178:INFO:Uploading results into container
2023-06-02 14:08:26,179:INFO:Uploading model into container now
2023-06-02 14:08:26,179:INFO:_master_model_container: 5
2023-06-02 14:08:26,179:INFO:_display_container: 2
2023-06-02 14:08:26,180:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1156, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:08:26,180:INFO:create_model() successfully completed......................................
2023-06-02 14:08:26,386:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:26,386:INFO:Creating metrics dataframe
2023-06-02 14:08:26,401:INFO:Initializing Ridge Classifier
2023-06-02 14:08:26,401:INFO:Total runtime is 0.2774800499280293 minutes
2023-06-02 14:08:26,405:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:26,405:INFO:Initializing create_model()
2023-06-02 14:08:26,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:26,406:INFO:Checking exceptions
2023-06-02 14:08:26,406:INFO:Importing libraries
2023-06-02 14:08:26,406:INFO:Copying training dataset
2023-06-02 14:08:26,411:INFO:Defining folds
2023-06-02 14:08:26,412:INFO:Declaring metric variables
2023-06-02 14:08:26,416:INFO:Importing untrained model
2023-06-02 14:08:26,421:INFO:Ridge Classifier Imported successfully
2023-06-02 14:08:26,429:INFO:Starting cross validation
2023-06-02 14:08:26,431:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:26,602:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:08:26,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:26,606:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:08:26,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,609:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,611:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:26,613:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,619:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:08:26,620:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,623:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,624:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:26,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,626:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:08:26,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,633:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:26,634:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,641:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:08:26,642:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,645:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,646:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:26,648:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:26,807:INFO:Calculating mean and std
2023-06-02 14:08:26,808:INFO:Creating metrics dataframe
2023-06-02 14:08:26,866:INFO:Uploading results into container
2023-06-02 14:08:26,867:INFO:Uploading model into container now
2023-06-02 14:08:26,867:INFO:_master_model_container: 6
2023-06-02 14:08:26,867:INFO:_display_container: 2
2023-06-02 14:08:26,867:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1156, solver='auto',
                tol=0.0001)
2023-06-02 14:08:26,868:INFO:create_model() successfully completed......................................
2023-06-02 14:08:27,059:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:27,059:INFO:Creating metrics dataframe
2023-06-02 14:08:27,074:INFO:Initializing Random Forest Classifier
2023-06-02 14:08:27,074:INFO:Total runtime is 0.28868667682011917 minutes
2023-06-02 14:08:27,079:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:27,079:INFO:Initializing create_model()
2023-06-02 14:08:27,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:27,079:INFO:Checking exceptions
2023-06-02 14:08:27,079:INFO:Importing libraries
2023-06-02 14:08:27,080:INFO:Copying training dataset
2023-06-02 14:08:27,084:INFO:Defining folds
2023-06-02 14:08:27,084:INFO:Declaring metric variables
2023-06-02 14:08:27,088:INFO:Importing untrained model
2023-06-02 14:08:27,092:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:08:27,100:INFO:Starting cross validation
2023-06-02 14:08:27,102:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:28,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,012:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,013:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,014:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,021:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,024:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,025:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,026:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,031:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,033:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,034:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,035:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,035:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,036:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,037:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,037:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,049:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,052:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,054:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,055:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,237:INFO:Calculating mean and std
2023-06-02 14:08:28,238:INFO:Creating metrics dataframe
2023-06-02 14:08:28,298:INFO:Uploading results into container
2023-06-02 14:08:28,299:INFO:Uploading model into container now
2023-06-02 14:08:28,299:INFO:_master_model_container: 7
2023-06-02 14:08:28,299:INFO:_display_container: 2
2023-06-02 14:08:28,300:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:08:28,300:INFO:create_model() successfully completed......................................
2023-06-02 14:08:28,516:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:28,516:INFO:Creating metrics dataframe
2023-06-02 14:08:28,531:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:08:28,531:INFO:Total runtime is 0.31296556790669755 minutes
2023-06-02 14:08:28,535:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:28,535:INFO:Initializing create_model()
2023-06-02 14:08:28,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:28,536:INFO:Checking exceptions
2023-06-02 14:08:28,536:INFO:Importing libraries
2023-06-02 14:08:28,536:INFO:Copying training dataset
2023-06-02 14:08:28,540:INFO:Defining folds
2023-06-02 14:08:28,541:INFO:Declaring metric variables
2023-06-02 14:08:28,545:INFO:Importing untrained model
2023-06-02 14:08:28,550:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:08:28,557:INFO:Starting cross validation
2023-06-02 14:08:28,559:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:28,678:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:08:28,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:08:28,688:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:08:28,690:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:08:28,691:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:08:28,733:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,738:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,739:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,739:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,740:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,741:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,741:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,743:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,744:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,744:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,747:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,748:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,748:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,799:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:08:28,799:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,803:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:08:28,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:08:28,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,804:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:08:28,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:08:28,804:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:08:28,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:08:28,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,807:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,807:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:08:28,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,811:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:28,813:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:28,815:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,016:INFO:Calculating mean and std
2023-06-02 14:08:29,018:INFO:Creating metrics dataframe
2023-06-02 14:08:29,077:INFO:Uploading results into container
2023-06-02 14:08:29,078:INFO:Uploading model into container now
2023-06-02 14:08:29,078:INFO:_master_model_container: 8
2023-06-02 14:08:29,078:INFO:_display_container: 2
2023-06-02 14:08:29,079:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:08:29,079:INFO:create_model() successfully completed......................................
2023-06-02 14:08:29,281:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:29,282:INFO:Creating metrics dataframe
2023-06-02 14:08:29,298:INFO:Initializing Ada Boost Classifier
2023-06-02 14:08:29,298:INFO:Total runtime is 0.3257501681645711 minutes
2023-06-02 14:08:29,302:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:29,302:INFO:Initializing create_model()
2023-06-02 14:08:29,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:29,302:INFO:Checking exceptions
2023-06-02 14:08:29,302:INFO:Importing libraries
2023-06-02 14:08:29,303:INFO:Copying training dataset
2023-06-02 14:08:29,307:INFO:Defining folds
2023-06-02 14:08:29,307:INFO:Declaring metric variables
2023-06-02 14:08:29,312:INFO:Importing untrained model
2023-06-02 14:08:29,316:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:08:29,324:INFO:Starting cross validation
2023-06-02 14:08:29,326:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:29,785:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:29,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,803:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:29,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,891:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,892:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,893:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,895:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:29,895:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,896:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,897:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:29,898:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,932:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,934:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:29,936:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:29,937:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:30,022:INFO:Calculating mean and std
2023-06-02 14:08:30,023:INFO:Creating metrics dataframe
2023-06-02 14:08:30,087:INFO:Uploading results into container
2023-06-02 14:08:30,088:INFO:Uploading model into container now
2023-06-02 14:08:30,088:INFO:_master_model_container: 9
2023-06-02 14:08:30,088:INFO:_display_container: 2
2023-06-02 14:08:30,089:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1156)
2023-06-02 14:08:30,089:INFO:create_model() successfully completed......................................
2023-06-02 14:08:30,285:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:30,285:INFO:Creating metrics dataframe
2023-06-02 14:08:30,301:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:08:30,301:INFO:Total runtime is 0.34246847232182814 minutes
2023-06-02 14:08:30,305:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:30,306:INFO:Initializing create_model()
2023-06-02 14:08:30,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:30,306:INFO:Checking exceptions
2023-06-02 14:08:30,306:INFO:Importing libraries
2023-06-02 14:08:30,306:INFO:Copying training dataset
2023-06-02 14:08:30,311:INFO:Defining folds
2023-06-02 14:08:30,312:INFO:Declaring metric variables
2023-06-02 14:08:30,316:INFO:Importing untrained model
2023-06-02 14:08:30,321:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:08:30,330:INFO:Starting cross validation
2023-06-02 14:08:30,331:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:32,228:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:08:32,241:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:08:32,281:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:08:32,288:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:08:32,295:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:08:33,894:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,898:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,899:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:33,900:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,901:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,903:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,905:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:33,906:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,936:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,939:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,940:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,941:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:33,942:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,943:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,945:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:33,946:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,949:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,952:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:33,954:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:33,955:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,131:INFO:Calculating mean and std
2023-06-02 14:08:34,132:INFO:Creating metrics dataframe
2023-06-02 14:08:34,199:INFO:Uploading results into container
2023-06-02 14:08:34,200:INFO:Uploading model into container now
2023-06-02 14:08:34,200:INFO:_master_model_container: 10
2023-06-02 14:08:34,200:INFO:_display_container: 2
2023-06-02 14:08:34,201:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1156, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:08:34,201:INFO:create_model() successfully completed......................................
2023-06-02 14:08:34,418:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:34,418:INFO:Creating metrics dataframe
2023-06-02 14:08:34,437:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:08:34,437:INFO:Total runtime is 0.4113990306854247 minutes
2023-06-02 14:08:34,441:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:34,442:INFO:Initializing create_model()
2023-06-02 14:08:34,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:34,442:INFO:Checking exceptions
2023-06-02 14:08:34,442:INFO:Importing libraries
2023-06-02 14:08:34,442:INFO:Copying training dataset
2023-06-02 14:08:34,447:INFO:Defining folds
2023-06-02 14:08:34,447:INFO:Declaring metric variables
2023-06-02 14:08:34,451:INFO:Importing untrained model
2023-06-02 14:08:34,456:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:08:34,464:INFO:Starting cross validation
2023-06-02 14:08:34,466:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:34,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,715:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:34,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,720:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,722:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:34,723:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,732:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,735:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,736:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:34,737:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,746:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,747:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,749:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,749:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,750:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:34,751:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:34,751:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,753:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:34,947:INFO:Calculating mean and std
2023-06-02 14:08:34,948:INFO:Creating metrics dataframe
2023-06-02 14:08:35,014:INFO:Uploading results into container
2023-06-02 14:08:35,015:INFO:Uploading model into container now
2023-06-02 14:08:35,015:INFO:_master_model_container: 11
2023-06-02 14:08:35,015:INFO:_display_container: 2
2023-06-02 14:08:35,016:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:08:35,016:INFO:create_model() successfully completed......................................
2023-06-02 14:08:35,216:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:35,216:INFO:Creating metrics dataframe
2023-06-02 14:08:35,233:INFO:Initializing Extra Trees Classifier
2023-06-02 14:08:35,233:INFO:Total runtime is 0.4246661702791849 minutes
2023-06-02 14:08:35,237:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:35,237:INFO:Initializing create_model()
2023-06-02 14:08:35,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:35,238:INFO:Checking exceptions
2023-06-02 14:08:35,238:INFO:Importing libraries
2023-06-02 14:08:35,238:INFO:Copying training dataset
2023-06-02 14:08:35,243:INFO:Defining folds
2023-06-02 14:08:35,243:INFO:Declaring metric variables
2023-06-02 14:08:35,247:INFO:Importing untrained model
2023-06-02 14:08:35,251:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:08:35,259:INFO:Starting cross validation
2023-06-02 14:08:35,260:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:36,123:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,125:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,126:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:36,129:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,129:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:36,131:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,136:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:36,141:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,153:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,155:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,155:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,156:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:36,157:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,158:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,158:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:36,159:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:36,374:INFO:Calculating mean and std
2023-06-02 14:08:36,375:INFO:Creating metrics dataframe
2023-06-02 14:08:36,444:INFO:Uploading results into container
2023-06-02 14:08:36,445:INFO:Uploading model into container now
2023-06-02 14:08:36,446:INFO:_master_model_container: 12
2023-06-02 14:08:36,446:INFO:_display_container: 2
2023-06-02 14:08:36,446:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:08:36,446:INFO:create_model() successfully completed......................................
2023-06-02 14:08:36,638:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:36,638:INFO:Creating metrics dataframe
2023-06-02 14:08:36,656:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:08:36,656:INFO:Total runtime is 0.4483827829360961 minutes
2023-06-02 14:08:36,660:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:36,660:INFO:Initializing create_model()
2023-06-02 14:08:36,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:36,661:INFO:Checking exceptions
2023-06-02 14:08:36,661:INFO:Importing libraries
2023-06-02 14:08:36,661:INFO:Copying training dataset
2023-06-02 14:08:36,666:INFO:Defining folds
2023-06-02 14:08:36,667:INFO:Declaring metric variables
2023-06-02 14:08:36,671:INFO:Importing untrained model
2023-06-02 14:08:36,675:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:08:36,684:INFO:Starting cross validation
2023-06-02 14:08:36,685:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:38,251:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,254:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,254:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,256:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,256:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:38,257:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:38,257:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,258:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,265:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,268:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,270:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:38,271:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,326:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,328:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,330:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,330:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:38,331:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,332:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,333:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:38,334:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:38,517:INFO:Calculating mean and std
2023-06-02 14:08:38,519:INFO:Creating metrics dataframe
2023-06-02 14:08:38,587:INFO:Uploading results into container
2023-06-02 14:08:38,588:INFO:Uploading model into container now
2023-06-02 14:08:38,588:INFO:_master_model_container: 13
2023-06-02 14:08:38,588:INFO:_display_container: 2
2023-06-02 14:08:38,589:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1156, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:08:38,589:INFO:create_model() successfully completed......................................
2023-06-02 14:08:38,796:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:38,797:INFO:Creating metrics dataframe
2023-06-02 14:08:38,815:INFO:Initializing Dummy Classifier
2023-06-02 14:08:38,816:INFO:Total runtime is 0.4843904932339985 minutes
2023-06-02 14:08:38,820:INFO:SubProcess create_model() called ==================================
2023-06-02 14:08:38,820:INFO:Initializing create_model()
2023-06-02 14:08:38,820:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91292D720>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:38,820:INFO:Checking exceptions
2023-06-02 14:08:38,820:INFO:Importing libraries
2023-06-02 14:08:38,821:INFO:Copying training dataset
2023-06-02 14:08:38,825:INFO:Defining folds
2023-06-02 14:08:38,825:INFO:Declaring metric variables
2023-06-02 14:08:38,830:INFO:Importing untrained model
2023-06-02 14:08:38,834:INFO:Dummy Classifier Imported successfully
2023-06-02 14:08:38,842:INFO:Starting cross validation
2023-06-02 14:08:38,843:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:08:39,069:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,071:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,072:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:39,073:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,075:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,078:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,080:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:39,081:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,086:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,089:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,091:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:39,092:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,096:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,099:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,099:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,100:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:39,102:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,102:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,104:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:08:39,105:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:08:39,334:INFO:Calculating mean and std
2023-06-02 14:08:39,336:INFO:Creating metrics dataframe
2023-06-02 14:08:39,406:INFO:Uploading results into container
2023-06-02 14:08:39,407:INFO:Uploading model into container now
2023-06-02 14:08:39,408:INFO:_master_model_container: 14
2023-06-02 14:08:39,408:INFO:_display_container: 2
2023-06-02 14:08:39,408:INFO:DummyClassifier(constant=None, random_state=1156, strategy='prior')
2023-06-02 14:08:39,408:INFO:create_model() successfully completed......................................
2023-06-02 14:08:39,607:INFO:SubProcess create_model() end ==================================
2023-06-02 14:08:39,607:INFO:Creating metrics dataframe
2023-06-02 14:08:39,638:INFO:Initializing create_model()
2023-06-02 14:08:39,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:39,638:INFO:Checking exceptions
2023-06-02 14:08:39,640:INFO:Importing libraries
2023-06-02 14:08:39,640:INFO:Copying training dataset
2023-06-02 14:08:39,644:INFO:Defining folds
2023-06-02 14:08:39,645:INFO:Declaring metric variables
2023-06-02 14:08:39,645:INFO:Importing untrained model
2023-06-02 14:08:39,645:INFO:Declaring custom model
2023-06-02 14:08:39,645:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:08:39,647:INFO:Cross validation set to False
2023-06-02 14:08:39,647:INFO:Fitting Model
2023-06-02 14:08:39,728:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:08:39,786:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:08:39,786:INFO:create_model() successfully completed......................................
2023-06-02 14:08:39,991:INFO:Initializing create_model()
2023-06-02 14:08:39,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:39,991:INFO:Checking exceptions
2023-06-02 14:08:39,994:INFO:Importing libraries
2023-06-02 14:08:39,994:INFO:Copying training dataset
2023-06-02 14:08:39,998:INFO:Defining folds
2023-06-02 14:08:39,998:INFO:Declaring metric variables
2023-06-02 14:08:39,998:INFO:Importing untrained model
2023-06-02 14:08:39,998:INFO:Declaring custom model
2023-06-02 14:08:39,999:INFO:Logistic Regression Imported successfully
2023-06-02 14:08:40,000:INFO:Cross validation set to False
2023-06-02 14:08:40,000:INFO:Fitting Model
2023-06-02 14:08:40,146:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:08:40,146:INFO:create_model() successfully completed......................................
2023-06-02 14:08:40,347:INFO:Initializing create_model()
2023-06-02 14:08:40,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:40,347:INFO:Checking exceptions
2023-06-02 14:08:40,349:INFO:Importing libraries
2023-06-02 14:08:40,349:INFO:Copying training dataset
2023-06-02 14:08:40,353:INFO:Defining folds
2023-06-02 14:08:40,353:INFO:Declaring metric variables
2023-06-02 14:08:40,353:INFO:Importing untrained model
2023-06-02 14:08:40,353:INFO:Declaring custom model
2023-06-02 14:08:40,354:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:08:40,355:INFO:Cross validation set to False
2023-06-02 14:08:40,355:INFO:Fitting Model
2023-06-02 14:08:40,490:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:08:40,490:INFO:create_model() successfully completed......................................
2023-06-02 14:08:40,701:INFO:Initializing create_model()
2023-06-02 14:08:40,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:40,701:INFO:Checking exceptions
2023-06-02 14:08:40,703:INFO:Importing libraries
2023-06-02 14:08:40,704:INFO:Copying training dataset
2023-06-02 14:08:40,707:INFO:Defining folds
2023-06-02 14:08:40,708:INFO:Declaring metric variables
2023-06-02 14:08:40,708:INFO:Importing untrained model
2023-06-02 14:08:40,708:INFO:Declaring custom model
2023-06-02 14:08:40,708:INFO:Naive Bayes Imported successfully
2023-06-02 14:08:40,709:INFO:Cross validation set to False
2023-06-02 14:08:40,710:INFO:Fitting Model
2023-06-02 14:08:40,843:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:08:40,843:INFO:create_model() successfully completed......................................
2023-06-02 14:08:41,045:INFO:Initializing create_model()
2023-06-02 14:08:41,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:08:41,045:INFO:Checking exceptions
2023-06-02 14:08:41,048:INFO:Importing libraries
2023-06-02 14:08:41,048:INFO:Copying training dataset
2023-06-02 14:08:41,051:INFO:Defining folds
2023-06-02 14:08:41,052:INFO:Declaring metric variables
2023-06-02 14:08:41,052:INFO:Importing untrained model
2023-06-02 14:08:41,052:INFO:Declaring custom model
2023-06-02 14:08:41,053:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:08:41,054:INFO:Cross validation set to False
2023-06-02 14:08:41,054:INFO:Fitting Model
2023-06-02 14:08:41,190:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:08:41,190:INFO:create_model() successfully completed......................................
2023-06-02 14:08:41,416:INFO:_master_model_container: 14
2023-06-02 14:08:41,416:INFO:_display_container: 2
2023-06-02 14:08:41,418:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')]
2023-06-02 14:08:41,418:INFO:compare_models() successfully completed......................................
2023-06-02 14:09:14,438:INFO:Initializing compare_models()
2023-06-02 14:09:14,438:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 14:09:14,439:INFO:Checking exceptions
2023-06-02 14:09:14,441:INFO:Preparing display monitor
2023-06-02 14:09:14,473:INFO:Initializing Logistic Regression
2023-06-02 14:09:14,473:INFO:Total runtime is 0.0 minutes
2023-06-02 14:09:14,477:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:14,478:INFO:Initializing create_model()
2023-06-02 14:09:14,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:14,478:INFO:Checking exceptions
2023-06-02 14:09:14,479:INFO:Importing libraries
2023-06-02 14:09:14,479:INFO:Copying training dataset
2023-06-02 14:09:14,485:INFO:Defining folds
2023-06-02 14:09:14,485:INFO:Declaring metric variables
2023-06-02 14:09:14,490:INFO:Importing untrained model
2023-06-02 14:09:14,495:INFO:Logistic Regression Imported successfully
2023-06-02 14:09:14,505:INFO:Starting cross validation
2023-06-02 14:09:14,507:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:14,792:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:14,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,796:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,798:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:14,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,812:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,813:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,814:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:14,815:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,816:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,817:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:14,818:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,823:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,825:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:14,827:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:14,828:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,043:INFO:Calculating mean and std
2023-06-02 14:09:15,044:INFO:Creating metrics dataframe
2023-06-02 14:09:15,111:INFO:Uploading results into container
2023-06-02 14:09:15,112:INFO:Uploading model into container now
2023-06-02 14:09:15,112:INFO:_master_model_container: 15
2023-06-02 14:09:15,113:INFO:_display_container: 3
2023-06-02 14:09:15,113:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:09:15,114:INFO:create_model() successfully completed......................................
2023-06-02 14:09:15,311:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:15,311:INFO:Creating metrics dataframe
2023-06-02 14:09:15,323:INFO:Initializing K Neighbors Classifier
2023-06-02 14:09:15,323:INFO:Total runtime is 0.014160235722859701 minutes
2023-06-02 14:09:15,328:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:15,329:INFO:Initializing create_model()
2023-06-02 14:09:15,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:15,329:INFO:Checking exceptions
2023-06-02 14:09:15,329:INFO:Importing libraries
2023-06-02 14:09:15,329:INFO:Copying training dataset
2023-06-02 14:09:15,334:INFO:Defining folds
2023-06-02 14:09:15,334:INFO:Declaring metric variables
2023-06-02 14:09:15,338:INFO:Importing untrained model
2023-06-02 14:09:15,342:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:09:15,351:INFO:Starting cross validation
2023-06-02 14:09:15,353:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:15,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:15,609:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,610:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,612:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:15,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,621:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,622:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,623:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,623:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:15,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:15,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:15,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:15,857:INFO:Calculating mean and std
2023-06-02 14:09:15,858:INFO:Creating metrics dataframe
2023-06-02 14:09:15,928:INFO:Uploading results into container
2023-06-02 14:09:15,928:INFO:Uploading model into container now
2023-06-02 14:09:15,929:INFO:_master_model_container: 16
2023-06-02 14:09:15,929:INFO:_display_container: 3
2023-06-02 14:09:15,929:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:09:15,929:INFO:create_model() successfully completed......................................
2023-06-02 14:09:16,128:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:16,128:INFO:Creating metrics dataframe
2023-06-02 14:09:16,144:INFO:Initializing Naive Bayes
2023-06-02 14:09:16,144:INFO:Total runtime is 0.027841099103291828 minutes
2023-06-02 14:09:16,148:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:16,148:INFO:Initializing create_model()
2023-06-02 14:09:16,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:16,149:INFO:Checking exceptions
2023-06-02 14:09:16,149:INFO:Importing libraries
2023-06-02 14:09:16,149:INFO:Copying training dataset
2023-06-02 14:09:16,155:INFO:Defining folds
2023-06-02 14:09:16,156:INFO:Declaring metric variables
2023-06-02 14:09:16,160:INFO:Importing untrained model
2023-06-02 14:09:16,164:INFO:Naive Bayes Imported successfully
2023-06-02 14:09:16,172:INFO:Starting cross validation
2023-06-02 14:09:16,172:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:16,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,395:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,397:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:16,399:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,409:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,411:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,413:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:16,414:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,414:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,417:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,419:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:16,420:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,422:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,425:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,426:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:16,427:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,433:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,435:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,437:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:16,438:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:16,642:INFO:Calculating mean and std
2023-06-02 14:09:16,644:INFO:Creating metrics dataframe
2023-06-02 14:09:16,713:INFO:Uploading results into container
2023-06-02 14:09:16,714:INFO:Uploading model into container now
2023-06-02 14:09:16,714:INFO:_master_model_container: 17
2023-06-02 14:09:16,714:INFO:_display_container: 3
2023-06-02 14:09:16,715:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:09:16,715:INFO:create_model() successfully completed......................................
2023-06-02 14:09:16,912:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:16,912:INFO:Creating metrics dataframe
2023-06-02 14:09:16,925:INFO:Initializing Decision Tree Classifier
2023-06-02 14:09:16,925:INFO:Total runtime is 0.04085792303085327 minutes
2023-06-02 14:09:16,929:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:16,929:INFO:Initializing create_model()
2023-06-02 14:09:16,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:16,930:INFO:Checking exceptions
2023-06-02 14:09:16,930:INFO:Importing libraries
2023-06-02 14:09:16,930:INFO:Copying training dataset
2023-06-02 14:09:16,935:INFO:Defining folds
2023-06-02 14:09:16,935:INFO:Declaring metric variables
2023-06-02 14:09:16,939:INFO:Importing untrained model
2023-06-02 14:09:16,943:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:09:16,952:INFO:Starting cross validation
2023-06-02 14:09:16,954:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:17,184:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,187:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,188:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,190:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,193:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,196:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,197:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,198:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,198:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,201:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,203:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,204:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,204:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,206:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,208:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,209:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,214:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,217:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,218:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,219:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,440:INFO:Calculating mean and std
2023-06-02 14:09:17,442:INFO:Creating metrics dataframe
2023-06-02 14:09:17,511:INFO:Uploading results into container
2023-06-02 14:09:17,512:INFO:Uploading model into container now
2023-06-02 14:09:17,512:INFO:_master_model_container: 18
2023-06-02 14:09:17,512:INFO:_display_container: 3
2023-06-02 14:09:17,513:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:09:17,513:INFO:create_model() successfully completed......................................
2023-06-02 14:09:17,715:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:17,715:INFO:Creating metrics dataframe
2023-06-02 14:09:17,729:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:09:17,729:INFO:Total runtime is 0.05425865252812703 minutes
2023-06-02 14:09:17,733:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:17,733:INFO:Initializing create_model()
2023-06-02 14:09:17,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:17,734:INFO:Checking exceptions
2023-06-02 14:09:17,734:INFO:Importing libraries
2023-06-02 14:09:17,734:INFO:Copying training dataset
2023-06-02 14:09:17,738:INFO:Defining folds
2023-06-02 14:09:17,739:INFO:Declaring metric variables
2023-06-02 14:09:17,743:INFO:Importing untrained model
2023-06-02 14:09:17,748:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:09:17,757:INFO:Starting cross validation
2023-06-02 14:09:17,759:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:17,927:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:09:17,928:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,930:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,931:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:09:17,932:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,932:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,933:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,935:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,936:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,938:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,941:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:09:17,942:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,944:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:09:17,944:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,945:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,945:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,947:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,948:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,949:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,950:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,959:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:09:17,960:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,962:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:17,964:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:17,965:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,177:INFO:Calculating mean and std
2023-06-02 14:09:18,178:INFO:Creating metrics dataframe
2023-06-02 14:09:18,247:INFO:Uploading results into container
2023-06-02 14:09:18,248:INFO:Uploading model into container now
2023-06-02 14:09:18,248:INFO:_master_model_container: 19
2023-06-02 14:09:18,248:INFO:_display_container: 3
2023-06-02 14:09:18,249:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1156, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:09:18,249:INFO:create_model() successfully completed......................................
2023-06-02 14:09:18,440:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:18,440:INFO:Creating metrics dataframe
2023-06-02 14:09:18,454:INFO:Initializing Ridge Classifier
2023-06-02 14:09:18,454:INFO:Total runtime is 0.06634000539779664 minutes
2023-06-02 14:09:18,458:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:18,458:INFO:Initializing create_model()
2023-06-02 14:09:18,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:18,459:INFO:Checking exceptions
2023-06-02 14:09:18,459:INFO:Importing libraries
2023-06-02 14:09:18,459:INFO:Copying training dataset
2023-06-02 14:09:18,464:INFO:Defining folds
2023-06-02 14:09:18,464:INFO:Declaring metric variables
2023-06-02 14:09:18,468:INFO:Importing untrained model
2023-06-02 14:09:18,473:INFO:Ridge Classifier Imported successfully
2023-06-02 14:09:18,480:INFO:Starting cross validation
2023-06-02 14:09:18,483:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:18,650:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:09:18,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,653:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,653:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:09:18,654:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,654:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:18,655:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,656:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,657:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:18,658:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,660:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:09:18,660:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:09:18,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,665:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:18,665:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:18,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,667:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,675:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:09:18,676:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,678:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,679:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:18,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:18,894:INFO:Calculating mean and std
2023-06-02 14:09:18,896:INFO:Creating metrics dataframe
2023-06-02 14:09:18,964:INFO:Uploading results into container
2023-06-02 14:09:18,965:INFO:Uploading model into container now
2023-06-02 14:09:18,965:INFO:_master_model_container: 20
2023-06-02 14:09:18,966:INFO:_display_container: 3
2023-06-02 14:09:18,966:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1156, solver='auto',
                tol=0.0001)
2023-06-02 14:09:18,966:INFO:create_model() successfully completed......................................
2023-06-02 14:09:19,173:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:19,173:INFO:Creating metrics dataframe
2023-06-02 14:09:19,187:INFO:Initializing Random Forest Classifier
2023-06-02 14:09:19,187:INFO:Total runtime is 0.07857195933659872 minutes
2023-06-02 14:09:19,190:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:19,192:INFO:Initializing create_model()
2023-06-02 14:09:19,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:19,192:INFO:Checking exceptions
2023-06-02 14:09:19,193:INFO:Importing libraries
2023-06-02 14:09:19,193:INFO:Copying training dataset
2023-06-02 14:09:19,197:INFO:Defining folds
2023-06-02 14:09:19,198:INFO:Declaring metric variables
2023-06-02 14:09:19,202:INFO:Importing untrained model
2023-06-02 14:09:19,206:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:09:19,215:INFO:Starting cross validation
2023-06-02 14:09:19,216:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:19,774:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,775:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,777:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,777:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:19,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:19,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,785:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:19,792:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:19,807:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,807:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:19,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:19,810:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,033:INFO:Calculating mean and std
2023-06-02 14:09:20,034:INFO:Creating metrics dataframe
2023-06-02 14:09:20,102:INFO:Uploading results into container
2023-06-02 14:09:20,103:INFO:Uploading model into container now
2023-06-02 14:09:20,104:INFO:_master_model_container: 21
2023-06-02 14:09:20,104:INFO:_display_container: 3
2023-06-02 14:09:20,104:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:09:20,104:INFO:create_model() successfully completed......................................
2023-06-02 14:09:20,306:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:20,307:INFO:Creating metrics dataframe
2023-06-02 14:09:20,322:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:09:20,322:INFO:Total runtime is 0.09747771422068278 minutes
2023-06-02 14:09:20,326:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:20,327:INFO:Initializing create_model()
2023-06-02 14:09:20,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:20,327:INFO:Checking exceptions
2023-06-02 14:09:20,327:INFO:Importing libraries
2023-06-02 14:09:20,327:INFO:Copying training dataset
2023-06-02 14:09:20,332:INFO:Defining folds
2023-06-02 14:09:20,332:INFO:Declaring metric variables
2023-06-02 14:09:20,337:INFO:Importing untrained model
2023-06-02 14:09:20,342:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:09:20,350:INFO:Starting cross validation
2023-06-02 14:09:20,352:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:20,469:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:09:20,492:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:09:20,492:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:09:20,493:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:09:20,497:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:09:20,551:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,552:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,552:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,556:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,556:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,557:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,558:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,558:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,559:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,559:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,559:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,560:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,560:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,560:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,561:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,609:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,609:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,610:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:09:20,611:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,615:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,615:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:20,616:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,616:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,618:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,618:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:09:20,618:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:09:20,619:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:09:20,619:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,619:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:09:20,619:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:09:20,621:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,621:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,621:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:09:20,622:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,623:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:09:20,623:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,623:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:20,624:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,624:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:20,624:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:20,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:20,860:INFO:Calculating mean and std
2023-06-02 14:09:20,861:INFO:Creating metrics dataframe
2023-06-02 14:09:20,929:INFO:Uploading results into container
2023-06-02 14:09:20,929:INFO:Uploading model into container now
2023-06-02 14:09:20,930:INFO:_master_model_container: 22
2023-06-02 14:09:20,930:INFO:_display_container: 3
2023-06-02 14:09:20,930:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:09:20,930:INFO:create_model() successfully completed......................................
2023-06-02 14:09:21,125:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:21,125:INFO:Creating metrics dataframe
2023-06-02 14:09:21,141:INFO:Initializing Ada Boost Classifier
2023-06-02 14:09:21,141:INFO:Total runtime is 0.11112448771794638 minutes
2023-06-02 14:09:21,145:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:21,145:INFO:Initializing create_model()
2023-06-02 14:09:21,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:21,146:INFO:Checking exceptions
2023-06-02 14:09:21,146:INFO:Importing libraries
2023-06-02 14:09:21,146:INFO:Copying training dataset
2023-06-02 14:09:21,150:INFO:Defining folds
2023-06-02 14:09:21,151:INFO:Declaring metric variables
2023-06-02 14:09:21,155:INFO:Importing untrained model
2023-06-02 14:09:21,159:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:09:21,167:INFO:Starting cross validation
2023-06-02 14:09:21,168:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:21,548:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,551:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,553:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:21,554:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,569:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,572:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,574:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:21,575:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,576:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,579:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,581:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:21,582:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,624:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:21,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,630:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,633:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,634:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:21,635:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:21,801:INFO:Calculating mean and std
2023-06-02 14:09:21,803:INFO:Creating metrics dataframe
2023-06-02 14:09:21,871:INFO:Uploading results into container
2023-06-02 14:09:21,872:INFO:Uploading model into container now
2023-06-02 14:09:21,872:INFO:_master_model_container: 23
2023-06-02 14:09:21,873:INFO:_display_container: 3
2023-06-02 14:09:21,873:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1156)
2023-06-02 14:09:21,873:INFO:create_model() successfully completed......................................
2023-06-02 14:09:22,062:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:22,062:INFO:Creating metrics dataframe
2023-06-02 14:09:22,078:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:09:22,078:INFO:Total runtime is 0.12674310604731243 minutes
2023-06-02 14:09:22,083:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:22,084:INFO:Initializing create_model()
2023-06-02 14:09:22,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:22,084:INFO:Checking exceptions
2023-06-02 14:09:22,084:INFO:Importing libraries
2023-06-02 14:09:22,085:INFO:Copying training dataset
2023-06-02 14:09:22,089:INFO:Defining folds
2023-06-02 14:09:22,089:INFO:Declaring metric variables
2023-06-02 14:09:22,093:INFO:Importing untrained model
2023-06-02 14:09:22,097:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:09:22,105:INFO:Starting cross validation
2023-06-02 14:09:22,107:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:23,924:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,927:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,927:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,928:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:23,929:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,930:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,931:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:23,932:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,956:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,958:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,959:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,960:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,961:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:23,962:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:23,962:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:23,962:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,024:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,026:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,027:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:24,028:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,175:INFO:Calculating mean and std
2023-06-02 14:09:24,177:INFO:Creating metrics dataframe
2023-06-02 14:09:24,245:INFO:Uploading results into container
2023-06-02 14:09:24,246:INFO:Uploading model into container now
2023-06-02 14:09:24,247:INFO:_master_model_container: 24
2023-06-02 14:09:24,247:INFO:_display_container: 3
2023-06-02 14:09:24,247:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1156, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:09:24,247:INFO:create_model() successfully completed......................................
2023-06-02 14:09:24,440:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:24,440:INFO:Creating metrics dataframe
2023-06-02 14:09:24,457:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:09:24,457:INFO:Total runtime is 0.16639351844787598 minutes
2023-06-02 14:09:24,461:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:24,461:INFO:Initializing create_model()
2023-06-02 14:09:24,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:24,461:INFO:Checking exceptions
2023-06-02 14:09:24,462:INFO:Importing libraries
2023-06-02 14:09:24,462:INFO:Copying training dataset
2023-06-02 14:09:24,466:INFO:Defining folds
2023-06-02 14:09:24,467:INFO:Declaring metric variables
2023-06-02 14:09:24,471:INFO:Importing untrained model
2023-06-02 14:09:24,475:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:09:24,483:INFO:Starting cross validation
2023-06-02 14:09:24,485:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:24,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,705:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:24,708:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,719:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,719:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,720:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:24,721:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,722:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,723:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:24,724:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,730:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,732:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:24,733:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,736:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,738:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:24,739:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:24,957:INFO:Calculating mean and std
2023-06-02 14:09:24,958:INFO:Creating metrics dataframe
2023-06-02 14:09:25,032:INFO:Uploading results into container
2023-06-02 14:09:25,033:INFO:Uploading model into container now
2023-06-02 14:09:25,033:INFO:_master_model_container: 25
2023-06-02 14:09:25,033:INFO:_display_container: 3
2023-06-02 14:09:25,034:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:09:25,034:INFO:create_model() successfully completed......................................
2023-06-02 14:09:25,232:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:25,233:INFO:Creating metrics dataframe
2023-06-02 14:09:25,250:INFO:Initializing Extra Trees Classifier
2023-06-02 14:09:25,250:INFO:Total runtime is 0.17961162726084393 minutes
2023-06-02 14:09:25,253:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:25,254:INFO:Initializing create_model()
2023-06-02 14:09:25,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:25,254:INFO:Checking exceptions
2023-06-02 14:09:25,254:INFO:Importing libraries
2023-06-02 14:09:25,254:INFO:Copying training dataset
2023-06-02 14:09:25,259:INFO:Defining folds
2023-06-02 14:09:25,259:INFO:Declaring metric variables
2023-06-02 14:09:25,263:INFO:Importing untrained model
2023-06-02 14:09:25,268:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:09:25,275:INFO:Starting cross validation
2023-06-02 14:09:25,277:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:25,820:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,823:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,824:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:25,825:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,829:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,832:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,833:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:25,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,837:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:25,839:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,845:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,848:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,848:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,849:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:25,850:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,850:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:25,851:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:25,852:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:26,066:INFO:Calculating mean and std
2023-06-02 14:09:26,067:INFO:Creating metrics dataframe
2023-06-02 14:09:26,138:INFO:Uploading results into container
2023-06-02 14:09:26,139:INFO:Uploading model into container now
2023-06-02 14:09:26,139:INFO:_master_model_container: 26
2023-06-02 14:09:26,139:INFO:_display_container: 3
2023-06-02 14:09:26,140:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:09:26,140:INFO:create_model() successfully completed......................................
2023-06-02 14:09:26,329:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:26,329:INFO:Creating metrics dataframe
2023-06-02 14:09:26,346:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:09:26,346:INFO:Total runtime is 0.197874387105306 minutes
2023-06-02 14:09:26,351:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:26,351:INFO:Initializing create_model()
2023-06-02 14:09:26,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:26,351:INFO:Checking exceptions
2023-06-02 14:09:26,352:INFO:Importing libraries
2023-06-02 14:09:26,352:INFO:Copying training dataset
2023-06-02 14:09:26,356:INFO:Defining folds
2023-06-02 14:09:26,356:INFO:Declaring metric variables
2023-06-02 14:09:26,360:INFO:Importing untrained model
2023-06-02 14:09:26,365:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:09:26,373:INFO:Starting cross validation
2023-06-02 14:09:26,375:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:26,721:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:26,724:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:26,725:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:26,726:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:26,726:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:26,728:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:26,729:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:26,731:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,798:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:27,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,854:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,856:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,857:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:27,858:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,859:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,861:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,863:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:27,864:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:27,933:INFO:Calculating mean and std
2023-06-02 14:09:27,934:INFO:Creating metrics dataframe
2023-06-02 14:09:28,003:INFO:Uploading results into container
2023-06-02 14:09:28,004:INFO:Uploading model into container now
2023-06-02 14:09:28,004:INFO:_master_model_container: 27
2023-06-02 14:09:28,004:INFO:_display_container: 3
2023-06-02 14:09:28,005:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1156, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:09:28,005:INFO:create_model() successfully completed......................................
2023-06-02 14:09:28,204:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:28,204:INFO:Creating metrics dataframe
2023-06-02 14:09:28,222:INFO:Initializing Dummy Classifier
2023-06-02 14:09:28,222:INFO:Total runtime is 0.229142435391744 minutes
2023-06-02 14:09:28,226:INFO:SubProcess create_model() called ==================================
2023-06-02 14:09:28,226:INFO:Initializing create_model()
2023-06-02 14:09:28,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D90F271180>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:28,227:INFO:Checking exceptions
2023-06-02 14:09:28,227:INFO:Importing libraries
2023-06-02 14:09:28,227:INFO:Copying training dataset
2023-06-02 14:09:28,232:INFO:Defining folds
2023-06-02 14:09:28,232:INFO:Declaring metric variables
2023-06-02 14:09:28,236:INFO:Importing untrained model
2023-06-02 14:09:28,240:INFO:Dummy Classifier Imported successfully
2023-06-02 14:09:28,248:INFO:Starting cross validation
2023-06-02 14:09:28,249:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:09:28,466:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,468:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,469:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:28,470:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,479:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,479:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,483:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:28,484:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,484:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:28,484:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,485:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,486:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,487:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:28,488:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,494:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,496:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,497:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:09:28,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:09:28,709:INFO:Calculating mean and std
2023-06-02 14:09:28,711:INFO:Creating metrics dataframe
2023-06-02 14:09:28,779:INFO:Uploading results into container
2023-06-02 14:09:28,780:INFO:Uploading model into container now
2023-06-02 14:09:28,781:INFO:_master_model_container: 28
2023-06-02 14:09:28,781:INFO:_display_container: 3
2023-06-02 14:09:28,781:INFO:DummyClassifier(constant=None, random_state=1156, strategy='prior')
2023-06-02 14:09:28,781:INFO:create_model() successfully completed......................................
2023-06-02 14:09:28,971:INFO:SubProcess create_model() end ==================================
2023-06-02 14:09:28,971:INFO:Creating metrics dataframe
2023-06-02 14:09:29,000:INFO:Initializing create_model()
2023-06-02 14:09:29,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:29,000:INFO:Checking exceptions
2023-06-02 14:09:29,002:INFO:Importing libraries
2023-06-02 14:09:29,003:INFO:Copying training dataset
2023-06-02 14:09:29,007:INFO:Defining folds
2023-06-02 14:09:29,007:INFO:Declaring metric variables
2023-06-02 14:09:29,007:INFO:Importing untrained model
2023-06-02 14:09:29,007:INFO:Declaring custom model
2023-06-02 14:09:29,008:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:09:29,009:INFO:Cross validation set to False
2023-06-02 14:09:29,009:INFO:Fitting Model
2023-06-02 14:09:29,089:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:09:29,145:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:09:29,145:INFO:create_model() successfully completed......................................
2023-06-02 14:09:29,341:INFO:Initializing create_model()
2023-06-02 14:09:29,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:29,342:INFO:Checking exceptions
2023-06-02 14:09:29,344:INFO:Importing libraries
2023-06-02 14:09:29,344:INFO:Copying training dataset
2023-06-02 14:09:29,348:INFO:Defining folds
2023-06-02 14:09:29,348:INFO:Declaring metric variables
2023-06-02 14:09:29,348:INFO:Importing untrained model
2023-06-02 14:09:29,348:INFO:Declaring custom model
2023-06-02 14:09:29,349:INFO:Logistic Regression Imported successfully
2023-06-02 14:09:29,350:INFO:Cross validation set to False
2023-06-02 14:09:29,350:INFO:Fitting Model
2023-06-02 14:09:29,496:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:09:29,496:INFO:create_model() successfully completed......................................
2023-06-02 14:09:29,692:INFO:Initializing create_model()
2023-06-02 14:09:29,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:29,692:INFO:Checking exceptions
2023-06-02 14:09:29,694:INFO:Importing libraries
2023-06-02 14:09:29,695:INFO:Copying training dataset
2023-06-02 14:09:29,699:INFO:Defining folds
2023-06-02 14:09:29,699:INFO:Declaring metric variables
2023-06-02 14:09:29,699:INFO:Importing untrained model
2023-06-02 14:09:29,699:INFO:Declaring custom model
2023-06-02 14:09:29,700:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:09:29,700:INFO:Cross validation set to False
2023-06-02 14:09:29,700:INFO:Fitting Model
2023-06-02 14:09:29,833:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:09:29,833:INFO:create_model() successfully completed......................................
2023-06-02 14:09:30,032:INFO:Initializing create_model()
2023-06-02 14:09:30,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:30,032:INFO:Checking exceptions
2023-06-02 14:09:30,035:INFO:Importing libraries
2023-06-02 14:09:30,035:INFO:Copying training dataset
2023-06-02 14:09:30,039:INFO:Defining folds
2023-06-02 14:09:30,039:INFO:Declaring metric variables
2023-06-02 14:09:30,039:INFO:Importing untrained model
2023-06-02 14:09:30,040:INFO:Declaring custom model
2023-06-02 14:09:30,040:INFO:Naive Bayes Imported successfully
2023-06-02 14:09:30,041:INFO:Cross validation set to False
2023-06-02 14:09:30,042:INFO:Fitting Model
2023-06-02 14:09:30,198:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:09:30,198:INFO:create_model() successfully completed......................................
2023-06-02 14:09:30,400:INFO:Initializing create_model()
2023-06-02 14:09:30,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:09:30,400:INFO:Checking exceptions
2023-06-02 14:09:30,402:INFO:Importing libraries
2023-06-02 14:09:30,402:INFO:Copying training dataset
2023-06-02 14:09:30,406:INFO:Defining folds
2023-06-02 14:09:30,406:INFO:Declaring metric variables
2023-06-02 14:09:30,406:INFO:Importing untrained model
2023-06-02 14:09:30,406:INFO:Declaring custom model
2023-06-02 14:09:30,407:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:09:30,408:INFO:Cross validation set to False
2023-06-02 14:09:30,408:INFO:Fitting Model
2023-06-02 14:09:30,541:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:09:30,541:INFO:create_model() successfully completed......................................
2023-06-02 14:09:30,764:INFO:_master_model_container: 28
2023-06-02 14:09:30,764:INFO:_display_container: 3
2023-06-02 14:09:30,766:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')]
2023-06-02 14:09:30,766:INFO:compare_models() successfully completed......................................
2023-06-02 14:10:21,346:INFO:Initializing compare_models()
2023-06-02 14:10:21,346:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 14:10:21,346:INFO:Checking exceptions
2023-06-02 14:10:21,348:INFO:Preparing display monitor
2023-06-02 14:10:21,389:INFO:Initializing Logistic Regression
2023-06-02 14:10:21,389:INFO:Total runtime is 0.0 minutes
2023-06-02 14:10:21,395:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:21,395:INFO:Initializing create_model()
2023-06-02 14:10:21,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:21,395:INFO:Checking exceptions
2023-06-02 14:10:21,396:INFO:Importing libraries
2023-06-02 14:10:21,396:INFO:Copying training dataset
2023-06-02 14:10:21,401:INFO:Defining folds
2023-06-02 14:10:21,401:INFO:Declaring metric variables
2023-06-02 14:10:21,407:INFO:Importing untrained model
2023-06-02 14:10:21,412:INFO:Logistic Regression Imported successfully
2023-06-02 14:10:21,423:INFO:Starting cross validation
2023-06-02 14:10:21,424:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:21,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,710:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:21,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:21,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,716:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:21,720:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:21,720:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,721:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,729:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,732:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:21,735:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:21,956:INFO:Calculating mean and std
2023-06-02 14:10:21,956:INFO:Creating metrics dataframe
2023-06-02 14:10:22,025:INFO:Uploading results into container
2023-06-02 14:10:22,026:INFO:Uploading model into container now
2023-06-02 14:10:22,026:INFO:_master_model_container: 29
2023-06-02 14:10:22,027:INFO:_display_container: 4
2023-06-02 14:10:22,027:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:10:22,027:INFO:create_model() successfully completed......................................
2023-06-02 14:10:22,228:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:22,229:INFO:Creating metrics dataframe
2023-06-02 14:10:22,240:INFO:Initializing K Neighbors Classifier
2023-06-02 14:10:22,240:INFO:Total runtime is 0.014180215199788411 minutes
2023-06-02 14:10:22,244:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:22,244:INFO:Initializing create_model()
2023-06-02 14:10:22,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:22,244:INFO:Checking exceptions
2023-06-02 14:10:22,245:INFO:Importing libraries
2023-06-02 14:10:22,245:INFO:Copying training dataset
2023-06-02 14:10:22,249:INFO:Defining folds
2023-06-02 14:10:22,249:INFO:Declaring metric variables
2023-06-02 14:10:22,253:INFO:Importing untrained model
2023-06-02 14:10:22,257:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:10:22,265:INFO:Starting cross validation
2023-06-02 14:10:22,266:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:22,520:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,523:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,524:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:22,525:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,527:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,528:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,530:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,531:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:22,531:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,532:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,533:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:22,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,540:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,540:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,541:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:22,542:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,542:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,543:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:22,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:22,772:INFO:Calculating mean and std
2023-06-02 14:10:22,773:INFO:Creating metrics dataframe
2023-06-02 14:10:22,843:INFO:Uploading results into container
2023-06-02 14:10:22,843:INFO:Uploading model into container now
2023-06-02 14:10:22,844:INFO:_master_model_container: 30
2023-06-02 14:10:22,844:INFO:_display_container: 4
2023-06-02 14:10:22,844:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:10:22,844:INFO:create_model() successfully completed......................................
2023-06-02 14:10:23,045:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:23,046:INFO:Creating metrics dataframe
2023-06-02 14:10:23,059:INFO:Initializing Naive Bayes
2023-06-02 14:10:23,060:INFO:Total runtime is 0.02785377899805705 minutes
2023-06-02 14:10:23,063:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:23,063:INFO:Initializing create_model()
2023-06-02 14:10:23,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:23,064:INFO:Checking exceptions
2023-06-02 14:10:23,064:INFO:Importing libraries
2023-06-02 14:10:23,064:INFO:Copying training dataset
2023-06-02 14:10:23,068:INFO:Defining folds
2023-06-02 14:10:23,069:INFO:Declaring metric variables
2023-06-02 14:10:23,073:INFO:Importing untrained model
2023-06-02 14:10:23,077:INFO:Naive Bayes Imported successfully
2023-06-02 14:10:23,085:INFO:Starting cross validation
2023-06-02 14:10:23,087:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:23,312:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,315:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,317:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:23,319:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,324:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,326:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,327:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:23,328:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,330:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,332:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,334:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:23,335:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,338:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,341:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,343:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:23,343:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,344:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,346:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,348:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:23,349:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:23,566:INFO:Calculating mean and std
2023-06-02 14:10:23,568:INFO:Creating metrics dataframe
2023-06-02 14:10:23,638:INFO:Uploading results into container
2023-06-02 14:10:23,638:INFO:Uploading model into container now
2023-06-02 14:10:23,639:INFO:_master_model_container: 31
2023-06-02 14:10:23,639:INFO:_display_container: 4
2023-06-02 14:10:23,639:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:10:23,639:INFO:create_model() successfully completed......................................
2023-06-02 14:10:23,835:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:23,835:INFO:Creating metrics dataframe
2023-06-02 14:10:23,850:INFO:Initializing Decision Tree Classifier
2023-06-02 14:10:23,850:INFO:Total runtime is 0.04101336399714152 minutes
2023-06-02 14:10:23,855:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:23,855:INFO:Initializing create_model()
2023-06-02 14:10:23,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:23,855:INFO:Checking exceptions
2023-06-02 14:10:23,856:INFO:Importing libraries
2023-06-02 14:10:23,856:INFO:Copying training dataset
2023-06-02 14:10:23,860:INFO:Defining folds
2023-06-02 14:10:23,860:INFO:Declaring metric variables
2023-06-02 14:10:23,864:INFO:Importing untrained model
2023-06-02 14:10:23,869:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:10:23,877:INFO:Starting cross validation
2023-06-02 14:10:23,879:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:24,116:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,119:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,121:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,123:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,124:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,126:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,130:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,132:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,138:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,138:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,141:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,367:INFO:Calculating mean and std
2023-06-02 14:10:24,369:INFO:Creating metrics dataframe
2023-06-02 14:10:24,439:INFO:Uploading results into container
2023-06-02 14:10:24,440:INFO:Uploading model into container now
2023-06-02 14:10:24,440:INFO:_master_model_container: 32
2023-06-02 14:10:24,440:INFO:_display_container: 4
2023-06-02 14:10:24,441:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:10:24,441:INFO:create_model() successfully completed......................................
2023-06-02 14:10:24,634:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:24,635:INFO:Creating metrics dataframe
2023-06-02 14:10:24,648:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:10:24,648:INFO:Total runtime is 0.054314740498860675 minutes
2023-06-02 14:10:24,652:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:24,652:INFO:Initializing create_model()
2023-06-02 14:10:24,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:24,653:INFO:Checking exceptions
2023-06-02 14:10:24,653:INFO:Importing libraries
2023-06-02 14:10:24,653:INFO:Copying training dataset
2023-06-02 14:10:24,657:INFO:Defining folds
2023-06-02 14:10:24,657:INFO:Declaring metric variables
2023-06-02 14:10:24,661:INFO:Importing untrained model
2023-06-02 14:10:24,666:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:10:24,674:INFO:Starting cross validation
2023-06-02 14:10:24,675:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:24,855:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:10:24,855:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,857:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,859:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,859:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,861:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:10:24,861:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,863:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,865:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,865:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,875:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:10:24,876:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,878:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,880:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,881:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:10:24,881:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:10:24,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,882:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,884:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,885:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,885:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,886:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:24,887:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:24,888:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,102:INFO:Calculating mean and std
2023-06-02 14:10:25,103:INFO:Creating metrics dataframe
2023-06-02 14:10:25,172:INFO:Uploading results into container
2023-06-02 14:10:25,172:INFO:Uploading model into container now
2023-06-02 14:10:25,173:INFO:_master_model_container: 33
2023-06-02 14:10:25,173:INFO:_display_container: 4
2023-06-02 14:10:25,174:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1156, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:10:25,174:INFO:create_model() successfully completed......................................
2023-06-02 14:10:25,373:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:25,373:INFO:Creating metrics dataframe
2023-06-02 14:10:25,389:INFO:Initializing Ridge Classifier
2023-06-02 14:10:25,389:INFO:Total runtime is 0.06666615804036458 minutes
2023-06-02 14:10:25,394:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:25,394:INFO:Initializing create_model()
2023-06-02 14:10:25,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:25,394:INFO:Checking exceptions
2023-06-02 14:10:25,395:INFO:Importing libraries
2023-06-02 14:10:25,395:INFO:Copying training dataset
2023-06-02 14:10:25,400:INFO:Defining folds
2023-06-02 14:10:25,400:INFO:Declaring metric variables
2023-06-02 14:10:25,405:INFO:Importing untrained model
2023-06-02 14:10:25,410:INFO:Ridge Classifier Imported successfully
2023-06-02 14:10:25,418:INFO:Starting cross validation
2023-06-02 14:10:25,420:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:25,601:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:10:25,602:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,607:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:10:25,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:25,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,610:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,611:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:25,611:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:10:25,612:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,612:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,612:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:10:25,613:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,614:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:10:25,615:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,615:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,615:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:25,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:25,618:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,618:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,619:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:25,620:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:25,849:INFO:Calculating mean and std
2023-06-02 14:10:25,850:INFO:Creating metrics dataframe
2023-06-02 14:10:25,919:INFO:Uploading results into container
2023-06-02 14:10:25,919:INFO:Uploading model into container now
2023-06-02 14:10:25,920:INFO:_master_model_container: 34
2023-06-02 14:10:25,920:INFO:_display_container: 4
2023-06-02 14:10:25,921:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1156, solver='auto',
                tol=0.0001)
2023-06-02 14:10:25,921:INFO:create_model() successfully completed......................................
2023-06-02 14:10:26,111:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:26,111:INFO:Creating metrics dataframe
2023-06-02 14:10:26,127:INFO:Initializing Random Forest Classifier
2023-06-02 14:10:26,127:INFO:Total runtime is 0.0789669116338094 minutes
2023-06-02 14:10:26,131:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:26,132:INFO:Initializing create_model()
2023-06-02 14:10:26,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:26,132:INFO:Checking exceptions
2023-06-02 14:10:26,132:INFO:Importing libraries
2023-06-02 14:10:26,132:INFO:Copying training dataset
2023-06-02 14:10:26,137:INFO:Defining folds
2023-06-02 14:10:26,137:INFO:Declaring metric variables
2023-06-02 14:10:26,142:INFO:Importing untrained model
2023-06-02 14:10:26,146:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:10:26,154:INFO:Starting cross validation
2023-06-02 14:10:26,156:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:26,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:26,713:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,715:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,719:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:26,721:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,731:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,736:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:26,737:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,740:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,743:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,744:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:26,744:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,745:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,746:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,747:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:26,748:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:26,969:INFO:Calculating mean and std
2023-06-02 14:10:26,971:INFO:Creating metrics dataframe
2023-06-02 14:10:27,039:INFO:Uploading results into container
2023-06-02 14:10:27,040:INFO:Uploading model into container now
2023-06-02 14:10:27,041:INFO:_master_model_container: 35
2023-06-02 14:10:27,041:INFO:_display_container: 4
2023-06-02 14:10:27,041:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:10:27,041:INFO:create_model() successfully completed......................................
2023-06-02 14:10:27,243:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:27,243:INFO:Creating metrics dataframe
2023-06-02 14:10:27,258:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:10:27,258:INFO:Total runtime is 0.09782561461130776 minutes
2023-06-02 14:10:27,262:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:27,263:INFO:Initializing create_model()
2023-06-02 14:10:27,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:27,263:INFO:Checking exceptions
2023-06-02 14:10:27,263:INFO:Importing libraries
2023-06-02 14:10:27,263:INFO:Copying training dataset
2023-06-02 14:10:27,268:INFO:Defining folds
2023-06-02 14:10:27,269:INFO:Declaring metric variables
2023-06-02 14:10:27,273:INFO:Importing untrained model
2023-06-02 14:10:27,277:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:10:27,286:INFO:Starting cross validation
2023-06-02 14:10:27,288:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:27,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:10:27,402:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:10:27,408:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:10:27,411:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:10:27,422:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:10:27,444:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,445:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,445:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,457:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,458:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,458:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,461:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,461:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,461:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,466:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,481:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,481:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,499:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,504:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:10:27,505:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,507:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,508:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:27,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,515:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,515:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,515:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,516:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,517:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,517:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:10:27,517:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,518:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,519:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:10:27,520:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,521:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,522:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:27,523:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,523:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,524:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:27,525:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,527:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,527:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,528:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,529:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:10:27,530:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,532:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:27,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:10:27,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:10:27,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:10:27,541:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:10:27,542:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,544:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,545:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:27,546:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:27,755:INFO:Calculating mean and std
2023-06-02 14:10:27,757:INFO:Creating metrics dataframe
2023-06-02 14:10:27,827:INFO:Uploading results into container
2023-06-02 14:10:27,828:INFO:Uploading model into container now
2023-06-02 14:10:27,828:INFO:_master_model_container: 36
2023-06-02 14:10:27,828:INFO:_display_container: 4
2023-06-02 14:10:27,828:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:10:27,828:INFO:create_model() successfully completed......................................
2023-06-02 14:10:28,027:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:28,028:INFO:Creating metrics dataframe
2023-06-02 14:10:28,045:INFO:Initializing Ada Boost Classifier
2023-06-02 14:10:28,045:INFO:Total runtime is 0.11094390948613483 minutes
2023-06-02 14:10:28,050:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:28,051:INFO:Initializing create_model()
2023-06-02 14:10:28,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:28,051:INFO:Checking exceptions
2023-06-02 14:10:28,051:INFO:Importing libraries
2023-06-02 14:10:28,051:INFO:Copying training dataset
2023-06-02 14:10:28,057:INFO:Defining folds
2023-06-02 14:10:28,057:INFO:Declaring metric variables
2023-06-02 14:10:28,063:INFO:Importing untrained model
2023-06-02 14:10:28,070:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:10:28,080:INFO:Starting cross validation
2023-06-02 14:10:28,085:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:28,473:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,475:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,477:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:28,477:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,484:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,486:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,487:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,488:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:28,488:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:28,490:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,558:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,562:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,563:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:28,565:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,668:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,671:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,673:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:28,674:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:28,746:INFO:Calculating mean and std
2023-06-02 14:10:28,747:INFO:Creating metrics dataframe
2023-06-02 14:10:28,818:INFO:Uploading results into container
2023-06-02 14:10:28,819:INFO:Uploading model into container now
2023-06-02 14:10:28,819:INFO:_master_model_container: 37
2023-06-02 14:10:28,819:INFO:_display_container: 4
2023-06-02 14:10:28,819:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1156)
2023-06-02 14:10:28,819:INFO:create_model() successfully completed......................................
2023-06-02 14:10:29,017:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:29,017:INFO:Creating metrics dataframe
2023-06-02 14:10:29,034:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:10:29,034:INFO:Total runtime is 0.1274229605992635 minutes
2023-06-02 14:10:29,038:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:29,038:INFO:Initializing create_model()
2023-06-02 14:10:29,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:29,038:INFO:Checking exceptions
2023-06-02 14:10:29,039:INFO:Importing libraries
2023-06-02 14:10:29,039:INFO:Copying training dataset
2023-06-02 14:10:29,043:INFO:Defining folds
2023-06-02 14:10:29,043:INFO:Declaring metric variables
2023-06-02 14:10:29,047:INFO:Importing untrained model
2023-06-02 14:10:29,052:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:10:29,060:INFO:Starting cross validation
2023-06-02 14:10:29,062:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:30,861:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,863:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,864:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:30,864:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,865:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,867:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,869:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:30,870:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,906:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,909:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,911:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:30,911:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,912:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,913:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,914:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:30,915:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,964:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,967:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:30,968:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:30,969:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,117:INFO:Calculating mean and std
2023-06-02 14:10:31,119:INFO:Creating metrics dataframe
2023-06-02 14:10:31,190:INFO:Uploading results into container
2023-06-02 14:10:31,191:INFO:Uploading model into container now
2023-06-02 14:10:31,191:INFO:_master_model_container: 38
2023-06-02 14:10:31,191:INFO:_display_container: 4
2023-06-02 14:10:31,192:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1156, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:10:31,192:INFO:create_model() successfully completed......................................
2023-06-02 14:10:31,384:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:31,385:INFO:Creating metrics dataframe
2023-06-02 14:10:31,402:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:10:31,402:INFO:Total runtime is 0.16688342889149982 minutes
2023-06-02 14:10:31,407:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:31,408:INFO:Initializing create_model()
2023-06-02 14:10:31,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:31,408:INFO:Checking exceptions
2023-06-02 14:10:31,408:INFO:Importing libraries
2023-06-02 14:10:31,408:INFO:Copying training dataset
2023-06-02 14:10:31,413:INFO:Defining folds
2023-06-02 14:10:31,413:INFO:Declaring metric variables
2023-06-02 14:10:31,418:INFO:Importing untrained model
2023-06-02 14:10:31,422:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:10:31,430:INFO:Starting cross validation
2023-06-02 14:10:31,432:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:31,658:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,659:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,662:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:31,662:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:31,663:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,663:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,665:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,669:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,671:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:31,672:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,677:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,677:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,679:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,679:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:31,681:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:31,681:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,682:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:31,910:INFO:Calculating mean and std
2023-06-02 14:10:31,911:INFO:Creating metrics dataframe
2023-06-02 14:10:31,981:INFO:Uploading results into container
2023-06-02 14:10:31,982:INFO:Uploading model into container now
2023-06-02 14:10:31,982:INFO:_master_model_container: 39
2023-06-02 14:10:31,982:INFO:_display_container: 4
2023-06-02 14:10:31,983:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:10:31,983:INFO:create_model() successfully completed......................................
2023-06-02 14:10:32,178:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:32,179:INFO:Creating metrics dataframe
2023-06-02 14:10:32,203:INFO:Initializing Extra Trees Classifier
2023-06-02 14:10:32,203:INFO:Total runtime is 0.18023287852605183 minutes
2023-06-02 14:10:32,207:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:32,207:INFO:Initializing create_model()
2023-06-02 14:10:32,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:32,207:INFO:Checking exceptions
2023-06-02 14:10:32,208:INFO:Importing libraries
2023-06-02 14:10:32,208:INFO:Copying training dataset
2023-06-02 14:10:32,212:INFO:Defining folds
2023-06-02 14:10:32,212:INFO:Declaring metric variables
2023-06-02 14:10:32,216:INFO:Importing untrained model
2023-06-02 14:10:32,222:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:10:32,230:INFO:Starting cross validation
2023-06-02 14:10:32,232:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:32,755:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,758:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,759:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:32,760:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,762:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,764:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,766:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:32,767:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,775:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,777:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:32,780:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,789:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,792:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,793:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:32,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:32,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:32,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,019:INFO:Calculating mean and std
2023-06-02 14:10:33,020:INFO:Creating metrics dataframe
2023-06-02 14:10:33,088:INFO:Uploading results into container
2023-06-02 14:10:33,089:INFO:Uploading model into container now
2023-06-02 14:10:33,089:INFO:_master_model_container: 40
2023-06-02 14:10:33,089:INFO:_display_container: 4
2023-06-02 14:10:33,090:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:10:33,090:INFO:create_model() successfully completed......................................
2023-06-02 14:10:33,289:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:33,289:INFO:Creating metrics dataframe
2023-06-02 14:10:33,306:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:10:33,306:INFO:Total runtime is 0.19861445824305216 minutes
2023-06-02 14:10:33,310:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:33,311:INFO:Initializing create_model()
2023-06-02 14:10:33,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:33,311:INFO:Checking exceptions
2023-06-02 14:10:33,311:INFO:Importing libraries
2023-06-02 14:10:33,311:INFO:Copying training dataset
2023-06-02 14:10:33,316:INFO:Defining folds
2023-06-02 14:10:33,316:INFO:Declaring metric variables
2023-06-02 14:10:33,320:INFO:Importing untrained model
2023-06-02 14:10:33,324:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:10:33,331:INFO:Starting cross validation
2023-06-02 14:10:33,334:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:33,662:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:33,667:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,678:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,681:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:33,682:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,682:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,683:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,684:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:33,685:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,685:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,686:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,687:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,688:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:33,689:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:33,689:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,690:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:33,911:INFO:Calculating mean and std
2023-06-02 14:10:33,912:INFO:Creating metrics dataframe
2023-06-02 14:10:33,983:INFO:Uploading results into container
2023-06-02 14:10:33,984:INFO:Uploading model into container now
2023-06-02 14:10:33,984:INFO:_master_model_container: 41
2023-06-02 14:10:33,985:INFO:_display_container: 4
2023-06-02 14:10:33,985:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1156, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:10:33,985:INFO:create_model() successfully completed......................................
2023-06-02 14:10:34,175:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:34,176:INFO:Creating metrics dataframe
2023-06-02 14:10:34,193:INFO:Initializing Dummy Classifier
2023-06-02 14:10:34,194:INFO:Total runtime is 0.21342188517252603 minutes
2023-06-02 14:10:34,197:INFO:SubProcess create_model() called ==================================
2023-06-02 14:10:34,198:INFO:Initializing create_model()
2023-06-02 14:10:34,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D912EEB9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:34,198:INFO:Checking exceptions
2023-06-02 14:10:34,198:INFO:Importing libraries
2023-06-02 14:10:34,198:INFO:Copying training dataset
2023-06-02 14:10:34,203:INFO:Defining folds
2023-06-02 14:10:34,203:INFO:Declaring metric variables
2023-06-02 14:10:34,207:INFO:Importing untrained model
2023-06-02 14:10:34,211:INFO:Dummy Classifier Imported successfully
2023-06-02 14:10:34,219:INFO:Starting cross validation
2023-06-02 14:10:34,221:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:10:34,438:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,441:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:34,442:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,448:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,448:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:34,449:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,451:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,452:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:34,453:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,459:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,462:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,463:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:34,463:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,465:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,469:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:10:34,470:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:10:34,695:INFO:Calculating mean and std
2023-06-02 14:10:34,697:INFO:Creating metrics dataframe
2023-06-02 14:10:34,768:INFO:Uploading results into container
2023-06-02 14:10:34,769:INFO:Uploading model into container now
2023-06-02 14:10:34,769:INFO:_master_model_container: 42
2023-06-02 14:10:34,769:INFO:_display_container: 4
2023-06-02 14:10:34,769:INFO:DummyClassifier(constant=None, random_state=1156, strategy='prior')
2023-06-02 14:10:34,770:INFO:create_model() successfully completed......................................
2023-06-02 14:10:34,969:INFO:SubProcess create_model() end ==================================
2023-06-02 14:10:34,970:INFO:Creating metrics dataframe
2023-06-02 14:10:35,001:INFO:Initializing create_model()
2023-06-02 14:10:35,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:35,001:INFO:Checking exceptions
2023-06-02 14:10:35,004:INFO:Importing libraries
2023-06-02 14:10:35,004:INFO:Copying training dataset
2023-06-02 14:10:35,008:INFO:Defining folds
2023-06-02 14:10:35,009:INFO:Declaring metric variables
2023-06-02 14:10:35,009:INFO:Importing untrained model
2023-06-02 14:10:35,009:INFO:Declaring custom model
2023-06-02 14:10:35,010:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:10:35,011:INFO:Cross validation set to False
2023-06-02 14:10:35,011:INFO:Fitting Model
2023-06-02 14:10:35,090:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:10:35,147:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:10:35,147:INFO:create_model() successfully completed......................................
2023-06-02 14:10:35,344:INFO:Initializing create_model()
2023-06-02 14:10:35,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:35,345:INFO:Checking exceptions
2023-06-02 14:10:35,347:INFO:Importing libraries
2023-06-02 14:10:35,347:INFO:Copying training dataset
2023-06-02 14:10:35,351:INFO:Defining folds
2023-06-02 14:10:35,351:INFO:Declaring metric variables
2023-06-02 14:10:35,351:INFO:Importing untrained model
2023-06-02 14:10:35,351:INFO:Declaring custom model
2023-06-02 14:10:35,352:INFO:Logistic Regression Imported successfully
2023-06-02 14:10:35,353:INFO:Cross validation set to False
2023-06-02 14:10:35,353:INFO:Fitting Model
2023-06-02 14:10:35,495:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:10:35,495:INFO:create_model() successfully completed......................................
2023-06-02 14:10:35,692:INFO:Initializing create_model()
2023-06-02 14:10:35,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:35,692:INFO:Checking exceptions
2023-06-02 14:10:35,694:INFO:Importing libraries
2023-06-02 14:10:35,695:INFO:Copying training dataset
2023-06-02 14:10:35,698:INFO:Defining folds
2023-06-02 14:10:35,698:INFO:Declaring metric variables
2023-06-02 14:10:35,698:INFO:Importing untrained model
2023-06-02 14:10:35,698:INFO:Declaring custom model
2023-06-02 14:10:35,699:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:10:35,700:INFO:Cross validation set to False
2023-06-02 14:10:35,700:INFO:Fitting Model
2023-06-02 14:10:35,837:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:10:35,837:INFO:create_model() successfully completed......................................
2023-06-02 14:10:36,037:INFO:Initializing create_model()
2023-06-02 14:10:36,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:36,037:INFO:Checking exceptions
2023-06-02 14:10:36,040:INFO:Importing libraries
2023-06-02 14:10:36,040:INFO:Copying training dataset
2023-06-02 14:10:36,044:INFO:Defining folds
2023-06-02 14:10:36,044:INFO:Declaring metric variables
2023-06-02 14:10:36,044:INFO:Importing untrained model
2023-06-02 14:10:36,044:INFO:Declaring custom model
2023-06-02 14:10:36,045:INFO:Naive Bayes Imported successfully
2023-06-02 14:10:36,046:INFO:Cross validation set to False
2023-06-02 14:10:36,046:INFO:Fitting Model
2023-06-02 14:10:36,181:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:10:36,182:INFO:create_model() successfully completed......................................
2023-06-02 14:10:36,380:INFO:Initializing create_model()
2023-06-02 14:10:36,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:10:36,380:INFO:Checking exceptions
2023-06-02 14:10:36,381:INFO:Importing libraries
2023-06-02 14:10:36,382:INFO:Copying training dataset
2023-06-02 14:10:36,385:INFO:Defining folds
2023-06-02 14:10:36,385:INFO:Declaring metric variables
2023-06-02 14:10:36,386:INFO:Importing untrained model
2023-06-02 14:10:36,386:INFO:Declaring custom model
2023-06-02 14:10:36,386:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:10:36,388:INFO:Cross validation set to False
2023-06-02 14:10:36,388:INFO:Fitting Model
2023-06-02 14:10:36,531:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:10:36,531:INFO:create_model() successfully completed......................................
2023-06-02 14:10:36,769:INFO:_master_model_container: 42
2023-06-02 14:10:36,770:INFO:_display_container: 4
2023-06-02 14:10:36,772:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')]
2023-06-02 14:10:36,772:INFO:compare_models() successfully completed......................................
2023-06-02 14:13:14,085:INFO:Initializing compare_models()
2023-06-02 14:13:14,085:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 14:13:14,085:INFO:Checking exceptions
2023-06-02 14:13:14,087:INFO:Preparing display monitor
2023-06-02 14:13:14,120:INFO:Initializing Logistic Regression
2023-06-02 14:13:14,120:INFO:Total runtime is 0.0 minutes
2023-06-02 14:13:14,124:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:14,124:INFO:Initializing create_model()
2023-06-02 14:13:14,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:14,125:INFO:Checking exceptions
2023-06-02 14:13:14,125:INFO:Importing libraries
2023-06-02 14:13:14,125:INFO:Copying training dataset
2023-06-02 14:13:14,130:INFO:Defining folds
2023-06-02 14:13:14,131:INFO:Declaring metric variables
2023-06-02 14:13:14,135:INFO:Importing untrained model
2023-06-02 14:13:14,143:INFO:Logistic Regression Imported successfully
2023-06-02 14:13:14,156:INFO:Starting cross validation
2023-06-02 14:13:14,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:14,475:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,478:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,479:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,480:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,481:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,484:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,485:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,487:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,490:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,492:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,494:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,497:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,500:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,501:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,503:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,508:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,509:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,511:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,512:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,513:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,513:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,514:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,515:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,515:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,516:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,517:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,521:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,524:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,526:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,527:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,533:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,535:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,536:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,537:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,539:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,539:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:14,541:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:14,543:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,050:INFO:Calculating mean and std
2023-06-02 14:13:15,051:INFO:Creating metrics dataframe
2023-06-02 14:13:15,120:INFO:Uploading results into container
2023-06-02 14:13:15,121:INFO:Uploading model into container now
2023-06-02 14:13:15,121:INFO:_master_model_container: 43
2023-06-02 14:13:15,121:INFO:_display_container: 5
2023-06-02 14:13:15,122:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1156, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:13:15,122:INFO:create_model() successfully completed......................................
2023-06-02 14:13:15,326:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:15,326:INFO:Creating metrics dataframe
2023-06-02 14:13:15,339:INFO:Initializing K Neighbors Classifier
2023-06-02 14:13:15,339:INFO:Total runtime is 0.020325295130411782 minutes
2023-06-02 14:13:15,343:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:15,344:INFO:Initializing create_model()
2023-06-02 14:13:15,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:15,344:INFO:Checking exceptions
2023-06-02 14:13:15,344:INFO:Importing libraries
2023-06-02 14:13:15,344:INFO:Copying training dataset
2023-06-02 14:13:15,349:INFO:Defining folds
2023-06-02 14:13:15,349:INFO:Declaring metric variables
2023-06-02 14:13:15,353:INFO:Importing untrained model
2023-06-02 14:13:15,358:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:13:15,366:INFO:Starting cross validation
2023-06-02 14:13:15,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:15,692:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,695:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,697:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,698:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,698:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,698:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,700:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,700:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,701:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,702:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,704:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,705:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,722:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,725:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,729:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,729:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,732:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,736:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,742:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,745:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,747:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 14:13:15,749:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,751:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,752:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,754:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,773:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,774:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,776:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,778:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,778:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,779:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:15,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:15,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,252:INFO:Calculating mean and std
2023-06-02 14:13:16,253:INFO:Creating metrics dataframe
2023-06-02 14:13:16,321:INFO:Uploading results into container
2023-06-02 14:13:16,322:INFO:Uploading model into container now
2023-06-02 14:13:16,322:INFO:_master_model_container: 44
2023-06-02 14:13:16,322:INFO:_display_container: 5
2023-06-02 14:13:16,323:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:13:16,323:INFO:create_model() successfully completed......................................
2023-06-02 14:13:16,520:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:16,520:INFO:Creating metrics dataframe
2023-06-02 14:13:16,532:INFO:Initializing Naive Bayes
2023-06-02 14:13:16,533:INFO:Total runtime is 0.04023067156473795 minutes
2023-06-02 14:13:16,537:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:16,537:INFO:Initializing create_model()
2023-06-02 14:13:16,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:16,537:INFO:Checking exceptions
2023-06-02 14:13:16,537:INFO:Importing libraries
2023-06-02 14:13:16,538:INFO:Copying training dataset
2023-06-02 14:13:16,543:INFO:Defining folds
2023-06-02 14:13:16,543:INFO:Declaring metric variables
2023-06-02 14:13:16,547:INFO:Importing untrained model
2023-06-02 14:13:16,551:INFO:Naive Bayes Imported successfully
2023-06-02 14:13:16,559:INFO:Starting cross validation
2023-06-02 14:13:16,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:16,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,841:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,843:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,844:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,851:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,854:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,855:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,855:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,856:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,858:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,859:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,861:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,866:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,868:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,870:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,872:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,879:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,882:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,883:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,884:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,885:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,886:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,887:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,889:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,894:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,895:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,897:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,898:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,898:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,899:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,900:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,901:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,905:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,908:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,910:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,912:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,916:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,919:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:16,921:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:16,922:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:17,400:INFO:Calculating mean and std
2023-06-02 14:13:17,401:INFO:Creating metrics dataframe
2023-06-02 14:13:17,470:INFO:Uploading results into container
2023-06-02 14:13:17,471:INFO:Uploading model into container now
2023-06-02 14:13:17,471:INFO:_master_model_container: 45
2023-06-02 14:13:17,471:INFO:_display_container: 5
2023-06-02 14:13:17,472:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:13:17,472:INFO:create_model() successfully completed......................................
2023-06-02 14:13:17,665:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:17,665:INFO:Creating metrics dataframe
2023-06-02 14:13:17,678:INFO:Initializing Decision Tree Classifier
2023-06-02 14:13:17,678:INFO:Total runtime is 0.059302870432535806 minutes
2023-06-02 14:13:17,682:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:17,683:INFO:Initializing create_model()
2023-06-02 14:13:17,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:17,683:INFO:Checking exceptions
2023-06-02 14:13:17,683:INFO:Importing libraries
2023-06-02 14:13:17,684:INFO:Copying training dataset
2023-06-02 14:13:17,688:INFO:Defining folds
2023-06-02 14:13:17,688:INFO:Declaring metric variables
2023-06-02 14:13:17,693:INFO:Importing untrained model
2023-06-02 14:13:17,697:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:13:17,705:INFO:Starting cross validation
2023-06-02 14:13:17,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:17,988:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:17,990:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:17,993:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:17,994:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:17,997:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,000:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,002:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,003:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,013:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,014:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,015:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,016:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,017:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,017:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,018:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,019:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,020:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,021:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,023:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,023:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,026:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,028:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,030:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,033:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,036:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,038:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,040:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,044:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,046:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,048:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,049:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,050:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,052:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,054:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,055:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,063:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,066:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,068:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:18,069:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:18,537:INFO:Calculating mean and std
2023-06-02 14:13:18,539:INFO:Creating metrics dataframe
2023-06-02 14:13:18,609:INFO:Uploading results into container
2023-06-02 14:13:18,610:INFO:Uploading model into container now
2023-06-02 14:13:18,610:INFO:_master_model_container: 46
2023-06-02 14:13:18,610:INFO:_display_container: 5
2023-06-02 14:13:18,611:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1156, splitter='best')
2023-06-02 14:13:18,611:INFO:create_model() successfully completed......................................
2023-06-02 14:13:18,805:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:18,805:INFO:Creating metrics dataframe
2023-06-02 14:13:18,819:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:13:18,819:INFO:Total runtime is 0.07833210229873658 minutes
2023-06-02 14:13:18,823:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:18,824:INFO:Initializing create_model()
2023-06-02 14:13:18,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:18,824:INFO:Checking exceptions
2023-06-02 14:13:18,824:INFO:Importing libraries
2023-06-02 14:13:18,825:INFO:Copying training dataset
2023-06-02 14:13:18,829:INFO:Defining folds
2023-06-02 14:13:18,830:INFO:Declaring metric variables
2023-06-02 14:13:18,833:INFO:Importing untrained model
2023-06-02 14:13:18,838:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:13:18,847:INFO:Starting cross validation
2023-06-02 14:13:18,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:19,108:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,109:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,112:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,114:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,116:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,117:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,118:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,121:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,123:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,124:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,125:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,126:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,127:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,129:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,131:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,132:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,132:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,133:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,133:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,136:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,137:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,167:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,167:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,168:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,168:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,172:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,173:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,173:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,173:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,174:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,175:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,176:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,178:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,179:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,184:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:13:19,186:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,189:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,190:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:19,192:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:19,666:INFO:Calculating mean and std
2023-06-02 14:13:19,667:INFO:Creating metrics dataframe
2023-06-02 14:13:19,738:INFO:Uploading results into container
2023-06-02 14:13:19,739:INFO:Uploading model into container now
2023-06-02 14:13:19,739:INFO:_master_model_container: 47
2023-06-02 14:13:19,740:INFO:_display_container: 5
2023-06-02 14:13:19,740:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1156, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:13:19,740:INFO:create_model() successfully completed......................................
2023-06-02 14:13:19,953:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:19,953:INFO:Creating metrics dataframe
2023-06-02 14:13:19,967:INFO:Initializing Ridge Classifier
2023-06-02 14:13:19,967:INFO:Total runtime is 0.09745028018951417 minutes
2023-06-02 14:13:19,971:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:19,972:INFO:Initializing create_model()
2023-06-02 14:13:19,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:19,972:INFO:Checking exceptions
2023-06-02 14:13:19,972:INFO:Importing libraries
2023-06-02 14:13:19,972:INFO:Copying training dataset
2023-06-02 14:13:19,977:INFO:Defining folds
2023-06-02 14:13:19,977:INFO:Declaring metric variables
2023-06-02 14:13:19,981:INFO:Importing untrained model
2023-06-02 14:13:19,986:INFO:Ridge Classifier Imported successfully
2023-06-02 14:13:19,995:INFO:Starting cross validation
2023-06-02 14:13:19,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:20,216:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,217:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,220:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,220:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,221:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,221:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,223:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,224:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,225:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,226:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,227:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,229:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,229:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,230:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,231:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,233:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,234:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,235:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,237:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,240:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,241:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,245:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,246:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,247:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,247:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,249:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,250:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,252:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,252:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,253:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,253:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,257:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,259:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,263:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,265:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,266:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,269:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,270:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,272:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,278:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,279:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:13:20,279:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,280:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,282:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,283:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,284:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,285:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:20,286:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,286:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:20,778:INFO:Calculating mean and std
2023-06-02 14:13:20,779:INFO:Creating metrics dataframe
2023-06-02 14:13:20,847:INFO:Uploading results into container
2023-06-02 14:13:20,848:INFO:Uploading model into container now
2023-06-02 14:13:20,848:INFO:_master_model_container: 48
2023-06-02 14:13:20,848:INFO:_display_container: 5
2023-06-02 14:13:20,849:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1156, solver='auto',
                tol=0.0001)
2023-06-02 14:13:20,849:INFO:create_model() successfully completed......................................
2023-06-02 14:13:21,037:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:21,037:INFO:Creating metrics dataframe
2023-06-02 14:13:21,052:INFO:Initializing Random Forest Classifier
2023-06-02 14:13:21,052:INFO:Total runtime is 0.11553922891616822 minutes
2023-06-02 14:13:21,056:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:21,057:INFO:Initializing create_model()
2023-06-02 14:13:21,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:21,057:INFO:Checking exceptions
2023-06-02 14:13:21,057:INFO:Importing libraries
2023-06-02 14:13:21,057:INFO:Copying training dataset
2023-06-02 14:13:21,062:INFO:Defining folds
2023-06-02 14:13:21,062:INFO:Declaring metric variables
2023-06-02 14:13:21,066:INFO:Importing untrained model
2023-06-02 14:13:21,071:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:13:21,078:INFO:Starting cross validation
2023-06-02 14:13:21,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:22,211:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,214:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,216:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,217:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,218:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,220:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,221:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,222:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,223:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,224:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,225:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,227:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,231:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,234:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,236:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,238:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,238:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,239:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,240:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,242:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,242:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,245:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,247:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,247:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,248:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,248:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,250:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,251:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,252:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,252:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,253:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,253:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,254:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,255:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,256:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,258:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,307:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,310:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,312:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:22,313:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:22,829:INFO:Calculating mean and std
2023-06-02 14:13:22,830:INFO:Creating metrics dataframe
2023-06-02 14:13:22,905:INFO:Uploading results into container
2023-06-02 14:13:22,906:INFO:Uploading model into container now
2023-06-02 14:13:22,907:INFO:_master_model_container: 49
2023-06-02 14:13:22,907:INFO:_display_container: 5
2023-06-02 14:13:22,907:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:13:22,907:INFO:create_model() successfully completed......................................
2023-06-02 14:13:23,103:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:23,103:INFO:Creating metrics dataframe
2023-06-02 14:13:23,118:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:13:23,118:INFO:Total runtime is 0.149967626730601 minutes
2023-06-02 14:13:23,122:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:23,122:INFO:Initializing create_model()
2023-06-02 14:13:23,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:23,122:INFO:Checking exceptions
2023-06-02 14:13:23,123:INFO:Importing libraries
2023-06-02 14:13:23,123:INFO:Copying training dataset
2023-06-02 14:13:23,127:INFO:Defining folds
2023-06-02 14:13:23,127:INFO:Declaring metric variables
2023-06-02 14:13:23,132:INFO:Importing untrained model
2023-06-02 14:13:23,136:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:13:23,144:INFO:Starting cross validation
2023-06-02 14:13:23,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:23,277:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,283:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,289:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,296:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,305:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,316:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,321:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,331:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,339:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,339:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:23,349:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,349:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,349:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,350:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,350:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,357:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,358:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,358:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,367:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,368:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,368:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,372:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,373:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,373:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,392:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,394:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,394:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,402:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,402:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,403:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,406:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,406:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,406:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,412:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,417:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,418:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,420:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,421:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,423:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,430:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,431:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,431:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,433:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,434:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,437:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,442:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,445:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,446:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,448:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,448:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,449:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,452:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,454:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,455:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,467:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,468:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,470:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,471:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,471:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,472:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,472:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,474:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,474:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,476:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,476:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,476:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,477:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,477:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,478:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,479:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,480:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,480:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,481:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,482:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,483:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

abels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,483:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,483:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,485:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,485:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,485:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,485:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,485:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,486:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,487:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,487:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,489:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,491:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,491:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,492:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,493:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,495:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,503:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:13:23,503:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:13:23,504:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:13:23,509:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:13:23,510:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,513:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:23,515:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:23,517:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:24,037:INFO:Calculating mean and std
2023-06-02 14:13:24,039:INFO:Creating metrics dataframe
2023-06-02 14:13:24,115:INFO:Uploading results into container
2023-06-02 14:13:24,115:INFO:Uploading model into container now
2023-06-02 14:13:24,116:INFO:_master_model_container: 50
2023-06-02 14:13:24,116:INFO:_display_container: 5
2023-06-02 14:13:24,116:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:13:24,116:INFO:create_model() successfully completed......................................
2023-06-02 14:13:24,317:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:24,318:INFO:Creating metrics dataframe
2023-06-02 14:13:24,334:INFO:Initializing Ada Boost Classifier
2023-06-02 14:13:24,334:INFO:Total runtime is 0.17023396492004395 minutes
2023-06-02 14:13:24,338:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:24,338:INFO:Initializing create_model()
2023-06-02 14:13:24,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:24,339:INFO:Checking exceptions
2023-06-02 14:13:24,339:INFO:Importing libraries
2023-06-02 14:13:24,339:INFO:Copying training dataset
2023-06-02 14:13:24,344:INFO:Defining folds
2023-06-02 14:13:24,344:INFO:Declaring metric variables
2023-06-02 14:13:24,348:INFO:Importing untrained model
2023-06-02 14:13:24,352:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:13:24,359:INFO:Starting cross validation
2023-06-02 14:13:24,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:25,112:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,115:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,117:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,119:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,128:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,129:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,132:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,132:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,134:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,135:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,136:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,137:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,139:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,140:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,158:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,160:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,161:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,161:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,161:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,163:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,163:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,164:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,164:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,165:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,165:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,166:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,167:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,168:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,174:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,176:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,178:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,215:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,218:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,220:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:25,222:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:25,788:INFO:Calculating mean and std
2023-06-02 14:13:25,790:INFO:Creating metrics dataframe
2023-06-02 14:13:25,874:INFO:Uploading results into container
2023-06-02 14:13:25,875:INFO:Uploading model into container now
2023-06-02 14:13:25,875:INFO:_master_model_container: 51
2023-06-02 14:13:25,876:INFO:_display_container: 5
2023-06-02 14:13:25,876:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1156)
2023-06-02 14:13:25,876:INFO:create_model() successfully completed......................................
2023-06-02 14:13:26,069:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:26,069:INFO:Creating metrics dataframe
2023-06-02 14:13:26,085:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:13:26,085:INFO:Total runtime is 0.1994171698888143 minutes
2023-06-02 14:13:26,089:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:26,090:INFO:Initializing create_model()
2023-06-02 14:13:26,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:26,090:INFO:Checking exceptions
2023-06-02 14:13:26,090:INFO:Importing libraries
2023-06-02 14:13:26,090:INFO:Copying training dataset
2023-06-02 14:13:26,095:INFO:Defining folds
2023-06-02 14:13:26,095:INFO:Declaring metric variables
2023-06-02 14:13:26,099:INFO:Importing untrained model
2023-06-02 14:13:26,103:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:13:26,112:INFO:Starting cross validation
2023-06-02 14:13:26,114:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:28,477:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,521:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,530:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,551:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,563:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,566:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,580:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,612:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,633:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:28,642:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:13:30,514:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,516:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,517:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,518:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,519:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,519:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,520:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,520:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,543:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,546:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,548:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,550:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,552:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,554:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,556:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,558:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,571:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,574:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,575:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,577:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,578:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,579:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,580:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,582:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,610:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,624:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,629:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,640:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,643:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,644:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,646:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,646:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,648:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:30,648:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:30,649:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,256:INFO:Calculating mean and std
2023-06-02 14:13:31,258:INFO:Creating metrics dataframe
2023-06-02 14:13:31,347:INFO:Uploading results into container
2023-06-02 14:13:31,348:INFO:Uploading model into container now
2023-06-02 14:13:31,349:INFO:_master_model_container: 52
2023-06-02 14:13:31,349:INFO:_display_container: 5
2023-06-02 14:13:31,349:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1156, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:13:31,349:INFO:create_model() successfully completed......................................
2023-06-02 14:13:31,549:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:31,549:INFO:Creating metrics dataframe
2023-06-02 14:13:31,565:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:13:31,566:INFO:Total runtime is 0.2907705187797547 minutes
2023-06-02 14:13:31,569:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:31,570:INFO:Initializing create_model()
2023-06-02 14:13:31,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:31,570:INFO:Checking exceptions
2023-06-02 14:13:31,570:INFO:Importing libraries
2023-06-02 14:13:31,571:INFO:Copying training dataset
2023-06-02 14:13:31,575:INFO:Defining folds
2023-06-02 14:13:31,575:INFO:Declaring metric variables
2023-06-02 14:13:31,579:INFO:Importing untrained model
2023-06-02 14:13:31,584:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:13:31,592:INFO:Starting cross validation
2023-06-02 14:13:31,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:31,874:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,878:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,879:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,880:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,882:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,884:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,885:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,891:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,894:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,896:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,897:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,897:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,899:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,900:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,901:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,902:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,902:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,903:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,903:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,904:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,905:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,907:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,908:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,921:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,923:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,924:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,925:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,927:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,929:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,931:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,933:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,933:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,936:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,937:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,939:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,948:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,951:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:31,953:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:31,954:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:32,605:INFO:Calculating mean and std
2023-06-02 14:13:32,606:INFO:Creating metrics dataframe
2023-06-02 14:13:32,698:INFO:Uploading results into container
2023-06-02 14:13:32,699:INFO:Uploading model into container now
2023-06-02 14:13:32,699:INFO:_master_model_container: 53
2023-06-02 14:13:32,699:INFO:_display_container: 5
2023-06-02 14:13:32,700:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:13:32,700:INFO:create_model() successfully completed......................................
2023-06-02 14:13:32,892:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:32,892:INFO:Creating metrics dataframe
2023-06-02 14:13:32,908:INFO:Initializing Extra Trees Classifier
2023-06-02 14:13:32,908:INFO:Total runtime is 0.31313299735387173 minutes
2023-06-02 14:13:32,912:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:32,913:INFO:Initializing create_model()
2023-06-02 14:13:32,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:32,913:INFO:Checking exceptions
2023-06-02 14:13:32,913:INFO:Importing libraries
2023-06-02 14:13:32,913:INFO:Copying training dataset
2023-06-02 14:13:32,918:INFO:Defining folds
2023-06-02 14:13:32,918:INFO:Declaring metric variables
2023-06-02 14:13:32,922:INFO:Importing untrained model
2023-06-02 14:13:32,926:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:13:32,934:INFO:Starting cross validation
2023-06-02 14:13:32,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:34,007:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,013:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,025:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,027:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,029:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,030:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,030:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,030:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,032:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,032:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,033:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,033:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,034:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,034:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,036:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,037:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,038:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,039:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,040:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,041:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,043:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,045:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,059:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,062:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,064:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,065:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,090:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,094:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,096:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,097:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,101:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,104:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,106:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,107:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,116:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,119:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,120:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:34,122:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:34,805:INFO:Calculating mean and std
2023-06-02 14:13:34,806:INFO:Creating metrics dataframe
2023-06-02 14:13:34,902:INFO:Uploading results into container
2023-06-02 14:13:34,903:INFO:Uploading model into container now
2023-06-02 14:13:34,904:INFO:_master_model_container: 54
2023-06-02 14:13:34,904:INFO:_display_container: 5
2023-06-02 14:13:34,904:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1156, verbose=0, warm_start=False)
2023-06-02 14:13:34,904:INFO:create_model() successfully completed......................................
2023-06-02 14:13:35,095:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:35,095:INFO:Creating metrics dataframe
2023-06-02 14:13:35,113:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:13:35,113:INFO:Total runtime is 0.34988467295964565 minutes
2023-06-02 14:13:35,117:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:35,118:INFO:Initializing create_model()
2023-06-02 14:13:35,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:35,118:INFO:Checking exceptions
2023-06-02 14:13:35,118:INFO:Importing libraries
2023-06-02 14:13:35,118:INFO:Copying training dataset
2023-06-02 14:13:35,123:INFO:Defining folds
2023-06-02 14:13:35,123:INFO:Declaring metric variables
2023-06-02 14:13:35,127:INFO:Importing untrained model
2023-06-02 14:13:35,132:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:13:35,140:INFO:Starting cross validation
2023-06-02 14:13:35,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:35,633:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,637:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,638:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,640:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,653:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,655:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,656:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,710:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,712:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,713:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,714:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,719:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,720:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,731:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,733:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,735:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,775:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,780:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,782:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,784:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:35,793:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:35,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,798:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,800:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:36,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,905:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,906:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,907:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,907:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,908:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:36,909:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:36,909:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:36,910:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,004:INFO:Calculating mean and std
2023-06-02 14:13:37,006:INFO:Creating metrics dataframe
2023-06-02 14:13:37,117:INFO:Uploading results into container
2023-06-02 14:13:37,118:INFO:Uploading model into container now
2023-06-02 14:13:37,118:INFO:_master_model_container: 55
2023-06-02 14:13:37,118:INFO:_display_container: 5
2023-06-02 14:13:37,119:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1156, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:13:37,119:INFO:create_model() successfully completed......................................
2023-06-02 14:13:37,319:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:37,319:INFO:Creating metrics dataframe
2023-06-02 14:13:37,338:INFO:Initializing Dummy Classifier
2023-06-02 14:13:37,338:INFO:Total runtime is 0.38696560859680185 minutes
2023-06-02 14:13:37,342:INFO:SubProcess create_model() called ==================================
2023-06-02 14:13:37,342:INFO:Initializing create_model()
2023-06-02 14:13:37,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D91326B9A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:37,343:INFO:Checking exceptions
2023-06-02 14:13:37,343:INFO:Importing libraries
2023-06-02 14:13:37,343:INFO:Copying training dataset
2023-06-02 14:13:37,348:INFO:Defining folds
2023-06-02 14:13:37,348:INFO:Declaring metric variables
2023-06-02 14:13:37,352:INFO:Importing untrained model
2023-06-02 14:13:37,356:INFO:Dummy Classifier Imported successfully
2023-06-02 14:13:37,364:INFO:Starting cross validation
2023-06-02 14:13:37,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:13:37,635:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,637:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,639:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,641:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,644:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,645:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,647:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,648:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 14:13:37,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,652:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,660:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,663:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,667:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,669:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,671:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,674:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,677:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,679:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,681:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,683:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,684:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,686:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,686:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,687:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,688:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,700:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,704:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,705:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:37,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:13:37,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:13:38,442:INFO:Calculating mean and std
2023-06-02 14:13:38,444:INFO:Creating metrics dataframe
2023-06-02 14:13:38,546:INFO:Uploading results into container
2023-06-02 14:13:38,547:INFO:Uploading model into container now
2023-06-02 14:13:38,548:INFO:_master_model_container: 56
2023-06-02 14:13:38,548:INFO:_display_container: 5
2023-06-02 14:13:38,548:INFO:DummyClassifier(constant=None, random_state=1156, strategy='prior')
2023-06-02 14:13:38,548:INFO:create_model() successfully completed......................................
2023-06-02 14:13:38,741:INFO:SubProcess create_model() end ==================================
2023-06-02 14:13:38,741:INFO:Creating metrics dataframe
2023-06-02 14:13:38,771:INFO:Initializing create_model()
2023-06-02 14:13:38,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D91292D660>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:13:38,771:INFO:Checking exceptions
2023-06-02 14:13:38,773:INFO:Importing libraries
2023-06-02 14:13:38,773:INFO:Copying training dataset
2023-06-02 14:13:38,778:INFO:Defining folds
2023-06-02 14:13:38,779:INFO:Declaring metric variables
2023-06-02 14:13:38,779:INFO:Importing untrained model
2023-06-02 14:13:38,779:INFO:Declaring custom model
2023-06-02 14:13:38,779:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:13:38,781:INFO:Cross validation set to False
2023-06-02 14:13:38,781:INFO:Fitting Model
2023-06-02 14:13:38,859:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:13:38,943:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:13:38,943:INFO:create_model() successfully completed......................................
2023-06-02 14:13:39,176:INFO:_master_model_container: 56
2023-06-02 14:13:39,177:INFO:_display_container: 5
2023-06-02 14:13:39,177:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:13:39,177:INFO:compare_models() successfully completed......................................
2023-06-02 14:18:05,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:18:05,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:18:05,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:18:05,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:18:06,837:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 14:18:07,097:INFO:PyCaret ClassificationExperiment
2023-06-02 14:18:07,097:INFO:Logging name: clf-default-name
2023-06-02 14:18:07,097:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 14:18:07,097:INFO:version 3.0.2
2023-06-02 14:18:07,097:INFO:Initializing setup()
2023-06-02 14:18:07,097:INFO:self.USI: b57b
2023-06-02 14:18:07,097:INFO:self._variable_keys: {'X', 'y_train', 'fold_shuffle_param', 'fix_imbalance', 'is_multiclass', 'seed', 'html_param', 'fold_groups_param', 'target_param', 'X_test', 'exp_name_log', 'y', 'gpu_n_jobs_param', 'exp_id', 'idx', 'n_jobs_param', '_available_plots', '_ml_usecase', 'X_train', 'data', 'fold_generator', 'log_plots_param', 'y_test', 'logging_param', 'gpu_param', 'memory', 'pipeline', 'USI'}
2023-06-02 14:18:07,097:INFO:Checking environment
2023-06-02 14:18:07,097:INFO:python_version: 3.10.9
2023-06-02 14:18:07,097:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-06-02 14:18:07,098:INFO:machine: AMD64
2023-06-02 14:18:07,098:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 14:18:07,098:INFO:Memory: svmem(total=17106501632, available=9468669952, percent=44.6, used=7637831680, free=9468669952)
2023-06-02 14:18:07,098:INFO:Physical Core: 6
2023-06-02 14:18:07,098:INFO:Logical Core: 12
2023-06-02 14:18:07,098:INFO:Checking libraries
2023-06-02 14:18:07,098:INFO:System:
2023-06-02 14:18:07,098:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-06-02 14:18:07,098:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-06-02 14:18:07,098:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 14:18:07,098:INFO:PyCaret required dependencies:
2023-06-02 14:18:07,098:INFO:                 pip: 22.3.1
2023-06-02 14:18:07,098:INFO:          setuptools: 65.6.3
2023-06-02 14:18:07,099:INFO:             pycaret: 3.0.2
2023-06-02 14:18:07,099:INFO:             IPython: 8.10.0
2023-06-02 14:18:07,099:INFO:          ipywidgets: 7.6.5
2023-06-02 14:18:07,099:INFO:                tqdm: 4.64.1
2023-06-02 14:18:07,099:INFO:               numpy: 1.23.5
2023-06-02 14:18:07,099:INFO:              pandas: 1.5.3
2023-06-02 14:18:07,099:INFO:              jinja2: 3.1.2
2023-06-02 14:18:07,099:INFO:               scipy: 1.10.0
2023-06-02 14:18:07,099:INFO:              joblib: 1.1.1
2023-06-02 14:18:07,099:INFO:             sklearn: 1.2.1
2023-06-02 14:18:07,099:INFO:                pyod: 1.0.9
2023-06-02 14:18:07,099:INFO:            imblearn: 0.10.1
2023-06-02 14:18:07,099:INFO:   category_encoders: 2.6.1
2023-06-02 14:18:07,099:INFO:            lightgbm: 3.3.5
2023-06-02 14:18:07,099:INFO:               numba: 0.56.4
2023-06-02 14:18:07,100:INFO:            requests: 2.28.1
2023-06-02 14:18:07,100:INFO:          matplotlib: 3.7.0
2023-06-02 14:18:07,100:INFO:          scikitplot: 0.3.7
2023-06-02 14:18:07,100:INFO:         yellowbrick: 1.5
2023-06-02 14:18:07,100:INFO:              plotly: 5.9.0
2023-06-02 14:18:07,100:INFO:             kaleido: 0.2.1
2023-06-02 14:18:07,100:INFO:         statsmodels: 0.13.5
2023-06-02 14:18:07,100:INFO:              sktime: 0.17.0
2023-06-02 14:18:07,100:INFO:               tbats: 1.1.3
2023-06-02 14:18:07,100:INFO:            pmdarima: 2.0.3
2023-06-02 14:18:07,100:INFO:              psutil: 5.9.0
2023-06-02 14:18:07,100:INFO:PyCaret optional dependencies:
2023-06-02 14:18:07,124:INFO:                shap: Not installed
2023-06-02 14:18:07,124:INFO:           interpret: Not installed
2023-06-02 14:18:07,124:INFO:                umap: Not installed
2023-06-02 14:18:07,124:INFO:    pandas_profiling: Not installed
2023-06-02 14:18:07,124:INFO:  explainerdashboard: Not installed
2023-06-02 14:18:07,124:INFO:             autoviz: Not installed
2023-06-02 14:18:07,124:INFO:           fairlearn: Not installed
2023-06-02 14:18:07,124:INFO:             xgboost: Not installed
2023-06-02 14:18:07,125:INFO:            catboost: Not installed
2023-06-02 14:18:07,125:INFO:              kmodes: Not installed
2023-06-02 14:18:07,125:INFO:             mlxtend: Not installed
2023-06-02 14:18:07,125:INFO:       statsforecast: Not installed
2023-06-02 14:18:07,125:INFO:        tune_sklearn: 0.4.5
2023-06-02 14:18:07,125:INFO:                 ray: 2.4.0
2023-06-02 14:18:07,125:INFO:            hyperopt: Not installed
2023-06-02 14:18:07,125:INFO:              optuna: Not installed
2023-06-02 14:18:07,125:INFO:               skopt: Not installed
2023-06-02 14:18:07,125:INFO:              mlflow: Not installed
2023-06-02 14:18:07,125:INFO:              gradio: Not installed
2023-06-02 14:18:07,125:INFO:             fastapi: Not installed
2023-06-02 14:18:07,125:INFO:             uvicorn: Not installed
2023-06-02 14:18:07,125:INFO:              m2cgen: Not installed
2023-06-02 14:18:07,126:INFO:           evidently: Not installed
2023-06-02 14:18:07,126:INFO:               fugue: Not installed
2023-06-02 14:18:07,126:INFO:           streamlit: Not installed
2023-06-02 14:18:07,126:INFO:             prophet: Not installed
2023-06-02 14:18:07,126:INFO:None
2023-06-02 14:18:07,126:INFO:Set up data.
2023-06-02 14:18:07,131:INFO:Set up train/test split.
2023-06-02 14:18:07,135:INFO:Set up index.
2023-06-02 14:18:07,136:INFO:Set up folding strategy.
2023-06-02 14:18:07,136:INFO:Assigning column types.
2023-06-02 14:18:07,139:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 14:18:07,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 14:18:07,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:18:07,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:07,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:07,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 14:18:07,737:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:18:07,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:07,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:07,781:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 14:18:07,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:18:07,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:07,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:07,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 14:18:08,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,011:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 14:18:08,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,243:INFO:Preparing preprocessing pipeline...
2023-06-02 14:18:08,245:INFO:Set up label encoding.
2023-06-02 14:18:08,245:INFO:Set up simple imputation.
2023-06-02 14:18:08,247:INFO:Set up encoding of categorical features.
2023-06-02 14:18:08,313:INFO:Finished creating preprocessing pipeline.
2023-06-02 14:18:08,323:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 14:18:08,324:INFO:Creating final display dataframe.
2023-06-02 14:18:08,545:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               b57b  
2023-06-02 14:18:08,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 14:18:08,804:INFO:setup() successfully completed in 1.79s...............
2023-06-02 14:19:13,303:INFO:Initializing compare_models()
2023-06-02 14:19:13,304:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 14:19:13,304:INFO:Checking exceptions
2023-06-02 14:19:13,308:INFO:Preparing display monitor
2023-06-02 14:19:13,340:INFO:Initializing Logistic Regression
2023-06-02 14:19:13,340:INFO:Total runtime is 1.6677379608154298e-05 minutes
2023-06-02 14:19:13,344:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:13,344:INFO:Initializing create_model()
2023-06-02 14:19:13,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:13,345:INFO:Checking exceptions
2023-06-02 14:19:13,345:INFO:Importing libraries
2023-06-02 14:19:13,345:INFO:Copying training dataset
2023-06-02 14:19:13,350:INFO:Defining folds
2023-06-02 14:19:13,350:INFO:Declaring metric variables
2023-06-02 14:19:13,354:INFO:Importing untrained model
2023-06-02 14:19:13,359:INFO:Logistic Regression Imported successfully
2023-06-02 14:19:13,368:INFO:Starting cross validation
2023-06-02 14:19:13,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:21,358:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,362:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,362:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,364:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,365:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,365:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,365:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,366:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,367:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,367:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,368:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,370:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,370:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,371:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,371:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,373:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,375:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,376:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,378:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,382:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,383:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,386:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,386:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,387:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,388:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,388:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,389:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,389:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,395:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,414:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,418:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,420:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,421:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,434:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,437:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:21,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:21,440:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,236:INFO:Calculating mean and std
2023-06-02 14:19:22,238:INFO:Creating metrics dataframe
2023-06-02 14:19:22,338:INFO:Uploading results into container
2023-06-02 14:19:22,339:INFO:Uploading model into container now
2023-06-02 14:19:22,340:INFO:_master_model_container: 1
2023-06-02 14:19:22,340:INFO:_display_container: 2
2023-06-02 14:19:22,341:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 14:19:22,341:INFO:create_model() successfully completed......................................
2023-06-02 14:19:22,538:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:22,538:INFO:Creating metrics dataframe
2023-06-02 14:19:22,550:INFO:Initializing K Neighbors Classifier
2023-06-02 14:19:22,551:INFO:Total runtime is 0.15353535016377765 minutes
2023-06-02 14:19:22,555:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:22,555:INFO:Initializing create_model()
2023-06-02 14:19:22,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:22,556:INFO:Checking exceptions
2023-06-02 14:19:22,556:INFO:Importing libraries
2023-06-02 14:19:22,556:INFO:Copying training dataset
2023-06-02 14:19:22,560:INFO:Defining folds
2023-06-02 14:19:22,561:INFO:Declaring metric variables
2023-06-02 14:19:22,565:INFO:Importing untrained model
2023-06-02 14:19:22,570:INFO:K Neighbors Classifier Imported successfully
2023-06-02 14:19:22,577:INFO:Starting cross validation
2023-06-02 14:19:22,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:22,927:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,930:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,932:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,933:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,934:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,937:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,937:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,939:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,941:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,942:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,947:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,947:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,949:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,951:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,953:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,956:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,957:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,960:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,963:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,964:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,969:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,974:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,974:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,976:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,978:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,978:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,980:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,982:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,986:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,989:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:22,991:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:22,992:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:25,990:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:25,992:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:25,993:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:25,994:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:25,994:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:25,996:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:25,998:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:25,998:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,090:INFO:Calculating mean and std
2023-06-02 14:19:26,092:INFO:Creating metrics dataframe
2023-06-02 14:19:26,199:INFO:Uploading results into container
2023-06-02 14:19:26,200:INFO:Uploading model into container now
2023-06-02 14:19:26,200:INFO:_master_model_container: 2
2023-06-02 14:19:26,200:INFO:_display_container: 2
2023-06-02 14:19:26,201:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 14:19:26,201:INFO:create_model() successfully completed......................................
2023-06-02 14:19:26,388:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:26,388:INFO:Creating metrics dataframe
2023-06-02 14:19:26,403:INFO:Initializing Naive Bayes
2023-06-02 14:19:26,404:INFO:Total runtime is 0.2177488009134928 minutes
2023-06-02 14:19:26,408:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:26,408:INFO:Initializing create_model()
2023-06-02 14:19:26,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:26,409:INFO:Checking exceptions
2023-06-02 14:19:26,409:INFO:Importing libraries
2023-06-02 14:19:26,409:INFO:Copying training dataset
2023-06-02 14:19:26,413:INFO:Defining folds
2023-06-02 14:19:26,413:INFO:Declaring metric variables
2023-06-02 14:19:26,418:INFO:Importing untrained model
2023-06-02 14:19:26,422:INFO:Naive Bayes Imported successfully
2023-06-02 14:19:26,431:INFO:Starting cross validation
2023-06-02 14:19:26,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:26,733:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,736:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,738:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,739:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,741:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,744:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,746:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,748:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,749:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,752:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,754:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,755:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,756:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,758:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,760:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,762:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,765:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,766:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,767:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,768:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,769:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,771:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,772:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,772:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,773:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,776:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,780:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,783:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,793:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,804:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:26,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:26,807:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:27,541:INFO:Calculating mean and std
2023-06-02 14:19:27,542:INFO:Creating metrics dataframe
2023-06-02 14:19:27,643:INFO:Uploading results into container
2023-06-02 14:19:27,644:INFO:Uploading model into container now
2023-06-02 14:19:27,645:INFO:_master_model_container: 3
2023-06-02 14:19:27,645:INFO:_display_container: 2
2023-06-02 14:19:27,645:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 14:19:27,645:INFO:create_model() successfully completed......................................
2023-06-02 14:19:27,830:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:27,831:INFO:Creating metrics dataframe
2023-06-02 14:19:27,845:INFO:Initializing Decision Tree Classifier
2023-06-02 14:19:27,845:INFO:Total runtime is 0.24176699717839556 minutes
2023-06-02 14:19:27,850:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:27,850:INFO:Initializing create_model()
2023-06-02 14:19:27,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:27,850:INFO:Checking exceptions
2023-06-02 14:19:27,850:INFO:Importing libraries
2023-06-02 14:19:27,851:INFO:Copying training dataset
2023-06-02 14:19:27,855:INFO:Defining folds
2023-06-02 14:19:27,855:INFO:Declaring metric variables
2023-06-02 14:19:27,859:INFO:Importing untrained model
2023-06-02 14:19:27,863:INFO:Decision Tree Classifier Imported successfully
2023-06-02 14:19:27,872:INFO:Starting cross validation
2023-06-02 14:19:27,873:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:28,168:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,168:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,171:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,173:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,173:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,174:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,175:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,179:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,182:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,184:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,184:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,185:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,188:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,189:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,190:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,192:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,193:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,198:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,199:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,206:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,206:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,209:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,210:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,211:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,211:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,213:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,213:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,225:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,226:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,228:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,230:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,230:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,232:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,232:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,233:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,242:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,245:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,247:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:28,249:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:28,982:INFO:Calculating mean and std
2023-06-02 14:19:28,983:INFO:Creating metrics dataframe
2023-06-02 14:19:29,090:INFO:Uploading results into container
2023-06-02 14:19:29,091:INFO:Uploading model into container now
2023-06-02 14:19:29,093:INFO:_master_model_container: 4
2023-06-02 14:19:29,093:INFO:_display_container: 2
2023-06-02 14:19:29,093:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 14:19:29,093:INFO:create_model() successfully completed......................................
2023-06-02 14:19:29,274:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:29,275:INFO:Creating metrics dataframe
2023-06-02 14:19:29,288:INFO:Initializing SVM - Linear Kernel
2023-06-02 14:19:29,289:INFO:Total runtime is 0.26583404938379923 minutes
2023-06-02 14:19:29,292:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:29,293:INFO:Initializing create_model()
2023-06-02 14:19:29,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:29,293:INFO:Checking exceptions
2023-06-02 14:19:29,293:INFO:Importing libraries
2023-06-02 14:19:29,293:INFO:Copying training dataset
2023-06-02 14:19:29,298:INFO:Defining folds
2023-06-02 14:19:29,298:INFO:Declaring metric variables
2023-06-02 14:19:29,302:INFO:Importing untrained model
2023-06-02 14:19:29,307:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 14:19:29,314:INFO:Starting cross validation
2023-06-02 14:19:29,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:29,554:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,555:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,558:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,559:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,563:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,599:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,599:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,600:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,601:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,604:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,605:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,606:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,607:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,608:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,609:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,609:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,610:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,612:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,612:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,614:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,623:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,625:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,626:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,629:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,630:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,632:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,633:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,634:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,636:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,637:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,639:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,681:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,682:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,685:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,687:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,688:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,718:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 14:19:29,719:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,723:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:29,724:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:29,726:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,393:INFO:Calculating mean and std
2023-06-02 14:19:30,394:INFO:Creating metrics dataframe
2023-06-02 14:19:30,496:INFO:Uploading results into container
2023-06-02 14:19:30,497:INFO:Uploading model into container now
2023-06-02 14:19:30,497:INFO:_master_model_container: 5
2023-06-02 14:19:30,498:INFO:_display_container: 2
2023-06-02 14:19:30,498:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 14:19:30,499:INFO:create_model() successfully completed......................................
2023-06-02 14:19:30,689:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:30,690:INFO:Creating metrics dataframe
2023-06-02 14:19:30,705:INFO:Initializing Ridge Classifier
2023-06-02 14:19:30,705:INFO:Total runtime is 0.2894346475601196 minutes
2023-06-02 14:19:30,709:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:30,709:INFO:Initializing create_model()
2023-06-02 14:19:30,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:30,710:INFO:Checking exceptions
2023-06-02 14:19:30,710:INFO:Importing libraries
2023-06-02 14:19:30,710:INFO:Copying training dataset
2023-06-02 14:19:30,714:INFO:Defining folds
2023-06-02 14:19:30,715:INFO:Declaring metric variables
2023-06-02 14:19:30,719:INFO:Importing untrained model
2023-06-02 14:19:30,723:INFO:Ridge Classifier Imported successfully
2023-06-02 14:19:30,730:INFO:Starting cross validation
2023-06-02 14:19:30,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:30,954:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,955:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,958:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,959:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:30,959:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,960:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,961:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,964:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,965:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,965:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:30,967:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,967:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,969:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,970:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,970:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,971:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,972:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:30,972:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,974:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:30,975:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,976:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,978:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:30,979:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,986:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,987:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,990:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,992:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:30,992:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:30,993:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,993:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:30,998:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,000:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:31,001:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,002:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:31,003:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,006:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:31,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,016:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:31,017:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,020:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,022:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:31,024:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,024:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 14:19:31,025:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,028:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,030:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:31,032:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:31,765:INFO:Calculating mean and std
2023-06-02 14:19:31,766:INFO:Creating metrics dataframe
2023-06-02 14:19:31,869:INFO:Uploading results into container
2023-06-02 14:19:31,870:INFO:Uploading model into container now
2023-06-02 14:19:31,870:INFO:_master_model_container: 6
2023-06-02 14:19:31,870:INFO:_display_container: 2
2023-06-02 14:19:31,871:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 14:19:31,871:INFO:create_model() successfully completed......................................
2023-06-02 14:19:32,051:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:32,052:INFO:Creating metrics dataframe
2023-06-02 14:19:32,065:INFO:Initializing Random Forest Classifier
2023-06-02 14:19:32,066:INFO:Total runtime is 0.31212620735168456 minutes
2023-06-02 14:19:32,071:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:32,071:INFO:Initializing create_model()
2023-06-02 14:19:32,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:32,072:INFO:Checking exceptions
2023-06-02 14:19:32,072:INFO:Importing libraries
2023-06-02 14:19:32,072:INFO:Copying training dataset
2023-06-02 14:19:32,076:INFO:Defining folds
2023-06-02 14:19:32,077:INFO:Declaring metric variables
2023-06-02 14:19:32,081:INFO:Importing untrained model
2023-06-02 14:19:32,086:INFO:Random Forest Classifier Imported successfully
2023-06-02 14:19:32,093:INFO:Starting cross validation
2023-06-02 14:19:32,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:33,268:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,269:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,271:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,272:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,272:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,273:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,274:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,275:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,296:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,297:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,299:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,299:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,300:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,300:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,301:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,302:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,302:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,303:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,303:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,304:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,305:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,305:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,306:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,307:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,307:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,308:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,309:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,311:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,316:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,319:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,321:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,322:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,344:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,347:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,348:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,350:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,376:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,379:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:33,381:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:33,382:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,154:INFO:Calculating mean and std
2023-06-02 14:19:34,155:INFO:Creating metrics dataframe
2023-06-02 14:19:34,263:INFO:Uploading results into container
2023-06-02 14:19:34,264:INFO:Uploading model into container now
2023-06-02 14:19:34,265:INFO:_master_model_container: 7
2023-06-02 14:19:34,265:INFO:_display_container: 2
2023-06-02 14:19:34,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 14:19:34,266:INFO:create_model() successfully completed......................................
2023-06-02 14:19:34,449:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:34,449:INFO:Creating metrics dataframe
2023-06-02 14:19:34,465:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 14:19:34,465:INFO:Total runtime is 0.3521014889081319 minutes
2023-06-02 14:19:34,469:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:34,470:INFO:Initializing create_model()
2023-06-02 14:19:34,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:34,470:INFO:Checking exceptions
2023-06-02 14:19:34,470:INFO:Importing libraries
2023-06-02 14:19:34,471:INFO:Copying training dataset
2023-06-02 14:19:34,475:INFO:Defining folds
2023-06-02 14:19:34,476:INFO:Declaring metric variables
2023-06-02 14:19:34,481:INFO:Importing untrained model
2023-06-02 14:19:34,485:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:19:34,493:INFO:Starting cross validation
2023-06-02 14:19:34,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:34,627:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,636:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,651:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,658:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,663:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,676:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,690:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,691:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:34,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,707:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,719:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,726:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,727:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,731:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,731:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,732:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,734:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,735:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,749:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,750:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,750:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,750:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,751:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,751:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,758:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,758:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,758:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,760:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,760:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,761:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,762:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,763:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,763:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,765:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,766:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,769:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,770:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,772:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,781:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,786:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,788:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,789:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,789:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,790:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,791:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,793:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,794:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,794:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,795:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,798:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,799:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,799:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,799:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,801:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,802:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,803:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,804:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,805:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,806:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,807:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,808:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,809:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,810:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,811:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,811:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,812:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,812:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,813:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,815:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,815:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,817:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,818:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,822:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,823:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,823:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,823:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,823:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,828:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,829:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,829:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,831:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,833:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,833:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,834:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,836:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,836:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,837:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 14:19:34,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 14:19:34,838:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 14:19:34,838:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,840:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,843:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 14:19:34,843:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,844:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,846:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,848:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,848:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:34,849:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:34,851:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:35,632:INFO:Calculating mean and std
2023-06-02 14:19:35,634:INFO:Creating metrics dataframe
2023-06-02 14:19:35,740:INFO:Uploading results into container
2023-06-02 14:19:35,741:INFO:Uploading model into container now
2023-06-02 14:19:35,741:INFO:_master_model_container: 8
2023-06-02 14:19:35,741:INFO:_display_container: 2
2023-06-02 14:19:35,742:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:19:35,742:INFO:create_model() successfully completed......................................
2023-06-02 14:19:35,925:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:35,925:INFO:Creating metrics dataframe
2023-06-02 14:19:35,939:INFO:Initializing Ada Boost Classifier
2023-06-02 14:19:35,940:INFO:Total runtime is 0.376697305838267 minutes
2023-06-02 14:19:35,944:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:35,944:INFO:Initializing create_model()
2023-06-02 14:19:35,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:35,945:INFO:Checking exceptions
2023-06-02 14:19:35,945:INFO:Importing libraries
2023-06-02 14:19:35,945:INFO:Copying training dataset
2023-06-02 14:19:35,950:INFO:Defining folds
2023-06-02 14:19:35,950:INFO:Declaring metric variables
2023-06-02 14:19:35,954:INFO:Importing untrained model
2023-06-02 14:19:35,958:INFO:Ada Boost Classifier Imported successfully
2023-06-02 14:19:35,967:INFO:Starting cross validation
2023-06-02 14:19:35,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:36,649:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,652:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,654:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,655:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,657:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,660:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,662:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,669:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,670:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,671:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,673:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,673:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,675:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,676:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,677:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,680:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,682:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,684:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,688:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,691:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,691:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,691:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,693:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,694:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,694:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,694:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,696:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,698:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,698:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,703:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,706:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,708:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,709:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,711:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,715:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:36,717:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:36,718:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:37,582:INFO:Calculating mean and std
2023-06-02 14:19:37,584:INFO:Creating metrics dataframe
2023-06-02 14:19:37,697:INFO:Uploading results into container
2023-06-02 14:19:37,698:INFO:Uploading model into container now
2023-06-02 14:19:37,699:INFO:_master_model_container: 9
2023-06-02 14:19:37,699:INFO:_display_container: 2
2023-06-02 14:19:37,699:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 14:19:37,699:INFO:create_model() successfully completed......................................
2023-06-02 14:19:37,888:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:37,889:INFO:Creating metrics dataframe
2023-06-02 14:19:37,907:INFO:Initializing Gradient Boosting Classifier
2023-06-02 14:19:37,907:INFO:Total runtime is 0.40946638186772666 minutes
2023-06-02 14:19:37,912:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:37,912:INFO:Initializing create_model()
2023-06-02 14:19:37,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:37,913:INFO:Checking exceptions
2023-06-02 14:19:37,913:INFO:Importing libraries
2023-06-02 14:19:37,913:INFO:Copying training dataset
2023-06-02 14:19:37,918:INFO:Defining folds
2023-06-02 14:19:37,918:INFO:Declaring metric variables
2023-06-02 14:19:37,923:INFO:Importing untrained model
2023-06-02 14:19:37,928:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 14:19:37,937:INFO:Starting cross validation
2023-06-02 14:19:37,939:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:40,335:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,344:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,347:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,350:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,380:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,391:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,394:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,405:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,419:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:40,422:WARNING:C:\Users\rastu\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 14:19:42,313:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,315:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,316:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,316:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,317:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,317:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,317:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,319:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,321:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,322:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 14:19:42,324:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,326:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,327:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,329:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,339:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,342:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,344:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,345:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,361:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,365:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,367:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,368:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,385:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,386:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,388:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,389:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,390:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,392:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,396:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,399:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,401:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,402:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,419:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,423:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:42,424:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:42,426:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,312:INFO:Calculating mean and std
2023-06-02 14:19:43,314:INFO:Creating metrics dataframe
2023-06-02 14:19:43,437:INFO:Uploading results into container
2023-06-02 14:19:43,438:INFO:Uploading model into container now
2023-06-02 14:19:43,438:INFO:_master_model_container: 10
2023-06-02 14:19:43,438:INFO:_display_container: 2
2023-06-02 14:19:43,439:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 14:19:43,439:INFO:create_model() successfully completed......................................
2023-06-02 14:19:43,627:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:43,627:INFO:Creating metrics dataframe
2023-06-02 14:19:43,645:INFO:Initializing Linear Discriminant Analysis
2023-06-02 14:19:43,645:INFO:Total runtime is 0.5051025152206421 minutes
2023-06-02 14:19:43,650:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:43,650:INFO:Initializing create_model()
2023-06-02 14:19:43,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:43,650:INFO:Checking exceptions
2023-06-02 14:19:43,650:INFO:Importing libraries
2023-06-02 14:19:43,650:INFO:Copying training dataset
2023-06-02 14:19:43,655:INFO:Defining folds
2023-06-02 14:19:43,655:INFO:Declaring metric variables
2023-06-02 14:19:43,659:INFO:Importing untrained model
2023-06-02 14:19:43,664:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 14:19:43,671:INFO:Starting cross validation
2023-06-02 14:19:43,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:43,965:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,967:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,969:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:43,970:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,977:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,981:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,983:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:43,983:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,985:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,987:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,989:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:43,990:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:43,999:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,003:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,004:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,005:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,006:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,009:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,012:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,014:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,014:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,016:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,017:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,018:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,019:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,020:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,030:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,033:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,033:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,035:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,036:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,036:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,036:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,038:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,039:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,040:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,041:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:44,042:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:44,955:INFO:Calculating mean and std
2023-06-02 14:19:44,956:INFO:Creating metrics dataframe
2023-06-02 14:19:45,080:INFO:Uploading results into container
2023-06-02 14:19:45,081:INFO:Uploading model into container now
2023-06-02 14:19:45,081:INFO:_master_model_container: 11
2023-06-02 14:19:45,082:INFO:_display_container: 2
2023-06-02 14:19:45,082:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 14:19:45,082:INFO:create_model() successfully completed......................................
2023-06-02 14:19:45,266:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:45,267:INFO:Creating metrics dataframe
2023-06-02 14:19:45,283:INFO:Initializing Extra Trees Classifier
2023-06-02 14:19:45,283:INFO:Total runtime is 0.5324136018753052 minutes
2023-06-02 14:19:45,287:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:45,288:INFO:Initializing create_model()
2023-06-02 14:19:45,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:45,288:INFO:Checking exceptions
2023-06-02 14:19:45,288:INFO:Importing libraries
2023-06-02 14:19:45,289:INFO:Copying training dataset
2023-06-02 14:19:45,293:INFO:Defining folds
2023-06-02 14:19:45,293:INFO:Declaring metric variables
2023-06-02 14:19:45,298:INFO:Importing untrained model
2023-06-02 14:19:45,302:INFO:Extra Trees Classifier Imported successfully
2023-06-02 14:19:45,311:INFO:Starting cross validation
2023-06-02 14:19:45,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:46,386:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,388:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,389:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,391:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,393:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,395:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,396:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,400:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,400:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,402:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,403:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,403:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,404:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,407:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,407:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,409:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,409:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,411:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,420:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,423:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,425:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,426:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,427:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,433:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,434:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,435:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,437:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,437:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,439:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,441:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,443:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,447:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,447:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,449:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,450:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,450:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:46,452:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:46,453:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:47,429:INFO:Calculating mean and std
2023-06-02 14:19:47,430:INFO:Creating metrics dataframe
2023-06-02 14:19:47,565:INFO:Uploading results into container
2023-06-02 14:19:47,566:INFO:Uploading model into container now
2023-06-02 14:19:47,567:INFO:_master_model_container: 12
2023-06-02 14:19:47,567:INFO:_display_container: 2
2023-06-02 14:19:47,567:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 14:19:47,568:INFO:create_model() successfully completed......................................
2023-06-02 14:19:47,759:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:47,759:INFO:Creating metrics dataframe
2023-06-02 14:19:47,777:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 14:19:47,777:INFO:Total runtime is 0.5739680051803588 minutes
2023-06-02 14:19:47,781:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:47,782:INFO:Initializing create_model()
2023-06-02 14:19:47,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:47,782:INFO:Checking exceptions
2023-06-02 14:19:47,783:INFO:Importing libraries
2023-06-02 14:19:47,783:INFO:Copying training dataset
2023-06-02 14:19:47,787:INFO:Defining folds
2023-06-02 14:19:47,787:INFO:Declaring metric variables
2023-06-02 14:19:47,791:INFO:Importing untrained model
2023-06-02 14:19:47,796:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 14:19:47,806:INFO:Starting cross validation
2023-06-02 14:19:47,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:49,881:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,884:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,886:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,887:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,901:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,904:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,905:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,907:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,968:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,970:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,971:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,973:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,975:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,975:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,976:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,979:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,981:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,982:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,984:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,985:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,986:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,986:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,987:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,988:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,991:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:49,993:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:49,994:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,001:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,004:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,005:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,006:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:50,007:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,008:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,010:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:50,011:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,042:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,046:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,048:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:50,050:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:50,949:INFO:Calculating mean and std
2023-06-02 14:19:50,951:INFO:Creating metrics dataframe
2023-06-02 14:19:51,087:INFO:Uploading results into container
2023-06-02 14:19:51,088:INFO:Uploading model into container now
2023-06-02 14:19:51,089:INFO:_master_model_container: 13
2023-06-02 14:19:51,089:INFO:_display_container: 2
2023-06-02 14:19:51,090:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 14:19:51,090:INFO:create_model() successfully completed......................................
2023-06-02 14:19:51,277:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:51,277:INFO:Creating metrics dataframe
2023-06-02 14:19:51,296:INFO:Initializing Dummy Classifier
2023-06-02 14:19:51,296:INFO:Total runtime is 0.6326186418533325 minutes
2023-06-02 14:19:51,300:INFO:SubProcess create_model() called ==================================
2023-06-02 14:19:51,301:INFO:Initializing create_model()
2023-06-02 14:19:51,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215F1D93D00>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:51,302:INFO:Checking exceptions
2023-06-02 14:19:51,302:INFO:Importing libraries
2023-06-02 14:19:51,302:INFO:Copying training dataset
2023-06-02 14:19:51,307:INFO:Defining folds
2023-06-02 14:19:51,307:INFO:Declaring metric variables
2023-06-02 14:19:51,312:INFO:Importing untrained model
2023-06-02 14:19:51,316:INFO:Dummy Classifier Imported successfully
2023-06-02 14:19:51,324:INFO:Starting cross validation
2023-06-02 14:19:51,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 14:19:51,597:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,599:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,600:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,601:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,603:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,604:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,605:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,611:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,615:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,617:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,619:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,622:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,626:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,628:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,630:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,631:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,632:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,633:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,644:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,647:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,649:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,650:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,654:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,657:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,658:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,659:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,661:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,664:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,665:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,666:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,669:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,670:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,672:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,672:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,675:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:51,677:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 14:19:51,679:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 14:19:52,713:INFO:Calculating mean and std
2023-06-02 14:19:52,715:INFO:Creating metrics dataframe
2023-06-02 14:19:52,846:INFO:Uploading results into container
2023-06-02 14:19:52,847:INFO:Uploading model into container now
2023-06-02 14:19:52,847:INFO:_master_model_container: 14
2023-06-02 14:19:52,847:INFO:_display_container: 2
2023-06-02 14:19:52,848:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 14:19:52,848:INFO:create_model() successfully completed......................................
2023-06-02 14:19:53,034:INFO:SubProcess create_model() end ==================================
2023-06-02 14:19:53,034:INFO:Creating metrics dataframe
2023-06-02 14:19:53,064:INFO:Initializing create_model()
2023-06-02 14:19:53,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215F1D93CD0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 14:19:53,064:INFO:Checking exceptions
2023-06-02 14:19:53,067:INFO:Importing libraries
2023-06-02 14:19:53,067:INFO:Copying training dataset
2023-06-02 14:19:53,071:INFO:Defining folds
2023-06-02 14:19:53,071:INFO:Declaring metric variables
2023-06-02 14:19:53,071:INFO:Importing untrained model
2023-06-02 14:19:53,071:INFO:Declaring custom model
2023-06-02 14:19:53,072:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 14:19:53,073:INFO:Cross validation set to False
2023-06-02 14:19:53,073:INFO:Fitting Model
2023-06-02 14:19:53,152:WARNING:c:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 14:19:53,262:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:19:53,262:INFO:create_model() successfully completed......................................
2023-06-02 14:19:53,492:INFO:_master_model_container: 14
2023-06-02 14:19:53,492:INFO:_display_container: 2
2023-06-02 14:19:53,492:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 14:19:53,493:INFO:compare_models() successfully completed......................................
2023-06-02 14:35:14,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:35:14,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:35:14,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:35:14,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:37:04,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:37:04,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:37:04,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:37:04,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:39:06,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:39:06,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:39:06,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:39:06,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:44:56,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:44:56,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:44:56,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 14:44:56,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:05:14,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:05:14,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:05:14,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:05:14,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:38:04,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:38:04,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:38:04,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:38:04,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:50:11,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:50:11,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:50:11,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 15:50:11,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:03:11,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:03:11,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:03:11,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:03:11,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:44:13,856:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:44:13,856:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:44:13,856:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 16:44:13,856:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 17:50:30,401:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 17:50:30,401:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 17:50:30,401:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 17:50:30,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 17:50:31,696:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:01:12,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:01:12,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:01:12,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:01:12,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:01:14,084:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:01:14,662:INFO:PyCaret ClassificationExperiment
2023-06-02 18:01:14,663:INFO:Logging name: clf-default-name
2023-06-02 18:01:14,663:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:01:14,663:INFO:version 3.0.2
2023-06-02 18:01:14,663:INFO:Initializing setup()
2023-06-02 18:01:14,663:INFO:self.USI: e478
2023-06-02 18:01:14,663:INFO:self._variable_keys: {'gpu_n_jobs_param', 'idx', 'exp_name_log', 'memory', 'fold_shuffle_param', 'n_jobs_param', 'log_plots_param', 'y', '_available_plots', 'data', 'USI', 'X', 'seed', 'pipeline', 'y_test', 'html_param', 'X_train', 'y_train', 'target_param', 'is_multiclass', 'fold_groups_param', 'logging_param', 'fix_imbalance', '_ml_usecase', 'fold_generator', 'gpu_param', 'X_test', 'exp_id'}
2023-06-02 18:01:14,663:INFO:Checking environment
2023-06-02 18:01:14,663:INFO:python_version: 3.8.16
2023-06-02 18:01:14,663:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:01:14,663:INFO:machine: AMD64
2023-06-02 18:01:14,663:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:01:14,663:INFO:Memory: svmem(total=17106501632, available=7957954560, percent=53.5, used=9148547072, free=7957954560)
2023-06-02 18:01:14,663:INFO:Physical Core: 6
2023-06-02 18:01:14,663:INFO:Logical Core: 12
2023-06-02 18:01:14,663:INFO:Checking libraries
2023-06-02 18:01:14,664:INFO:System:
2023-06-02 18:01:14,664:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:01:14,664:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:01:14,664:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:01:14,664:INFO:PyCaret required dependencies:
2023-06-02 18:01:14,664:INFO:                 pip: 23.0.1
2023-06-02 18:01:14,664:INFO:          setuptools: 67.8.0
2023-06-02 18:01:14,664:INFO:             pycaret: 3.0.2
2023-06-02 18:01:14,664:INFO:             IPython: 8.8.0
2023-06-02 18:01:14,664:INFO:          ipywidgets: 8.0.6
2023-06-02 18:01:14,664:INFO:                tqdm: 4.65.0
2023-06-02 18:01:14,664:INFO:               numpy: 1.23.5
2023-06-02 18:01:14,664:INFO:              pandas: 1.5.3
2023-06-02 18:01:14,665:INFO:              jinja2: 3.1.2
2023-06-02 18:01:14,665:INFO:               scipy: 1.10.1
2023-06-02 18:01:14,665:INFO:              joblib: 1.2.0
2023-06-02 18:01:14,665:INFO:             sklearn: 1.2.2
2023-06-02 18:01:14,665:INFO:                pyod: 1.0.9
2023-06-02 18:01:14,665:INFO:            imblearn: 0.10.1
2023-06-02 18:01:14,665:INFO:   category_encoders: 2.6.1
2023-06-02 18:01:14,665:INFO:            lightgbm: 3.3.5
2023-06-02 18:01:14,665:INFO:               numba: 0.57.0
2023-06-02 18:01:14,665:INFO:            requests: 2.31.0
2023-06-02 18:01:14,665:INFO:          matplotlib: 3.7.1
2023-06-02 18:01:14,665:INFO:          scikitplot: 0.3.7
2023-06-02 18:01:14,665:INFO:         yellowbrick: 1.5
2023-06-02 18:01:14,665:INFO:              plotly: 5.14.1
2023-06-02 18:01:14,666:INFO:             kaleido: 0.2.1
2023-06-02 18:01:14,666:INFO:         statsmodels: 0.14.0
2023-06-02 18:01:14,666:INFO:              sktime: 0.17.0
2023-06-02 18:01:14,666:INFO:               tbats: 1.1.3
2023-06-02 18:01:14,666:INFO:            pmdarima: 2.0.3
2023-06-02 18:01:14,666:INFO:              psutil: 5.9.5
2023-06-02 18:01:14,666:INFO:PyCaret optional dependencies:
2023-06-02 18:01:14,687:INFO:                shap: Not installed
2023-06-02 18:01:14,687:INFO:           interpret: Not installed
2023-06-02 18:01:14,687:INFO:                umap: Not installed
2023-06-02 18:01:14,688:INFO:    pandas_profiling: Not installed
2023-06-02 18:01:14,688:INFO:  explainerdashboard: Not installed
2023-06-02 18:01:14,688:INFO:             autoviz: Not installed
2023-06-02 18:01:14,688:INFO:           fairlearn: Not installed
2023-06-02 18:01:14,688:INFO:             xgboost: Not installed
2023-06-02 18:01:14,688:INFO:            catboost: Not installed
2023-06-02 18:01:14,688:INFO:              kmodes: Not installed
2023-06-02 18:01:14,688:INFO:             mlxtend: Not installed
2023-06-02 18:01:14,688:INFO:       statsforecast: Not installed
2023-06-02 18:01:14,688:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:01:14,688:INFO:                 ray: 2.4.0
2023-06-02 18:01:14,688:INFO:            hyperopt: Not installed
2023-06-02 18:01:14,688:INFO:              optuna: Not installed
2023-06-02 18:01:14,688:INFO:               skopt: Not installed
2023-06-02 18:01:14,688:INFO:              mlflow: Not installed
2023-06-02 18:01:14,689:INFO:              gradio: Not installed
2023-06-02 18:01:14,689:INFO:             fastapi: Not installed
2023-06-02 18:01:14,689:INFO:             uvicorn: Not installed
2023-06-02 18:01:14,689:INFO:              m2cgen: Not installed
2023-06-02 18:01:14,689:INFO:           evidently: Not installed
2023-06-02 18:01:14,689:INFO:               fugue: Not installed
2023-06-02 18:01:14,689:INFO:           streamlit: Not installed
2023-06-02 18:01:14,689:INFO:             prophet: Not installed
2023-06-02 18:01:14,689:INFO:None
2023-06-02 18:01:14,689:INFO:Set up data.
2023-06-02 18:01:14,696:INFO:Set up train/test split.
2023-06-02 18:01:14,703:INFO:Set up index.
2023-06-02 18:01:14,703:INFO:Set up folding strategy.
2023-06-02 18:01:14,703:INFO:Assigning column types.
2023-06-02 18:01:14,709:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:01:14,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:01:14,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:01:14,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:14,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:14,999:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:01:15,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:01:15,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,045:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:01:15,115:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:01:15,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:01:15,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,274:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:01:15,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,499:INFO:Preparing preprocessing pipeline...
2023-06-02 18:01:15,500:INFO:Set up label encoding.
2023-06-02 18:01:15,500:INFO:Set up simple imputation.
2023-06-02 18:01:15,503:INFO:Set up encoding of categorical features.
2023-06-02 18:01:15,598:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:01:15,610:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:01:15,610:INFO:Creating final display dataframe.
2023-06-02 18:01:15,849:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               e478  
2023-06-02 18:01:15,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:15,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:16,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:16,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:01:16,096:INFO:setup() successfully completed in 1.73s...............
2023-06-02 18:01:16,134:INFO:Initializing compare_models()
2023-06-02 18:01:16,134:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:01:16,135:INFO:Checking exceptions
2023-06-02 18:01:16,140:INFO:Preparing display monitor
2023-06-02 18:01:16,180:INFO:Initializing Logistic Regression
2023-06-02 18:01:16,180:INFO:Total runtime is 0.0 minutes
2023-06-02 18:01:16,185:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:16,186:INFO:Initializing create_model()
2023-06-02 18:01:16,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:16,186:INFO:Checking exceptions
2023-06-02 18:01:16,186:INFO:Importing libraries
2023-06-02 18:01:16,186:INFO:Copying training dataset
2023-06-02 18:01:16,191:INFO:Defining folds
2023-06-02 18:01:16,193:INFO:Declaring metric variables
2023-06-02 18:01:16,197:INFO:Importing untrained model
2023-06-02 18:01:16,204:INFO:Logistic Regression Imported successfully
2023-06-02 18:01:16,215:INFO:Starting cross validation
2023-06-02 18:01:16,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:24,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,906:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:24,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:24,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,013:INFO:Calculating mean and std
2023-06-02 18:01:26,014:INFO:Creating metrics dataframe
2023-06-02 18:01:26,148:INFO:Uploading results into container
2023-06-02 18:01:26,149:INFO:Uploading model into container now
2023-06-02 18:01:26,149:INFO:_master_model_container: 1
2023-06-02 18:01:26,149:INFO:_display_container: 2
2023-06-02 18:01:26,150:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:01:26,150:INFO:create_model() successfully completed......................................
2023-06-02 18:01:26,313:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:26,314:INFO:Creating metrics dataframe
2023-06-02 18:01:26,327:INFO:Initializing K Neighbors Classifier
2023-06-02 18:01:26,327:INFO:Total runtime is 0.16911945740381876 minutes
2023-06-02 18:01:26,331:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:26,331:INFO:Initializing create_model()
2023-06-02 18:01:26,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:26,332:INFO:Checking exceptions
2023-06-02 18:01:26,332:INFO:Importing libraries
2023-06-02 18:01:26,332:INFO:Copying training dataset
2023-06-02 18:01:26,336:INFO:Defining folds
2023-06-02 18:01:26,337:INFO:Declaring metric variables
2023-06-02 18:01:26,341:INFO:Importing untrained model
2023-06-02 18:01:26,348:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:01:26,356:INFO:Starting cross validation
2023-06-02 18:01:26,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:26,761:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,765:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,765:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,765:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,766:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,767:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,768:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,771:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,771:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,772:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,772:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,772:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,772:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,773:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,775:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,777:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,779:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,786:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,795:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,799:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:26,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:26,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,395:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,395:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,396:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:31,397:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,398:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:31,523:INFO:Calculating mean and std
2023-06-02 18:01:31,524:INFO:Creating metrics dataframe
2023-06-02 18:01:31,662:INFO:Uploading results into container
2023-06-02 18:01:31,663:INFO:Uploading model into container now
2023-06-02 18:01:31,663:INFO:_master_model_container: 2
2023-06-02 18:01:31,663:INFO:_display_container: 2
2023-06-02 18:01:31,664:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:01:31,664:INFO:create_model() successfully completed......................................
2023-06-02 18:01:31,825:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:31,825:INFO:Creating metrics dataframe
2023-06-02 18:01:31,839:INFO:Initializing Naive Bayes
2023-06-02 18:01:31,839:INFO:Total runtime is 0.26098535458246863 minutes
2023-06-02 18:01:31,844:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:31,844:INFO:Initializing create_model()
2023-06-02 18:01:31,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:31,845:INFO:Checking exceptions
2023-06-02 18:01:31,845:INFO:Importing libraries
2023-06-02 18:01:31,845:INFO:Copying training dataset
2023-06-02 18:01:31,849:INFO:Defining folds
2023-06-02 18:01:31,850:INFO:Declaring metric variables
2023-06-02 18:01:31,854:INFO:Importing untrained model
2023-06-02 18:01:31,858:INFO:Naive Bayes Imported successfully
2023-06-02 18:01:31,868:INFO:Starting cross validation
2023-06-02 18:01:31,870:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:32,184:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,188:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,190:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,192:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,193:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,198:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,201:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,202:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,204:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,206:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,220:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,226:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,229:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,229:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,236:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,239:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,250:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:32,256:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:32,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,231:INFO:Calculating mean and std
2023-06-02 18:01:33,232:INFO:Creating metrics dataframe
2023-06-02 18:01:33,365:INFO:Uploading results into container
2023-06-02 18:01:33,366:INFO:Uploading model into container now
2023-06-02 18:01:33,366:INFO:_master_model_container: 3
2023-06-02 18:01:33,366:INFO:_display_container: 2
2023-06-02 18:01:33,367:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:01:33,367:INFO:create_model() successfully completed......................................
2023-06-02 18:01:33,534:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:33,534:INFO:Creating metrics dataframe
2023-06-02 18:01:33,550:INFO:Initializing Decision Tree Classifier
2023-06-02 18:01:33,550:INFO:Total runtime is 0.28949964841206866 minutes
2023-06-02 18:01:33,554:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:33,555:INFO:Initializing create_model()
2023-06-02 18:01:33,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:33,555:INFO:Checking exceptions
2023-06-02 18:01:33,555:INFO:Importing libraries
2023-06-02 18:01:33,556:INFO:Copying training dataset
2023-06-02 18:01:33,560:INFO:Defining folds
2023-06-02 18:01:33,560:INFO:Declaring metric variables
2023-06-02 18:01:33,565:INFO:Importing untrained model
2023-06-02 18:01:33,570:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:01:33,578:INFO:Starting cross validation
2023-06-02 18:01:33,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:33,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,898:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,899:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,906:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,930:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,932:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,934:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,934:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,936:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,938:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,942:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,944:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,949:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,953:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,955:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,957:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,960:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,964:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,966:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,968:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,985:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:33,988:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:33,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:34,950:INFO:Calculating mean and std
2023-06-02 18:01:34,951:INFO:Creating metrics dataframe
2023-06-02 18:01:35,087:INFO:Uploading results into container
2023-06-02 18:01:35,088:INFO:Uploading model into container now
2023-06-02 18:01:35,089:INFO:_master_model_container: 4
2023-06-02 18:01:35,089:INFO:_display_container: 2
2023-06-02 18:01:35,089:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:01:35,090:INFO:create_model() successfully completed......................................
2023-06-02 18:01:35,254:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:35,255:INFO:Creating metrics dataframe
2023-06-02 18:01:35,270:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:01:35,271:INFO:Total runtime is 0.31818606456120807 minutes
2023-06-02 18:01:35,275:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:35,276:INFO:Initializing create_model()
2023-06-02 18:01:35,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:35,276:INFO:Checking exceptions
2023-06-02 18:01:35,276:INFO:Importing libraries
2023-06-02 18:01:35,277:INFO:Copying training dataset
2023-06-02 18:01:35,281:INFO:Defining folds
2023-06-02 18:01:35,282:INFO:Declaring metric variables
2023-06-02 18:01:35,286:INFO:Importing untrained model
2023-06-02 18:01:35,291:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:01:35,300:INFO:Starting cross validation
2023-06-02 18:01:35,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:35,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:01:35,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:35,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:35,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:36,672:INFO:Calculating mean and std
2023-06-02 18:01:36,674:INFO:Creating metrics dataframe
2023-06-02 18:01:36,805:INFO:Uploading results into container
2023-06-02 18:01:36,805:INFO:Uploading model into container now
2023-06-02 18:01:36,806:INFO:_master_model_container: 5
2023-06-02 18:01:36,806:INFO:_display_container: 2
2023-06-02 18:01:36,807:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:01:36,807:INFO:create_model() successfully completed......................................
2023-06-02 18:01:36,966:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:36,966:INFO:Creating metrics dataframe
2023-06-02 18:01:36,981:INFO:Initializing Ridge Classifier
2023-06-02 18:01:36,981:INFO:Total runtime is 0.3466819922129313 minutes
2023-06-02 18:01:36,985:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:36,985:INFO:Initializing create_model()
2023-06-02 18:01:36,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:36,986:INFO:Checking exceptions
2023-06-02 18:01:36,986:INFO:Importing libraries
2023-06-02 18:01:36,986:INFO:Copying training dataset
2023-06-02 18:01:36,990:INFO:Defining folds
2023-06-02 18:01:36,991:INFO:Declaring metric variables
2023-06-02 18:01:36,996:INFO:Importing untrained model
2023-06-02 18:01:37,001:INFO:Ridge Classifier Imported successfully
2023-06-02 18:01:37,009:INFO:Starting cross validation
2023-06-02 18:01:37,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:37,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,244:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,244:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,247:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,248:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,248:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,248:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,251:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,251:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,254:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,255:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,261:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,262:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,262:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,263:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,264:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,267:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,268:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,269:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,270:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,271:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,272:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,279:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,282:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,286:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,286:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,290:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,292:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,293:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,296:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,298:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,298:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:01:37,300:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,305:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:37,307:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:37,310:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:38,296:INFO:Calculating mean and std
2023-06-02 18:01:38,297:INFO:Creating metrics dataframe
2023-06-02 18:01:38,429:INFO:Uploading results into container
2023-06-02 18:01:38,430:INFO:Uploading model into container now
2023-06-02 18:01:38,430:INFO:_master_model_container: 6
2023-06-02 18:01:38,430:INFO:_display_container: 2
2023-06-02 18:01:38,431:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:01:38,431:INFO:create_model() successfully completed......................................
2023-06-02 18:01:38,588:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:38,588:INFO:Creating metrics dataframe
2023-06-02 18:01:38,604:INFO:Initializing Random Forest Classifier
2023-06-02 18:01:38,604:INFO:Total runtime is 0.3737331986427307 minutes
2023-06-02 18:01:38,608:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:38,609:INFO:Initializing create_model()
2023-06-02 18:01:38,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:38,609:INFO:Checking exceptions
2023-06-02 18:01:38,609:INFO:Importing libraries
2023-06-02 18:01:38,609:INFO:Copying training dataset
2023-06-02 18:01:38,615:INFO:Defining folds
2023-06-02 18:01:38,615:INFO:Declaring metric variables
2023-06-02 18:01:38,619:INFO:Importing untrained model
2023-06-02 18:01:38,624:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:01:38,632:INFO:Starting cross validation
2023-06-02 18:01:38,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:39,824:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,830:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,833:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,834:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,835:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,839:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,841:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,843:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,844:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,846:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,848:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,851:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,853:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,853:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,856:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,858:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,870:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,870:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,873:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,874:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,874:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,876:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,877:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,877:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,881:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,886:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:39,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:39,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:40,953:INFO:Calculating mean and std
2023-06-02 18:01:40,954:INFO:Creating metrics dataframe
2023-06-02 18:01:41,094:INFO:Uploading results into container
2023-06-02 18:01:41,095:INFO:Uploading model into container now
2023-06-02 18:01:41,096:INFO:_master_model_container: 7
2023-06-02 18:01:41,096:INFO:_display_container: 2
2023-06-02 18:01:41,097:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:01:41,097:INFO:create_model() successfully completed......................................
2023-06-02 18:01:41,253:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:41,253:INFO:Creating metrics dataframe
2023-06-02 18:01:41,270:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:01:41,270:INFO:Total runtime is 0.41816996335983275 minutes
2023-06-02 18:01:41,274:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:41,274:INFO:Initializing create_model()
2023-06-02 18:01:41,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:41,274:INFO:Checking exceptions
2023-06-02 18:01:41,274:INFO:Importing libraries
2023-06-02 18:01:41,275:INFO:Copying training dataset
2023-06-02 18:01:41,281:INFO:Defining folds
2023-06-02 18:01:41,281:INFO:Declaring metric variables
2023-06-02 18:01:41,285:INFO:Importing untrained model
2023-06-02 18:01:41,289:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:01:41,298:INFO:Starting cross validation
2023-06-02 18:01:41,300:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:41,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,484:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,506:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:01:41,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,551:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,551:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,553:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,558:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,558:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,558:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,559:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,559:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,559:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,559:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,559:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,560:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,566:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,566:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,588:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,588:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,588:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,631:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,636:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,636:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:01:41,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:01:41,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:01:41,671:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:01:41,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:01:41,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:01:41,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:01:41,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:01:41,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:01:41,673:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,673:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,673:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,673:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,678:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,678:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,678:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,678:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,680:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,680:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,680:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,680:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:41,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:41,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:42,772:INFO:Calculating mean and std
2023-06-02 18:01:42,772:INFO:Creating metrics dataframe
2023-06-02 18:01:42,915:INFO:Uploading results into container
2023-06-02 18:01:42,916:INFO:Uploading model into container now
2023-06-02 18:01:42,917:INFO:_master_model_container: 8
2023-06-02 18:01:42,917:INFO:_display_container: 2
2023-06-02 18:01:42,918:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:01:42,918:INFO:create_model() successfully completed......................................
2023-06-02 18:01:43,090:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:43,090:INFO:Creating metrics dataframe
2023-06-02 18:01:43,107:INFO:Initializing Ada Boost Classifier
2023-06-02 18:01:43,107:INFO:Total runtime is 0.4487900177637736 minutes
2023-06-02 18:01:43,113:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:43,113:INFO:Initializing create_model()
2023-06-02 18:01:43,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:43,113:INFO:Checking exceptions
2023-06-02 18:01:43,114:INFO:Importing libraries
2023-06-02 18:01:43,114:INFO:Copying training dataset
2023-06-02 18:01:43,118:INFO:Defining folds
2023-06-02 18:01:43,118:INFO:Declaring metric variables
2023-06-02 18:01:43,122:INFO:Importing untrained model
2023-06-02 18:01:43,127:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:01:43,136:INFO:Starting cross validation
2023-06-02 18:01:43,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:43,872:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,875:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,886:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,896:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,896:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,898:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,898:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,898:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,899:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,901:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,913:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,915:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,930:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,936:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,937:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,941:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,947:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,949:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,949:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,951:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,953:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:43,956:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:43,957:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:45,056:INFO:Calculating mean and std
2023-06-02 18:01:45,057:INFO:Creating metrics dataframe
2023-06-02 18:01:45,201:INFO:Uploading results into container
2023-06-02 18:01:45,202:INFO:Uploading model into container now
2023-06-02 18:01:45,203:INFO:_master_model_container: 9
2023-06-02 18:01:45,203:INFO:_display_container: 2
2023-06-02 18:01:45,203:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:01:45,203:INFO:create_model() successfully completed......................................
2023-06-02 18:01:45,359:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:45,359:INFO:Creating metrics dataframe
2023-06-02 18:01:45,377:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:01:45,378:INFO:Total runtime is 0.4866342306137085 minutes
2023-06-02 18:01:45,382:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:45,383:INFO:Initializing create_model()
2023-06-02 18:01:45,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:45,383:INFO:Checking exceptions
2023-06-02 18:01:45,383:INFO:Importing libraries
2023-06-02 18:01:45,383:INFO:Copying training dataset
2023-06-02 18:01:45,388:INFO:Defining folds
2023-06-02 18:01:45,388:INFO:Declaring metric variables
2023-06-02 18:01:45,392:INFO:Importing untrained model
2023-06-02 18:01:45,399:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:01:45,407:INFO:Starting cross validation
2023-06-02 18:01:45,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:47,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,738:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,741:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,781:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,785:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,791:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,812:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:47,831:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:01:49,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,741:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,743:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,745:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,750:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,752:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,848:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,854:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,856:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,858:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,882:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,886:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,890:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,896:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,915:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,923:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,930:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,932:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,937:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,941:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:49,943:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:49,945:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,084:INFO:Calculating mean and std
2023-06-02 18:01:51,086:INFO:Creating metrics dataframe
2023-06-02 18:01:51,240:INFO:Uploading results into container
2023-06-02 18:01:51,241:INFO:Uploading model into container now
2023-06-02 18:01:51,241:INFO:_master_model_container: 10
2023-06-02 18:01:51,243:INFO:_display_container: 2
2023-06-02 18:01:51,243:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:01:51,244:INFO:create_model() successfully completed......................................
2023-06-02 18:01:51,405:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:51,405:INFO:Creating metrics dataframe
2023-06-02 18:01:51,423:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:01:51,423:INFO:Total runtime is 0.5873862266540527 minutes
2023-06-02 18:01:51,428:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:51,429:INFO:Initializing create_model()
2023-06-02 18:01:51,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:51,429:INFO:Checking exceptions
2023-06-02 18:01:51,429:INFO:Importing libraries
2023-06-02 18:01:51,429:INFO:Copying training dataset
2023-06-02 18:01:51,434:INFO:Defining folds
2023-06-02 18:01:51,434:INFO:Declaring metric variables
2023-06-02 18:01:51,439:INFO:Importing untrained model
2023-06-02 18:01:51,443:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:01:51,453:INFO:Starting cross validation
2023-06-02 18:01:51,455:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:51,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,774:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,775:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,776:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,776:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,778:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,778:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,780:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,780:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,791:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,793:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,793:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,794:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,796:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,798:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,801:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,801:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,815:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,822:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,822:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,824:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,826:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,826:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,829:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,831:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,835:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,839:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:51,841:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:51,843:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:53,051:INFO:Calculating mean and std
2023-06-02 18:01:53,052:INFO:Creating metrics dataframe
2023-06-02 18:01:53,205:INFO:Uploading results into container
2023-06-02 18:01:53,206:INFO:Uploading model into container now
2023-06-02 18:01:53,206:INFO:_master_model_container: 11
2023-06-02 18:01:53,206:INFO:_display_container: 2
2023-06-02 18:01:53,207:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:01:53,207:INFO:create_model() successfully completed......................................
2023-06-02 18:01:53,363:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:53,363:INFO:Creating metrics dataframe
2023-06-02 18:01:53,381:INFO:Initializing Extra Trees Classifier
2023-06-02 18:01:53,381:INFO:Total runtime is 0.6200204173723857 minutes
2023-06-02 18:01:53,385:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:53,385:INFO:Initializing create_model()
2023-06-02 18:01:53,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:53,385:INFO:Checking exceptions
2023-06-02 18:01:53,386:INFO:Importing libraries
2023-06-02 18:01:53,386:INFO:Copying training dataset
2023-06-02 18:01:53,390:INFO:Defining folds
2023-06-02 18:01:53,390:INFO:Declaring metric variables
2023-06-02 18:01:53,396:INFO:Importing untrained model
2023-06-02 18:01:53,402:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:01:53,411:INFO:Starting cross validation
2023-06-02 18:01:53,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:54,535:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,539:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,542:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,556:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,557:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,558:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,561:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,561:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,562:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,568:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,574:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,575:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,588:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,589:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,592:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,593:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,594:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,596:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,597:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,597:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,598:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,598:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,599:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,601:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,601:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,602:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,602:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,603:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,604:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:54,605:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:54,606:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:55,838:INFO:Calculating mean and std
2023-06-02 18:01:55,839:INFO:Creating metrics dataframe
2023-06-02 18:01:56,001:INFO:Uploading results into container
2023-06-02 18:01:56,002:INFO:Uploading model into container now
2023-06-02 18:01:56,002:INFO:_master_model_container: 12
2023-06-02 18:01:56,002:INFO:_display_container: 2
2023-06-02 18:01:56,003:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:01:56,003:INFO:create_model() successfully completed......................................
2023-06-02 18:01:56,165:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:56,165:INFO:Creating metrics dataframe
2023-06-02 18:01:56,186:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:01:56,186:INFO:Total runtime is 0.6667663812637329 minutes
2023-06-02 18:01:56,191:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:56,191:INFO:Initializing create_model()
2023-06-02 18:01:56,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:56,191:INFO:Checking exceptions
2023-06-02 18:01:56,191:INFO:Importing libraries
2023-06-02 18:01:56,192:INFO:Copying training dataset
2023-06-02 18:01:56,197:INFO:Defining folds
2023-06-02 18:01:56,197:INFO:Declaring metric variables
2023-06-02 18:01:56,202:INFO:Importing untrained model
2023-06-02 18:01:56,206:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:01:56,215:INFO:Starting cross validation
2023-06-02 18:01:56,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:56,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,731:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,731:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,733:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,733:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,738:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,739:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 18:01:56,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,741:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,743:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,748:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,749:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,749:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,750:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,751:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,752:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,754:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,757:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,763:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,765:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,767:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,778:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,783:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,786:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:56,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:56,791:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,025:INFO:Calculating mean and std
2023-06-02 18:01:58,026:INFO:Creating metrics dataframe
2023-06-02 18:01:58,186:INFO:Uploading results into container
2023-06-02 18:01:58,187:INFO:Uploading model into container now
2023-06-02 18:01:58,188:INFO:_master_model_container: 13
2023-06-02 18:01:58,188:INFO:_display_container: 2
2023-06-02 18:01:58,189:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:01:58,189:INFO:create_model() successfully completed......................................
2023-06-02 18:01:58,348:INFO:SubProcess create_model() end ==================================
2023-06-02 18:01:58,348:INFO:Creating metrics dataframe
2023-06-02 18:01:58,366:INFO:Initializing Dummy Classifier
2023-06-02 18:01:58,366:INFO:Total runtime is 0.7031028429667154 minutes
2023-06-02 18:01:58,371:INFO:SubProcess create_model() called ==================================
2023-06-02 18:01:58,371:INFO:Initializing create_model()
2023-06-02 18:01:58,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6418DA070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:01:58,371:INFO:Checking exceptions
2023-06-02 18:01:58,371:INFO:Importing libraries
2023-06-02 18:01:58,371:INFO:Copying training dataset
2023-06-02 18:01:58,376:INFO:Defining folds
2023-06-02 18:01:58,376:INFO:Declaring metric variables
2023-06-02 18:01:58,381:INFO:Importing untrained model
2023-06-02 18:01:58,386:INFO:Dummy Classifier Imported successfully
2023-06-02 18:01:58,393:INFO:Starting cross validation
2023-06-02 18:01:58,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:01:58,686:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,690:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,691:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,692:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,694:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,697:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,697:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,699:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,701:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,701:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,703:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,704:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,705:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,713:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,722:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,731:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,734:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,739:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,741:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,743:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,745:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,748:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,749:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,751:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,759:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:58,761:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:01:58,763:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:01:59,997:INFO:Calculating mean and std
2023-06-02 18:01:59,999:INFO:Creating metrics dataframe
2023-06-02 18:02:00,159:INFO:Uploading results into container
2023-06-02 18:02:00,161:INFO:Uploading model into container now
2023-06-02 18:02:00,161:INFO:_master_model_container: 14
2023-06-02 18:02:00,163:INFO:_display_container: 2
2023-06-02 18:02:00,163:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:02:00,163:INFO:create_model() successfully completed......................................
2023-06-02 18:02:00,323:INFO:SubProcess create_model() end ==================================
2023-06-02 18:02:00,323:INFO:Creating metrics dataframe
2023-06-02 18:02:00,355:INFO:Initializing create_model()
2023-06-02 18:02:00,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E64171B280>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:02:00,355:INFO:Checking exceptions
2023-06-02 18:02:00,357:INFO:Importing libraries
2023-06-02 18:02:00,358:INFO:Copying training dataset
2023-06-02 18:02:00,361:INFO:Defining folds
2023-06-02 18:02:00,362:INFO:Declaring metric variables
2023-06-02 18:02:00,362:INFO:Importing untrained model
2023-06-02 18:02:00,362:INFO:Declaring custom model
2023-06-02 18:02:00,363:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:02:00,364:INFO:Cross validation set to False
2023-06-02 18:02:00,364:INFO:Fitting Model
2023-06-02 18:02:00,444:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:02:00,584:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:02:00,584:INFO:create_model() successfully completed......................................
2023-06-02 18:02:00,780:INFO:_master_model_container: 14
2023-06-02 18:02:00,780:INFO:_display_container: 2
2023-06-02 18:02:00,781:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:02:00,781:INFO:compare_models() successfully completed......................................
2023-06-02 18:02:01,018:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_4956\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:02:10,471:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\ray\tune\experiment\experiment.py:170: UserWarning: The `local_dir` argument of `Experiment is deprecated. Use `storage_path` or set the `TUNE_RESULT_DIR` environment variable instead.
  warnings.warn(

2023-06-02 18:07:06,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:07:06,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:07:06,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:07:06,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:07:07,046:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:07:07,466:INFO:PyCaret ClassificationExperiment
2023-06-02 18:07:07,466:INFO:Logging name: clf-default-name
2023-06-02 18:07:07,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:07:07,466:INFO:version 3.0.2
2023-06-02 18:07:07,466:INFO:Initializing setup()
2023-06-02 18:07:07,466:INFO:self.USI: f000
2023-06-02 18:07:07,466:INFO:self._variable_keys: {'y_test', 'seed', 'gpu_n_jobs_param', 'USI', 'fold_groups_param', 'n_jobs_param', '_available_plots', 'exp_name_log', 'idx', 'memory', 'fold_shuffle_param', 'data', 'log_plots_param', 'y', 'html_param', 'pipeline', 'fix_imbalance', 'logging_param', 'gpu_param', 'X', 'fold_generator', 'X_train', 'is_multiclass', '_ml_usecase', 'X_test', 'y_train', 'exp_id', 'target_param'}
2023-06-02 18:07:07,467:INFO:Checking environment
2023-06-02 18:07:07,467:INFO:python_version: 3.8.16
2023-06-02 18:07:07,467:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:07:07,467:INFO:machine: AMD64
2023-06-02 18:07:07,467:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:07:07,467:INFO:Memory: svmem(total=17106501632, available=8807235584, percent=48.5, used=8299266048, free=8807235584)
2023-06-02 18:07:07,467:INFO:Physical Core: 6
2023-06-02 18:07:07,467:INFO:Logical Core: 12
2023-06-02 18:07:07,467:INFO:Checking libraries
2023-06-02 18:07:07,467:INFO:System:
2023-06-02 18:07:07,467:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:07:07,467:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:07:07,467:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:07:07,467:INFO:PyCaret required dependencies:
2023-06-02 18:07:07,468:INFO:                 pip: 23.0.1
2023-06-02 18:07:07,468:INFO:          setuptools: 67.8.0
2023-06-02 18:07:07,468:INFO:             pycaret: 3.0.2
2023-06-02 18:07:07,468:INFO:             IPython: 8.8.0
2023-06-02 18:07:07,468:INFO:          ipywidgets: 8.0.6
2023-06-02 18:07:07,468:INFO:                tqdm: 4.65.0
2023-06-02 18:07:07,468:INFO:               numpy: 1.23.5
2023-06-02 18:07:07,468:INFO:              pandas: 1.5.3
2023-06-02 18:07:07,468:INFO:              jinja2: 3.1.2
2023-06-02 18:07:07,468:INFO:               scipy: 1.10.1
2023-06-02 18:07:07,468:INFO:              joblib: 1.2.0
2023-06-02 18:07:07,468:INFO:             sklearn: 1.2.2
2023-06-02 18:07:07,468:INFO:                pyod: 1.0.9
2023-06-02 18:07:07,468:INFO:            imblearn: 0.10.1
2023-06-02 18:07:07,468:INFO:   category_encoders: 2.6.1
2023-06-02 18:07:07,469:INFO:            lightgbm: 3.3.5
2023-06-02 18:07:07,469:INFO:               numba: 0.57.0
2023-06-02 18:07:07,469:INFO:            requests: 2.31.0
2023-06-02 18:07:07,469:INFO:          matplotlib: 3.7.1
2023-06-02 18:07:07,469:INFO:          scikitplot: 0.3.7
2023-06-02 18:07:07,469:INFO:         yellowbrick: 1.5
2023-06-02 18:07:07,469:INFO:              plotly: 5.14.1
2023-06-02 18:07:07,469:INFO:             kaleido: 0.2.1
2023-06-02 18:07:07,469:INFO:         statsmodels: 0.14.0
2023-06-02 18:07:07,469:INFO:              sktime: 0.17.0
2023-06-02 18:07:07,469:INFO:               tbats: 1.1.3
2023-06-02 18:07:07,469:INFO:            pmdarima: 2.0.3
2023-06-02 18:07:07,469:INFO:              psutil: 5.9.5
2023-06-02 18:07:07,469:INFO:PyCaret optional dependencies:
2023-06-02 18:07:07,489:INFO:                shap: Not installed
2023-06-02 18:07:07,489:INFO:           interpret: Not installed
2023-06-02 18:07:07,489:INFO:                umap: Not installed
2023-06-02 18:07:07,489:INFO:    pandas_profiling: Not installed
2023-06-02 18:07:07,489:INFO:  explainerdashboard: Not installed
2023-06-02 18:07:07,489:INFO:             autoviz: Not installed
2023-06-02 18:07:07,489:INFO:           fairlearn: Not installed
2023-06-02 18:07:07,490:INFO:             xgboost: Not installed
2023-06-02 18:07:07,490:INFO:            catboost: Not installed
2023-06-02 18:07:07,490:INFO:              kmodes: Not installed
2023-06-02 18:07:07,490:INFO:             mlxtend: Not installed
2023-06-02 18:07:07,490:INFO:       statsforecast: Not installed
2023-06-02 18:07:07,490:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:07:07,490:INFO:                 ray: 2.4.0
2023-06-02 18:07:07,490:INFO:            hyperopt: Not installed
2023-06-02 18:07:07,490:INFO:              optuna: Not installed
2023-06-02 18:07:07,490:INFO:               skopt: Not installed
2023-06-02 18:07:07,490:INFO:              mlflow: Not installed
2023-06-02 18:07:07,490:INFO:              gradio: Not installed
2023-06-02 18:07:07,490:INFO:             fastapi: Not installed
2023-06-02 18:07:07,490:INFO:             uvicorn: Not installed
2023-06-02 18:07:07,490:INFO:              m2cgen: Not installed
2023-06-02 18:07:07,490:INFO:           evidently: Not installed
2023-06-02 18:07:07,490:INFO:               fugue: Not installed
2023-06-02 18:07:07,491:INFO:           streamlit: Not installed
2023-06-02 18:07:07,491:INFO:             prophet: Not installed
2023-06-02 18:07:07,491:INFO:None
2023-06-02 18:07:07,491:INFO:Set up data.
2023-06-02 18:07:07,496:INFO:Set up train/test split.
2023-06-02 18:07:07,500:INFO:Set up index.
2023-06-02 18:07:07,500:INFO:Set up folding strategy.
2023-06-02 18:07:07,500:INFO:Assigning column types.
2023-06-02 18:07:07,503:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:07:07,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:07:07,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:07:07,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:07,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:07,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:07:07,751:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:07:07,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:07,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:07,793:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:07:07,862:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:07:07,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:07,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:07,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:07:08,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,014:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:07:08,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,232:INFO:Preparing preprocessing pipeline...
2023-06-02 18:07:08,233:INFO:Set up label encoding.
2023-06-02 18:07:08,233:INFO:Set up simple imputation.
2023-06-02 18:07:08,235:INFO:Set up encoding of categorical features.
2023-06-02 18:07:08,299:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:07:08,312:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:07:08,312:INFO:Creating final display dataframe.
2023-06-02 18:07:08,535:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               f000  
2023-06-02 18:07:08,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:07:08,778:INFO:setup() successfully completed in 1.44s...............
2023-06-02 18:07:08,815:INFO:Initializing compare_models()
2023-06-02 18:07:08,816:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:07:08,816:INFO:Checking exceptions
2023-06-02 18:07:08,820:INFO:Preparing display monitor
2023-06-02 18:07:08,848:INFO:Initializing Logistic Regression
2023-06-02 18:07:08,848:INFO:Total runtime is 0.0 minutes
2023-06-02 18:07:08,852:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:08,853:INFO:Initializing create_model()
2023-06-02 18:07:08,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:08,853:INFO:Checking exceptions
2023-06-02 18:07:08,853:INFO:Importing libraries
2023-06-02 18:07:08,853:INFO:Copying training dataset
2023-06-02 18:07:08,858:INFO:Defining folds
2023-06-02 18:07:08,858:INFO:Declaring metric variables
2023-06-02 18:07:08,862:INFO:Importing untrained model
2023-06-02 18:07:08,867:INFO:Logistic Regression Imported successfully
2023-06-02 18:07:08,875:INFO:Starting cross validation
2023-06-02 18:07:08,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:13,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:13,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:13,993:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:13,995:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:13,996:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:13,996:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:13,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:13,999:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,005:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,005:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,052:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,056:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,058:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,060:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,070:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,074:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,077:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,078:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,107:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,114:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,114:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,116:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,142:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,147:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,149:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,151:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,153:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,157:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:14,159:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:14,161:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:15,284:INFO:Calculating mean and std
2023-06-02 18:07:15,286:INFO:Creating metrics dataframe
2023-06-02 18:07:15,453:INFO:Uploading results into container
2023-06-02 18:07:15,454:INFO:Uploading model into container now
2023-06-02 18:07:15,455:INFO:_master_model_container: 1
2023-06-02 18:07:15,455:INFO:_display_container: 2
2023-06-02 18:07:15,455:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:07:15,456:INFO:create_model() successfully completed......................................
2023-06-02 18:07:15,615:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:15,615:INFO:Creating metrics dataframe
2023-06-02 18:07:15,628:INFO:Initializing K Neighbors Classifier
2023-06-02 18:07:15,628:INFO:Total runtime is 0.11300214529037475 minutes
2023-06-02 18:07:15,632:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:15,633:INFO:Initializing create_model()
2023-06-02 18:07:15,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:15,633:INFO:Checking exceptions
2023-06-02 18:07:15,633:INFO:Importing libraries
2023-06-02 18:07:15,633:INFO:Copying training dataset
2023-06-02 18:07:15,638:INFO:Defining folds
2023-06-02 18:07:15,638:INFO:Declaring metric variables
2023-06-02 18:07:15,642:INFO:Importing untrained model
2023-06-02 18:07:15,647:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:07:15,656:INFO:Starting cross validation
2023-06-02 18:07:15,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:16,008:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,008:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,016:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,016:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,023:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,027:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,027:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,029:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,031:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,033:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,036:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,038:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,040:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,045:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,045:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,047:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,050:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,050:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,053:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,054:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,059:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,064:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,066:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,068:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,072:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,077:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:16,079:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:16,081:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,387:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,389:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:18,392:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,431:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,434:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:18,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:18,542:INFO:Calculating mean and std
2023-06-02 18:07:18,544:INFO:Creating metrics dataframe
2023-06-02 18:07:18,716:INFO:Uploading results into container
2023-06-02 18:07:18,717:INFO:Uploading model into container now
2023-06-02 18:07:18,718:INFO:_master_model_container: 2
2023-06-02 18:07:18,718:INFO:_display_container: 2
2023-06-02 18:07:18,718:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:07:18,718:INFO:create_model() successfully completed......................................
2023-06-02 18:07:18,871:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:18,871:INFO:Creating metrics dataframe
2023-06-02 18:07:18,884:INFO:Initializing Naive Bayes
2023-06-02 18:07:18,884:INFO:Total runtime is 0.1672707160313924 minutes
2023-06-02 18:07:18,888:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:18,889:INFO:Initializing create_model()
2023-06-02 18:07:18,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:18,889:INFO:Checking exceptions
2023-06-02 18:07:18,889:INFO:Importing libraries
2023-06-02 18:07:18,890:INFO:Copying training dataset
2023-06-02 18:07:18,894:INFO:Defining folds
2023-06-02 18:07:18,894:INFO:Declaring metric variables
2023-06-02 18:07:18,899:INFO:Importing untrained model
2023-06-02 18:07:18,903:INFO:Naive Bayes Imported successfully
2023-06-02 18:07:18,911:INFO:Starting cross validation
2023-06-02 18:07:18,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:19,192:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,195:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,201:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,202:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,203:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,205:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,206:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,207:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,209:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,216:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,220:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,236:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,239:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,243:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,245:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,248:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,249:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,250:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,254:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,255:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:19,259:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:19,262:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:20,407:INFO:Calculating mean and std
2023-06-02 18:07:20,409:INFO:Creating metrics dataframe
2023-06-02 18:07:20,569:INFO:Uploading results into container
2023-06-02 18:07:20,570:INFO:Uploading model into container now
2023-06-02 18:07:20,571:INFO:_master_model_container: 3
2023-06-02 18:07:20,571:INFO:_display_container: 2
2023-06-02 18:07:20,571:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:07:20,571:INFO:create_model() successfully completed......................................
2023-06-02 18:07:20,724:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:20,724:INFO:Creating metrics dataframe
2023-06-02 18:07:20,739:INFO:Initializing Decision Tree Classifier
2023-06-02 18:07:20,739:INFO:Total runtime is 0.198194952805837 minutes
2023-06-02 18:07:20,744:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:20,744:INFO:Initializing create_model()
2023-06-02 18:07:20,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:20,745:INFO:Checking exceptions
2023-06-02 18:07:20,745:INFO:Importing libraries
2023-06-02 18:07:20,745:INFO:Copying training dataset
2023-06-02 18:07:20,749:INFO:Defining folds
2023-06-02 18:07:20,750:INFO:Declaring metric variables
2023-06-02 18:07:20,753:INFO:Importing untrained model
2023-06-02 18:07:20,757:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:07:20,766:INFO:Starting cross validation
2023-06-02 18:07:20,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:21,050:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,052:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,053:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,055:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,056:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,057:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,058:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,060:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,066:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,068:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,069:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,071:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,072:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,073:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,074:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,076:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,077:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,081:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,083:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,083:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,085:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,087:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,087:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,089:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,090:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,091:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,093:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,095:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,103:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,107:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,109:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,115:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,119:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,121:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,123:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,123:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,127:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:21,129:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:21,131:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,291:INFO:Calculating mean and std
2023-06-02 18:07:22,294:INFO:Creating metrics dataframe
2023-06-02 18:07:22,456:INFO:Uploading results into container
2023-06-02 18:07:22,457:INFO:Uploading model into container now
2023-06-02 18:07:22,458:INFO:_master_model_container: 4
2023-06-02 18:07:22,458:INFO:_display_container: 2
2023-06-02 18:07:22,458:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:07:22,459:INFO:create_model() successfully completed......................................
2023-06-02 18:07:22,609:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:22,610:INFO:Creating metrics dataframe
2023-06-02 18:07:22,623:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:07:22,623:INFO:Total runtime is 0.22959850231806436 minutes
2023-06-02 18:07:22,628:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:22,628:INFO:Initializing create_model()
2023-06-02 18:07:22,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:22,629:INFO:Checking exceptions
2023-06-02 18:07:22,629:INFO:Importing libraries
2023-06-02 18:07:22,629:INFO:Copying training dataset
2023-06-02 18:07:22,634:INFO:Defining folds
2023-06-02 18:07:22,635:INFO:Declaring metric variables
2023-06-02 18:07:22,639:INFO:Importing untrained model
2023-06-02 18:07:22,644:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:07:22,652:INFO:Starting cross validation
2023-06-02 18:07:22,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:22,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,922:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,922:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,924:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,924:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,924:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,924:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,927:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,927:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,930:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,935:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,939:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,940:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,944:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,947:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,949:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,967:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,969:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,974:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:07:22,975:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,976:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,977:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:22,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:22,985:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,266:INFO:Calculating mean and std
2023-06-02 18:07:24,267:INFO:Creating metrics dataframe
2023-06-02 18:07:24,434:INFO:Uploading results into container
2023-06-02 18:07:24,435:INFO:Uploading model into container now
2023-06-02 18:07:24,435:INFO:_master_model_container: 5
2023-06-02 18:07:24,435:INFO:_display_container: 2
2023-06-02 18:07:24,436:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:07:24,436:INFO:create_model() successfully completed......................................
2023-06-02 18:07:24,591:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:24,591:INFO:Creating metrics dataframe
2023-06-02 18:07:24,606:INFO:Initializing Ridge Classifier
2023-06-02 18:07:24,606:INFO:Total runtime is 0.2626356522242228 minutes
2023-06-02 18:07:24,610:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:24,611:INFO:Initializing create_model()
2023-06-02 18:07:24,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:24,611:INFO:Checking exceptions
2023-06-02 18:07:24,611:INFO:Importing libraries
2023-06-02 18:07:24,611:INFO:Copying training dataset
2023-06-02 18:07:24,616:INFO:Defining folds
2023-06-02 18:07:24,616:INFO:Declaring metric variables
2023-06-02 18:07:24,621:INFO:Importing untrained model
2023-06-02 18:07:24,625:INFO:Ridge Classifier Imported successfully
2023-06-02 18:07:24,633:INFO:Starting cross validation
2023-06-02 18:07:24,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:24,873:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,875:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,881:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,886:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,886:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,895:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,899:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,901:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,913:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,915:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,915:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,922:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:07:24,927:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,927:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,931:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:24,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:24,935:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:26,124:INFO:Calculating mean and std
2023-06-02 18:07:26,126:INFO:Creating metrics dataframe
2023-06-02 18:07:26,287:INFO:Uploading results into container
2023-06-02 18:07:26,288:INFO:Uploading model into container now
2023-06-02 18:07:26,288:INFO:_master_model_container: 6
2023-06-02 18:07:26,288:INFO:_display_container: 2
2023-06-02 18:07:26,289:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:07:26,289:INFO:create_model() successfully completed......................................
2023-06-02 18:07:26,440:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:26,441:INFO:Creating metrics dataframe
2023-06-02 18:07:26,456:INFO:Initializing Random Forest Classifier
2023-06-02 18:07:26,456:INFO:Total runtime is 0.29346866210301714 minutes
2023-06-02 18:07:26,460:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:26,461:INFO:Initializing create_model()
2023-06-02 18:07:26,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:26,462:INFO:Checking exceptions
2023-06-02 18:07:26,462:INFO:Importing libraries
2023-06-02 18:07:26,462:INFO:Copying training dataset
2023-06-02 18:07:26,466:INFO:Defining folds
2023-06-02 18:07:26,466:INFO:Declaring metric variables
2023-06-02 18:07:26,472:INFO:Importing untrained model
2023-06-02 18:07:26,476:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:07:26,485:INFO:Starting cross validation
2023-06-02 18:07:26,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:27,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,684:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,685:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,686:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,689:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,709:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,713:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,717:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,727:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,733:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,744:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,747:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,748:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,750:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,751:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,767:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,771:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,777:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,781:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:27,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:27,785:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:28,992:INFO:Calculating mean and std
2023-06-02 18:07:28,993:INFO:Creating metrics dataframe
2023-06-02 18:07:29,166:INFO:Uploading results into container
2023-06-02 18:07:29,167:INFO:Uploading model into container now
2023-06-02 18:07:29,167:INFO:_master_model_container: 7
2023-06-02 18:07:29,167:INFO:_display_container: 2
2023-06-02 18:07:29,168:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:07:29,168:INFO:create_model() successfully completed......................................
2023-06-02 18:07:29,322:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:29,322:INFO:Creating metrics dataframe
2023-06-02 18:07:29,338:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:07:29,338:INFO:Total runtime is 0.34150528510411576 minutes
2023-06-02 18:07:29,343:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:29,344:INFO:Initializing create_model()
2023-06-02 18:07:29,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:29,344:INFO:Checking exceptions
2023-06-02 18:07:29,344:INFO:Importing libraries
2023-06-02 18:07:29,345:INFO:Copying training dataset
2023-06-02 18:07:29,349:INFO:Defining folds
2023-06-02 18:07:29,349:INFO:Declaring metric variables
2023-06-02 18:07:29,355:INFO:Importing untrained model
2023-06-02 18:07:29,360:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:07:29,369:INFO:Starting cross validation
2023-06-02 18:07:29,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:29,518:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,518:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,524:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,524:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,537:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,542:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,558:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,559:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:29,586:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,588:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,589:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,589:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,596:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,596:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,604:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,604:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,604:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,631:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,656:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,656:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,656:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,661:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,662:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,662:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,665:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,666:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,666:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,670:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,670:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,670:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,673:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,673:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

ou may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,676:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,682:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,683:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,685:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,686:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,688:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,689:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,691:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,692:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,693:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,695:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,697:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,699:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,701:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,701:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,702:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,702:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,706:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,707:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:07:29,709:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:07:29,709:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:07:29,712:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,712:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:07:29,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,716:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,718:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,719:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,720:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,721:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:29,722:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:29,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:31,050:INFO:Calculating mean and std
2023-06-02 18:07:31,051:INFO:Creating metrics dataframe
2023-06-02 18:07:31,233:INFO:Uploading results into container
2023-06-02 18:07:31,234:INFO:Uploading model into container now
2023-06-02 18:07:31,234:INFO:_master_model_container: 8
2023-06-02 18:07:31,234:INFO:_display_container: 2
2023-06-02 18:07:31,235:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:07:31,235:INFO:create_model() successfully completed......................................
2023-06-02 18:07:31,400:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:31,400:INFO:Creating metrics dataframe
2023-06-02 18:07:31,420:INFO:Initializing Ada Boost Classifier
2023-06-02 18:07:31,421:INFO:Total runtime is 0.3762221495310465 minutes
2023-06-02 18:07:31,425:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:31,426:INFO:Initializing create_model()
2023-06-02 18:07:31,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:31,426:INFO:Checking exceptions
2023-06-02 18:07:31,426:INFO:Importing libraries
2023-06-02 18:07:31,427:INFO:Copying training dataset
2023-06-02 18:07:31,432:INFO:Defining folds
2023-06-02 18:07:31,432:INFO:Declaring metric variables
2023-06-02 18:07:31,437:INFO:Importing untrained model
2023-06-02 18:07:31,443:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:07:31,453:INFO:Starting cross validation
2023-06-02 18:07:31,455:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:32,205:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,209:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,212:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,215:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,215:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,217:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,219:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,219:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,242:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,243:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,247:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,250:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,250:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,255:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,264:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,268:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,271:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,275:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,279:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,283:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,285:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,287:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:32,291:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:32,292:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:33,637:INFO:Calculating mean and std
2023-06-02 18:07:33,638:INFO:Creating metrics dataframe
2023-06-02 18:07:33,824:INFO:Uploading results into container
2023-06-02 18:07:33,825:INFO:Uploading model into container now
2023-06-02 18:07:33,826:INFO:_master_model_container: 9
2023-06-02 18:07:33,826:INFO:_display_container: 2
2023-06-02 18:07:33,826:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:07:33,827:INFO:create_model() successfully completed......................................
2023-06-02 18:07:33,993:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:33,994:INFO:Creating metrics dataframe
2023-06-02 18:07:34,012:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:07:34,012:INFO:Total runtime is 0.4194140672683715 minutes
2023-06-02 18:07:34,016:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:34,017:INFO:Initializing create_model()
2023-06-02 18:07:34,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:34,017:INFO:Checking exceptions
2023-06-02 18:07:34,017:INFO:Importing libraries
2023-06-02 18:07:34,017:INFO:Copying training dataset
2023-06-02 18:07:34,022:INFO:Defining folds
2023-06-02 18:07:34,023:INFO:Declaring metric variables
2023-06-02 18:07:34,027:INFO:Importing untrained model
2023-06-02 18:07:34,033:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:07:34,041:INFO:Starting cross validation
2023-06-02 18:07:34,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:36,349:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,376:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,409:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,429:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,440:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:36,450:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:07:38,363:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,367:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,368:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,370:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,373:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,375:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,375:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,377:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,394:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,396:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,427:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,431:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,434:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,448:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,450:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,453:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,465:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,467:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,469:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,471:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,473:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,473:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,473:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,476:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,478:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,479:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,479:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,484:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:38,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:38,488:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:39,838:INFO:Calculating mean and std
2023-06-02 18:07:39,839:INFO:Creating metrics dataframe
2023-06-02 18:07:40,030:INFO:Uploading results into container
2023-06-02 18:07:40,031:INFO:Uploading model into container now
2023-06-02 18:07:40,031:INFO:_master_model_container: 10
2023-06-02 18:07:40,032:INFO:_display_container: 2
2023-06-02 18:07:40,032:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:07:40,033:INFO:create_model() successfully completed......................................
2023-06-02 18:07:40,190:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:40,191:INFO:Creating metrics dataframe
2023-06-02 18:07:40,208:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:07:40,208:INFO:Total runtime is 0.5226663390795389 minutes
2023-06-02 18:07:40,213:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:40,213:INFO:Initializing create_model()
2023-06-02 18:07:40,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:40,213:INFO:Checking exceptions
2023-06-02 18:07:40,214:INFO:Importing libraries
2023-06-02 18:07:40,214:INFO:Copying training dataset
2023-06-02 18:07:40,218:INFO:Defining folds
2023-06-02 18:07:40,219:INFO:Declaring metric variables
2023-06-02 18:07:40,223:INFO:Importing untrained model
2023-06-02 18:07:40,229:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:07:40,237:INFO:Starting cross validation
2023-06-02 18:07:40,238:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:40,519:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,522:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,524:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,526:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,529:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,529:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,532:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,534:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,536:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,537:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,541:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,543:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,547:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,550:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,552:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,552:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,554:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,564:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,568:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,572:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,572:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,576:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,577:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,578:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,580:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,583:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,585:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,590:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:40,593:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:40,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:41,946:INFO:Calculating mean and std
2023-06-02 18:07:41,947:INFO:Creating metrics dataframe
2023-06-02 18:07:42,134:INFO:Uploading results into container
2023-06-02 18:07:42,135:INFO:Uploading model into container now
2023-06-02 18:07:42,136:INFO:_master_model_container: 11
2023-06-02 18:07:42,136:INFO:_display_container: 2
2023-06-02 18:07:42,136:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:07:42,136:INFO:create_model() successfully completed......................................
2023-06-02 18:07:42,293:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:42,294:INFO:Creating metrics dataframe
2023-06-02 18:07:42,311:INFO:Initializing Extra Trees Classifier
2023-06-02 18:07:42,311:INFO:Total runtime is 0.5577189445495604 minutes
2023-06-02 18:07:42,315:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:42,315:INFO:Initializing create_model()
2023-06-02 18:07:42,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:42,315:INFO:Checking exceptions
2023-06-02 18:07:42,316:INFO:Importing libraries
2023-06-02 18:07:42,316:INFO:Copying training dataset
2023-06-02 18:07:42,320:INFO:Defining folds
2023-06-02 18:07:42,321:INFO:Declaring metric variables
2023-06-02 18:07:42,326:INFO:Importing untrained model
2023-06-02 18:07:42,331:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:07:42,340:INFO:Starting cross validation
2023-06-02 18:07:42,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:43,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,439:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,440:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,441:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,442:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,442:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,444:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,444:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,446:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,447:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,449:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,460:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,467:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,467:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,469:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,471:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,471:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,473:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,480:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,479:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,485:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,488:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,496:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,535:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,538:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:43,541:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:43,543:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:44,892:INFO:Calculating mean and std
2023-06-02 18:07:44,894:INFO:Creating metrics dataframe
2023-06-02 18:07:45,092:INFO:Uploading results into container
2023-06-02 18:07:45,093:INFO:Uploading model into container now
2023-06-02 18:07:45,093:INFO:_master_model_container: 12
2023-06-02 18:07:45,094:INFO:_display_container: 2
2023-06-02 18:07:45,094:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:07:45,094:INFO:create_model() successfully completed......................................
2023-06-02 18:07:45,258:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:45,258:INFO:Creating metrics dataframe
2023-06-02 18:07:45,276:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:07:45,276:INFO:Total runtime is 0.6071351210276285 minutes
2023-06-02 18:07:45,280:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:45,281:INFO:Initializing create_model()
2023-06-02 18:07:45,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:45,281:INFO:Checking exceptions
2023-06-02 18:07:45,281:INFO:Importing libraries
2023-06-02 18:07:45,281:INFO:Copying training dataset
2023-06-02 18:07:45,286:INFO:Defining folds
2023-06-02 18:07:45,286:INFO:Declaring metric variables
2023-06-02 18:07:45,290:INFO:Importing untrained model
2023-06-02 18:07:45,295:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:07:45,304:INFO:Starting cross validation
2023-06-02 18:07:45,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:45,766:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,771:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,773:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,783:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,792:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,792:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,793:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,796:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,797:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,798:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,798:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,799:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,801:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,801:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,811:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,812:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,815:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,826:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,829:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,830:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,832:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,833:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,834:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,835:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,837:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,842:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,846:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:45,848:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:45,850:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,251:INFO:Calculating mean and std
2023-06-02 18:07:47,253:INFO:Creating metrics dataframe
2023-06-02 18:07:47,447:INFO:Uploading results into container
2023-06-02 18:07:47,448:INFO:Uploading model into container now
2023-06-02 18:07:47,449:INFO:_master_model_container: 13
2023-06-02 18:07:47,449:INFO:_display_container: 2
2023-06-02 18:07:47,450:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:07:47,450:INFO:create_model() successfully completed......................................
2023-06-02 18:07:47,600:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:47,600:INFO:Creating metrics dataframe
2023-06-02 18:07:47,621:INFO:Initializing Dummy Classifier
2023-06-02 18:07:47,621:INFO:Total runtime is 0.6462228020032246 minutes
2023-06-02 18:07:47,625:INFO:SubProcess create_model() called ==================================
2023-06-02 18:07:47,626:INFO:Initializing create_model()
2023-06-02 18:07:47,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D15FE77430>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:47,626:INFO:Checking exceptions
2023-06-02 18:07:47,626:INFO:Importing libraries
2023-06-02 18:07:47,626:INFO:Copying training dataset
2023-06-02 18:07:47,631:INFO:Defining folds
2023-06-02 18:07:47,631:INFO:Declaring metric variables
2023-06-02 18:07:47,636:INFO:Importing untrained model
2023-06-02 18:07:47,641:INFO:Dummy Classifier Imported successfully
2023-06-02 18:07:47,649:INFO:Starting cross validation
2023-06-02 18:07:47,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:07:47,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,930:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,932:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,934:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,934:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,934:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,936:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,937:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,938:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,940:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,941:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,941:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,944:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,945:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,947:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,948:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,949:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,951:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,953:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,959:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,963:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,964:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,967:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,968:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,968:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,970:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,972:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,974:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,977:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,979:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,979:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,985:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,987:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:47,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:07:47,999:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:07:49,403:INFO:Calculating mean and std
2023-06-02 18:07:49,404:INFO:Creating metrics dataframe
2023-06-02 18:07:49,602:INFO:Uploading results into container
2023-06-02 18:07:49,603:INFO:Uploading model into container now
2023-06-02 18:07:49,603:INFO:_master_model_container: 14
2023-06-02 18:07:49,603:INFO:_display_container: 2
2023-06-02 18:07:49,603:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:07:49,604:INFO:create_model() successfully completed......................................
2023-06-02 18:07:49,758:INFO:SubProcess create_model() end ==================================
2023-06-02 18:07:49,758:INFO:Creating metrics dataframe
2023-06-02 18:07:49,788:INFO:Initializing create_model()
2023-06-02 18:07:49,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D11D8C17C0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:07:49,789:INFO:Checking exceptions
2023-06-02 18:07:49,791:INFO:Importing libraries
2023-06-02 18:07:49,791:INFO:Copying training dataset
2023-06-02 18:07:49,795:INFO:Defining folds
2023-06-02 18:07:49,795:INFO:Declaring metric variables
2023-06-02 18:07:49,796:INFO:Importing untrained model
2023-06-02 18:07:49,796:INFO:Declaring custom model
2023-06-02 18:07:49,796:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:07:49,798:INFO:Cross validation set to False
2023-06-02 18:07:49,798:INFO:Fitting Model
2023-06-02 18:07:49,876:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:07:50,032:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:07:50,032:INFO:create_model() successfully completed......................................
2023-06-02 18:07:50,222:INFO:_master_model_container: 14
2023-06-02 18:07:50,222:INFO:_display_container: 2
2023-06-02 18:07:50,223:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:07:50,223:INFO:compare_models() successfully completed......................................
2023-06-02 18:07:50,491:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_20104\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:07:56,137:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\ray\tune\experiment\experiment.py:170: UserWarning: The `local_dir` argument of `Experiment is deprecated. Use `storage_path` or set the `TUNE_RESULT_DIR` environment variable instead.
  warnings.warn(

2023-06-02 18:11:35,456:INFO:PyCaret ClassificationExperiment
2023-06-02 18:11:35,456:INFO:Logging name: clf-default-name
2023-06-02 18:11:35,456:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:11:35,456:INFO:version 3.0.2
2023-06-02 18:11:35,456:INFO:Initializing setup()
2023-06-02 18:11:35,456:INFO:self.USI: a780
2023-06-02 18:11:35,456:INFO:self._variable_keys: {'y_test', 'seed', 'gpu_n_jobs_param', 'USI', 'fold_groups_param', 'n_jobs_param', '_available_plots', 'exp_name_log', 'idx', 'memory', 'fold_shuffle_param', 'data', 'log_plots_param', 'y', 'html_param', 'pipeline', 'fix_imbalance', 'logging_param', 'gpu_param', 'X', 'fold_generator', 'X_train', 'is_multiclass', '_ml_usecase', 'X_test', 'y_train', 'exp_id', 'target_param'}
2023-06-02 18:11:35,456:INFO:Checking environment
2023-06-02 18:11:35,456:INFO:python_version: 3.8.16
2023-06-02 18:11:35,456:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:11:35,456:INFO:machine: AMD64
2023-06-02 18:11:35,456:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:11:35,456:INFO:Memory: svmem(total=17106501632, available=6732259328, percent=60.6, used=10374242304, free=6732259328)
2023-06-02 18:11:35,457:INFO:Physical Core: 6
2023-06-02 18:11:35,457:INFO:Logical Core: 12
2023-06-02 18:11:35,457:INFO:Checking libraries
2023-06-02 18:11:35,457:INFO:System:
2023-06-02 18:11:35,457:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:11:35,457:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:11:35,457:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:11:35,457:INFO:PyCaret required dependencies:
2023-06-02 18:11:35,457:INFO:                 pip: 23.0.1
2023-06-02 18:11:35,457:INFO:          setuptools: 67.8.0
2023-06-02 18:11:35,457:INFO:             pycaret: 3.0.2
2023-06-02 18:11:35,457:INFO:             IPython: 8.8.0
2023-06-02 18:11:35,457:INFO:          ipywidgets: 8.0.6
2023-06-02 18:11:35,457:INFO:                tqdm: 4.65.0
2023-06-02 18:11:35,458:INFO:               numpy: 1.23.5
2023-06-02 18:11:35,458:INFO:              pandas: 1.5.3
2023-06-02 18:11:35,458:INFO:              jinja2: 3.1.2
2023-06-02 18:11:35,458:INFO:               scipy: 1.10.1
2023-06-02 18:11:35,458:INFO:              joblib: 1.2.0
2023-06-02 18:11:35,458:INFO:             sklearn: 1.2.2
2023-06-02 18:11:35,458:INFO:                pyod: 1.0.9
2023-06-02 18:11:35,458:INFO:            imblearn: 0.10.1
2023-06-02 18:11:35,458:INFO:   category_encoders: 2.6.1
2023-06-02 18:11:35,458:INFO:            lightgbm: 3.3.5
2023-06-02 18:11:35,458:INFO:               numba: 0.57.0
2023-06-02 18:11:35,458:INFO:            requests: 2.31.0
2023-06-02 18:11:35,458:INFO:          matplotlib: 3.7.1
2023-06-02 18:11:35,458:INFO:          scikitplot: 0.3.7
2023-06-02 18:11:35,458:INFO:         yellowbrick: 1.5
2023-06-02 18:11:35,458:INFO:              plotly: 5.14.1
2023-06-02 18:11:35,459:INFO:             kaleido: 0.2.1
2023-06-02 18:11:35,459:INFO:         statsmodels: 0.14.0
2023-06-02 18:11:35,459:INFO:              sktime: 0.17.0
2023-06-02 18:11:35,459:INFO:               tbats: 1.1.3
2023-06-02 18:11:35,459:INFO:            pmdarima: 2.0.3
2023-06-02 18:11:35,459:INFO:              psutil: 5.9.5
2023-06-02 18:11:35,459:INFO:PyCaret optional dependencies:
2023-06-02 18:11:35,459:INFO:                shap: Not installed
2023-06-02 18:11:35,459:INFO:           interpret: Not installed
2023-06-02 18:11:35,459:INFO:                umap: Not installed
2023-06-02 18:11:35,459:INFO:    pandas_profiling: Not installed
2023-06-02 18:11:35,459:INFO:  explainerdashboard: Not installed
2023-06-02 18:11:35,459:INFO:             autoviz: Not installed
2023-06-02 18:11:35,459:INFO:           fairlearn: Not installed
2023-06-02 18:11:35,460:INFO:             xgboost: Not installed
2023-06-02 18:11:35,460:INFO:            catboost: Not installed
2023-06-02 18:11:35,460:INFO:              kmodes: Not installed
2023-06-02 18:11:35,460:INFO:             mlxtend: Not installed
2023-06-02 18:11:35,460:INFO:       statsforecast: Not installed
2023-06-02 18:11:35,460:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:11:35,460:INFO:                 ray: 2.4.0
2023-06-02 18:11:35,460:INFO:            hyperopt: Not installed
2023-06-02 18:11:35,460:INFO:              optuna: Not installed
2023-06-02 18:11:35,460:INFO:               skopt: Not installed
2023-06-02 18:11:35,460:INFO:              mlflow: Not installed
2023-06-02 18:11:35,460:INFO:              gradio: Not installed
2023-06-02 18:11:35,460:INFO:             fastapi: Not installed
2023-06-02 18:11:35,460:INFO:             uvicorn: Not installed
2023-06-02 18:11:35,460:INFO:              m2cgen: Not installed
2023-06-02 18:11:35,460:INFO:           evidently: Not installed
2023-06-02 18:11:35,461:INFO:               fugue: Not installed
2023-06-02 18:11:35,461:INFO:           streamlit: Not installed
2023-06-02 18:11:35,461:INFO:             prophet: Not installed
2023-06-02 18:11:35,461:INFO:None
2023-06-02 18:11:35,461:INFO:Set up data.
2023-06-02 18:11:53,055:INFO:PyCaret ClassificationExperiment
2023-06-02 18:11:53,055:INFO:Logging name: clf-default-name
2023-06-02 18:11:53,055:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:11:53,055:INFO:version 3.0.2
2023-06-02 18:11:53,055:INFO:Initializing setup()
2023-06-02 18:11:53,055:INFO:self.USI: 5315
2023-06-02 18:11:53,055:INFO:self._variable_keys: {'y_test', 'seed', 'gpu_n_jobs_param', 'USI', 'fold_groups_param', 'n_jobs_param', '_available_plots', 'exp_name_log', 'idx', 'memory', 'fold_shuffle_param', 'data', 'log_plots_param', 'y', 'html_param', 'pipeline', 'fix_imbalance', 'logging_param', 'gpu_param', 'X', 'fold_generator', 'X_train', 'is_multiclass', '_ml_usecase', 'X_test', 'y_train', 'exp_id', 'target_param'}
2023-06-02 18:11:53,056:INFO:Checking environment
2023-06-02 18:11:53,056:INFO:python_version: 3.8.16
2023-06-02 18:11:53,056:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:11:53,056:INFO:machine: AMD64
2023-06-02 18:11:53,056:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:11:53,056:INFO:Memory: svmem(total=17106501632, available=6663016448, percent=61.0, used=10443485184, free=6663016448)
2023-06-02 18:11:53,056:INFO:Physical Core: 6
2023-06-02 18:11:53,056:INFO:Logical Core: 12
2023-06-02 18:11:53,056:INFO:Checking libraries
2023-06-02 18:11:53,056:INFO:System:
2023-06-02 18:11:53,056:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:11:53,056:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:11:53,056:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:11:53,056:INFO:PyCaret required dependencies:
2023-06-02 18:11:53,057:INFO:                 pip: 23.0.1
2023-06-02 18:11:53,057:INFO:          setuptools: 67.8.0
2023-06-02 18:11:53,057:INFO:             pycaret: 3.0.2
2023-06-02 18:11:53,057:INFO:             IPython: 8.8.0
2023-06-02 18:11:53,057:INFO:          ipywidgets: 8.0.6
2023-06-02 18:11:53,057:INFO:                tqdm: 4.65.0
2023-06-02 18:11:53,057:INFO:               numpy: 1.23.5
2023-06-02 18:11:53,057:INFO:              pandas: 1.5.3
2023-06-02 18:11:53,057:INFO:              jinja2: 3.1.2
2023-06-02 18:11:53,057:INFO:               scipy: 1.10.1
2023-06-02 18:11:53,057:INFO:              joblib: 1.2.0
2023-06-02 18:11:53,057:INFO:             sklearn: 1.2.2
2023-06-02 18:11:53,057:INFO:                pyod: 1.0.9
2023-06-02 18:11:53,057:INFO:            imblearn: 0.10.1
2023-06-02 18:11:53,058:INFO:   category_encoders: 2.6.1
2023-06-02 18:11:53,058:INFO:            lightgbm: 3.3.5
2023-06-02 18:11:53,058:INFO:               numba: 0.57.0
2023-06-02 18:11:53,058:INFO:            requests: 2.31.0
2023-06-02 18:11:53,058:INFO:          matplotlib: 3.7.1
2023-06-02 18:11:53,058:INFO:          scikitplot: 0.3.7
2023-06-02 18:11:53,058:INFO:         yellowbrick: 1.5
2023-06-02 18:11:53,058:INFO:              plotly: 5.14.1
2023-06-02 18:11:53,058:INFO:             kaleido: 0.2.1
2023-06-02 18:11:53,058:INFO:         statsmodels: 0.14.0
2023-06-02 18:11:53,058:INFO:              sktime: 0.17.0
2023-06-02 18:11:53,058:INFO:               tbats: 1.1.3
2023-06-02 18:11:53,058:INFO:            pmdarima: 2.0.3
2023-06-02 18:11:53,058:INFO:              psutil: 5.9.5
2023-06-02 18:11:53,058:INFO:PyCaret optional dependencies:
2023-06-02 18:11:53,059:INFO:                shap: Not installed
2023-06-02 18:11:53,059:INFO:           interpret: Not installed
2023-06-02 18:11:53,059:INFO:                umap: Not installed
2023-06-02 18:11:53,059:INFO:    pandas_profiling: Not installed
2023-06-02 18:11:53,059:INFO:  explainerdashboard: Not installed
2023-06-02 18:11:53,059:INFO:             autoviz: Not installed
2023-06-02 18:11:53,059:INFO:           fairlearn: Not installed
2023-06-02 18:11:53,059:INFO:             xgboost: Not installed
2023-06-02 18:11:53,059:INFO:            catboost: Not installed
2023-06-02 18:11:53,059:INFO:              kmodes: Not installed
2023-06-02 18:11:53,059:INFO:             mlxtend: Not installed
2023-06-02 18:11:53,059:INFO:       statsforecast: Not installed
2023-06-02 18:11:53,059:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:11:53,059:INFO:                 ray: 2.4.0
2023-06-02 18:11:53,059:INFO:            hyperopt: Not installed
2023-06-02 18:11:53,060:INFO:              optuna: Not installed
2023-06-02 18:11:53,060:INFO:               skopt: Not installed
2023-06-02 18:11:53,060:INFO:              mlflow: Not installed
2023-06-02 18:11:53,060:INFO:              gradio: Not installed
2023-06-02 18:11:53,060:INFO:             fastapi: Not installed
2023-06-02 18:11:53,060:INFO:             uvicorn: Not installed
2023-06-02 18:11:53,060:INFO:              m2cgen: Not installed
2023-06-02 18:11:53,060:INFO:           evidently: Not installed
2023-06-02 18:11:53,060:INFO:               fugue: Not installed
2023-06-02 18:11:53,060:INFO:           streamlit: Not installed
2023-06-02 18:11:53,060:INFO:             prophet: Not installed
2023-06-02 18:11:53,060:INFO:None
2023-06-02 18:11:53,060:INFO:Set up data.
2023-06-02 18:11:53,065:INFO:Set up train/test split.
2023-06-02 18:11:53,069:INFO:Set up index.
2023-06-02 18:11:53,069:INFO:Set up folding strategy.
2023-06-02 18:11:53,069:INFO:Assigning column types.
2023-06-02 18:11:53,073:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:11:53,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:11:53,146:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:11:53,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:11:53,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:11:53,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,311:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:11:53,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:11:53,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,498:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:11:53,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,543:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:11:53,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:53,779:INFO:Preparing preprocessing pipeline...
2023-06-02 18:11:53,780:INFO:Set up label encoding.
2023-06-02 18:11:53,780:INFO:Set up simple imputation.
2023-06-02 18:11:53,783:INFO:Set up encoding of categorical features.
2023-06-02 18:11:53,849:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:11:53,858:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:11:53,858:INFO:Creating final display dataframe.
2023-06-02 18:11:54,085:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               5315  
2023-06-02 18:11:54,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:54,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:54,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:54,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:11:54,331:INFO:setup() successfully completed in 1.44s...............
2023-06-02 18:12:45,470:INFO:PyCaret ClassificationExperiment
2023-06-02 18:12:45,470:INFO:Logging name: clf-default-name
2023-06-02 18:12:45,470:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:12:45,470:INFO:version 3.0.2
2023-06-02 18:12:45,470:INFO:Initializing setup()
2023-06-02 18:12:45,470:INFO:self.USI: 8ab0
2023-06-02 18:12:45,470:INFO:self._variable_keys: {'y_test', 'seed', 'gpu_n_jobs_param', 'USI', 'fold_groups_param', 'n_jobs_param', '_available_plots', 'exp_name_log', 'idx', 'memory', 'fold_shuffle_param', 'data', 'log_plots_param', 'y', 'html_param', 'pipeline', 'fix_imbalance', 'logging_param', 'gpu_param', 'X', 'fold_generator', 'X_train', 'is_multiclass', '_ml_usecase', 'X_test', 'y_train', 'exp_id', 'target_param'}
2023-06-02 18:12:45,470:INFO:Checking environment
2023-06-02 18:12:45,470:INFO:python_version: 3.8.16
2023-06-02 18:12:45,470:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:12:45,471:INFO:machine: AMD64
2023-06-02 18:12:45,471:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:12:45,471:INFO:Memory: svmem(total=17106501632, available=6658097152, percent=61.1, used=10448404480, free=6658097152)
2023-06-02 18:12:45,471:INFO:Physical Core: 6
2023-06-02 18:12:45,471:INFO:Logical Core: 12
2023-06-02 18:12:45,471:INFO:Checking libraries
2023-06-02 18:12:45,471:INFO:System:
2023-06-02 18:12:45,471:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:12:45,471:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:12:45,471:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:12:45,471:INFO:PyCaret required dependencies:
2023-06-02 18:12:45,471:INFO:                 pip: 23.0.1
2023-06-02 18:12:45,471:INFO:          setuptools: 67.8.0
2023-06-02 18:12:45,471:INFO:             pycaret: 3.0.2
2023-06-02 18:12:45,472:INFO:             IPython: 8.8.0
2023-06-02 18:12:45,472:INFO:          ipywidgets: 8.0.6
2023-06-02 18:12:45,472:INFO:                tqdm: 4.65.0
2023-06-02 18:12:45,472:INFO:               numpy: 1.23.5
2023-06-02 18:12:45,472:INFO:              pandas: 1.5.3
2023-06-02 18:12:45,472:INFO:              jinja2: 3.1.2
2023-06-02 18:12:45,472:INFO:               scipy: 1.10.1
2023-06-02 18:12:45,472:INFO:              joblib: 1.2.0
2023-06-02 18:12:45,472:INFO:             sklearn: 1.2.2
2023-06-02 18:12:45,472:INFO:                pyod: 1.0.9
2023-06-02 18:12:45,472:INFO:            imblearn: 0.10.1
2023-06-02 18:12:45,472:INFO:   category_encoders: 2.6.1
2023-06-02 18:12:45,472:INFO:            lightgbm: 3.3.5
2023-06-02 18:12:45,472:INFO:               numba: 0.57.0
2023-06-02 18:12:45,473:INFO:            requests: 2.31.0
2023-06-02 18:12:45,473:INFO:          matplotlib: 3.7.1
2023-06-02 18:12:45,473:INFO:          scikitplot: 0.3.7
2023-06-02 18:12:45,473:INFO:         yellowbrick: 1.5
2023-06-02 18:12:45,473:INFO:              plotly: 5.14.1
2023-06-02 18:12:45,473:INFO:             kaleido: 0.2.1
2023-06-02 18:12:45,473:INFO:         statsmodels: 0.14.0
2023-06-02 18:12:45,473:INFO:              sktime: 0.17.0
2023-06-02 18:12:45,473:INFO:               tbats: 1.1.3
2023-06-02 18:12:45,473:INFO:            pmdarima: 2.0.3
2023-06-02 18:12:45,473:INFO:              psutil: 5.9.5
2023-06-02 18:12:45,473:INFO:PyCaret optional dependencies:
2023-06-02 18:12:45,473:INFO:                shap: Not installed
2023-06-02 18:12:45,473:INFO:           interpret: Not installed
2023-06-02 18:12:45,473:INFO:                umap: Not installed
2023-06-02 18:12:45,474:INFO:    pandas_profiling: Not installed
2023-06-02 18:12:45,474:INFO:  explainerdashboard: Not installed
2023-06-02 18:12:45,474:INFO:             autoviz: Not installed
2023-06-02 18:12:45,474:INFO:           fairlearn: Not installed
2023-06-02 18:12:45,474:INFO:             xgboost: Not installed
2023-06-02 18:12:45,474:INFO:            catboost: Not installed
2023-06-02 18:12:45,474:INFO:              kmodes: Not installed
2023-06-02 18:12:45,474:INFO:             mlxtend: Not installed
2023-06-02 18:12:45,474:INFO:       statsforecast: Not installed
2023-06-02 18:12:45,474:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:12:45,474:INFO:                 ray: 2.4.0
2023-06-02 18:12:45,474:INFO:            hyperopt: Not installed
2023-06-02 18:12:45,474:INFO:              optuna: Not installed
2023-06-02 18:12:45,474:INFO:               skopt: Not installed
2023-06-02 18:12:45,474:INFO:              mlflow: Not installed
2023-06-02 18:12:45,474:INFO:              gradio: Not installed
2023-06-02 18:12:45,475:INFO:             fastapi: Not installed
2023-06-02 18:12:45,475:INFO:             uvicorn: Not installed
2023-06-02 18:12:45,475:INFO:              m2cgen: Not installed
2023-06-02 18:12:45,475:INFO:           evidently: Not installed
2023-06-02 18:12:45,475:INFO:               fugue: Not installed
2023-06-02 18:12:45,475:INFO:           streamlit: Not installed
2023-06-02 18:12:45,475:INFO:             prophet: Not installed
2023-06-02 18:12:45,475:INFO:None
2023-06-02 18:12:45,475:INFO:Set up data.
2023-06-02 18:12:45,479:INFO:Set up train/test split.
2023-06-02 18:12:45,483:INFO:Set up index.
2023-06-02 18:12:45,483:INFO:Set up folding strategy.
2023-06-02 18:12:45,484:INFO:Assigning column types.
2023-06-02 18:12:45,487:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:12:45,558:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:12:45,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:12:45,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,677:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:12:45,678:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:12:45,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,723:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:12:45,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:12:45,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,910:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:12:45,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:45,954:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:12:46,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:46,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:46,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:46,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:46,187:INFO:Preparing preprocessing pipeline...
2023-06-02 18:12:46,188:INFO:Set up label encoding.
2023-06-02 18:12:46,188:INFO:Set up simple imputation.
2023-06-02 18:12:46,190:INFO:Set up encoding of categorical features.
2023-06-02 18:12:46,259:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:12:46,268:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:12:46,268:INFO:Creating final display dataframe.
2023-06-02 18:12:46,506:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               8ab0  
2023-06-02 18:12:46,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:46,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:12:46,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:07,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:13:07,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:13:07,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:13:07,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:13:11,383:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:13:11,733:INFO:PyCaret ClassificationExperiment
2023-06-02 18:13:11,733:INFO:Logging name: clf-default-name
2023-06-02 18:13:11,733:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:13:11,733:INFO:version 3.0.2
2023-06-02 18:13:11,733:INFO:Initializing setup()
2023-06-02 18:13:11,733:INFO:self.USI: c326
2023-06-02 18:13:11,733:INFO:self._variable_keys: {'fix_imbalance', 'fold_shuffle_param', 'gpu_param', 'fold_generator', 'fold_groups_param', 'y', 'X_train', 'log_plots_param', 'target_param', 'is_multiclass', 'exp_name_log', 'y_test', 'seed', 'gpu_n_jobs_param', '_ml_usecase', 'html_param', 'X', 'logging_param', 'data', '_available_plots', 'memory', 'n_jobs_param', 'X_test', 'y_train', 'exp_id', 'pipeline', 'idx', 'USI'}
2023-06-02 18:13:11,733:INFO:Checking environment
2023-06-02 18:13:11,733:INFO:python_version: 3.8.16
2023-06-02 18:13:11,734:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:13:11,734:INFO:machine: AMD64
2023-06-02 18:13:11,734:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:13:11,734:INFO:Memory: svmem(total=17106501632, available=8867676160, percent=48.2, used=8238825472, free=8867676160)
2023-06-02 18:13:11,734:INFO:Physical Core: 6
2023-06-02 18:13:11,734:INFO:Logical Core: 12
2023-06-02 18:13:11,734:INFO:Checking libraries
2023-06-02 18:13:11,734:INFO:System:
2023-06-02 18:13:11,734:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:13:11,734:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:13:11,734:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:13:11,734:INFO:PyCaret required dependencies:
2023-06-02 18:13:11,734:INFO:                 pip: 23.0.1
2023-06-02 18:13:11,735:INFO:          setuptools: 67.8.0
2023-06-02 18:13:11,735:INFO:             pycaret: 3.0.2
2023-06-02 18:13:11,735:INFO:             IPython: 8.8.0
2023-06-02 18:13:11,735:INFO:          ipywidgets: 8.0.6
2023-06-02 18:13:11,735:INFO:                tqdm: 4.65.0
2023-06-02 18:13:11,735:INFO:               numpy: 1.23.5
2023-06-02 18:13:11,735:INFO:              pandas: 1.5.3
2023-06-02 18:13:11,735:INFO:              jinja2: 3.1.2
2023-06-02 18:13:11,735:INFO:               scipy: 1.10.1
2023-06-02 18:13:11,735:INFO:              joblib: 1.2.0
2023-06-02 18:13:11,735:INFO:             sklearn: 1.2.2
2023-06-02 18:13:11,735:INFO:                pyod: 1.0.9
2023-06-02 18:13:11,735:INFO:            imblearn: 0.10.1
2023-06-02 18:13:11,735:INFO:   category_encoders: 2.6.1
2023-06-02 18:13:11,735:INFO:            lightgbm: 3.3.5
2023-06-02 18:13:11,736:INFO:               numba: 0.57.0
2023-06-02 18:13:11,736:INFO:            requests: 2.31.0
2023-06-02 18:13:11,736:INFO:          matplotlib: 3.7.1
2023-06-02 18:13:11,736:INFO:          scikitplot: 0.3.7
2023-06-02 18:13:11,736:INFO:         yellowbrick: 1.5
2023-06-02 18:13:11,736:INFO:              plotly: 5.14.1
2023-06-02 18:13:11,736:INFO:             kaleido: 0.2.1
2023-06-02 18:13:11,736:INFO:         statsmodels: 0.14.0
2023-06-02 18:13:11,736:INFO:              sktime: 0.17.0
2023-06-02 18:13:11,736:INFO:               tbats: 1.1.3
2023-06-02 18:13:11,736:INFO:            pmdarima: 2.0.3
2023-06-02 18:13:11,736:INFO:              psutil: 5.9.5
2023-06-02 18:13:11,736:INFO:PyCaret optional dependencies:
2023-06-02 18:13:11,759:INFO:                shap: Not installed
2023-06-02 18:13:11,759:INFO:           interpret: Not installed
2023-06-02 18:13:11,759:INFO:                umap: Not installed
2023-06-02 18:13:11,759:INFO:    pandas_profiling: Not installed
2023-06-02 18:13:11,759:INFO:  explainerdashboard: Not installed
2023-06-02 18:13:11,759:INFO:             autoviz: Not installed
2023-06-02 18:13:11,759:INFO:           fairlearn: Not installed
2023-06-02 18:13:11,759:INFO:             xgboost: Not installed
2023-06-02 18:13:11,759:INFO:            catboost: Not installed
2023-06-02 18:13:11,760:INFO:              kmodes: Not installed
2023-06-02 18:13:11,760:INFO:             mlxtend: Not installed
2023-06-02 18:13:11,760:INFO:       statsforecast: Not installed
2023-06-02 18:13:11,760:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:13:11,760:INFO:                 ray: 2.4.0
2023-06-02 18:13:11,760:INFO:            hyperopt: Not installed
2023-06-02 18:13:11,760:INFO:              optuna: Not installed
2023-06-02 18:13:11,760:INFO:               skopt: Not installed
2023-06-02 18:13:11,760:INFO:              mlflow: Not installed
2023-06-02 18:13:11,760:INFO:              gradio: Not installed
2023-06-02 18:13:11,760:INFO:             fastapi: Not installed
2023-06-02 18:13:11,760:INFO:             uvicorn: Not installed
2023-06-02 18:13:11,760:INFO:              m2cgen: Not installed
2023-06-02 18:13:11,760:INFO:           evidently: Not installed
2023-06-02 18:13:11,760:INFO:               fugue: Not installed
2023-06-02 18:13:11,760:INFO:           streamlit: Not installed
2023-06-02 18:13:11,761:INFO:             prophet: Not installed
2023-06-02 18:13:11,761:INFO:None
2023-06-02 18:13:11,761:INFO:Set up data.
2023-06-02 18:13:11,765:INFO:Set up train/test split.
2023-06-02 18:13:11,770:INFO:Set up index.
2023-06-02 18:13:11,770:INFO:Set up folding strategy.
2023-06-02 18:13:11,770:INFO:Assigning column types.
2023-06-02 18:13:11,774:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:13:11,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:13:11,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:13:11,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:11,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,010:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:13:12,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:13:12,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,055:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:13:12,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:13:12,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,248:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:13:12,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,293:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:13:12,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,527:INFO:Preparing preprocessing pipeline...
2023-06-02 18:13:12,528:INFO:Set up label encoding.
2023-06-02 18:13:12,528:INFO:Set up simple imputation.
2023-06-02 18:13:12,530:INFO:Set up encoding of categorical features.
2023-06-02 18:13:12,597:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:13:12,608:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:13:12,609:INFO:Creating final display dataframe.
2023-06-02 18:13:12,834:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               c326  
2023-06-02 18:13:12,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:12,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:13,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:13,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:13:13,091:INFO:setup() successfully completed in 1.55s...............
2023-06-02 18:13:13,162:INFO:Initializing compare_models()
2023-06-02 18:13:13,162:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:13:13,163:INFO:Checking exceptions
2023-06-02 18:13:13,167:INFO:Preparing display monitor
2023-06-02 18:13:13,193:INFO:Initializing Logistic Regression
2023-06-02 18:13:13,194:INFO:Total runtime is 1.666545867919922e-05 minutes
2023-06-02 18:13:13,198:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:13,198:INFO:Initializing create_model()
2023-06-02 18:13:13,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:13,199:INFO:Checking exceptions
2023-06-02 18:13:13,199:INFO:Importing libraries
2023-06-02 18:13:13,199:INFO:Copying training dataset
2023-06-02 18:13:13,205:INFO:Defining folds
2023-06-02 18:13:13,205:INFO:Declaring metric variables
2023-06-02 18:13:13,210:INFO:Importing untrained model
2023-06-02 18:13:13,215:INFO:Logistic Regression Imported successfully
2023-06-02 18:13:13,225:INFO:Starting cross validation
2023-06-02 18:13:13,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:18,461:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,466:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,468:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,470:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,513:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,517:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,519:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,521:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,529:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,534:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,540:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,544:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,548:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,560:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,564:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,564:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,566:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,568:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,573:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,588:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,592:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,594:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,598:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,607:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,615:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,636:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,699:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,703:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:18,705:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:18,707:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,059:INFO:Calculating mean and std
2023-06-02 18:13:20,060:INFO:Creating metrics dataframe
2023-06-02 18:13:20,243:INFO:Uploading results into container
2023-06-02 18:13:20,244:INFO:Uploading model into container now
2023-06-02 18:13:20,245:INFO:_master_model_container: 1
2023-06-02 18:13:20,245:INFO:_display_container: 2
2023-06-02 18:13:20,246:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:13:20,246:INFO:create_model() successfully completed......................................
2023-06-02 18:13:20,401:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:20,401:INFO:Creating metrics dataframe
2023-06-02 18:13:20,413:INFO:Initializing K Neighbors Classifier
2023-06-02 18:13:20,413:INFO:Total runtime is 0.12033010323842368 minutes
2023-06-02 18:13:20,417:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:20,417:INFO:Initializing create_model()
2023-06-02 18:13:20,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:20,418:INFO:Checking exceptions
2023-06-02 18:13:20,418:INFO:Importing libraries
2023-06-02 18:13:20,418:INFO:Copying training dataset
2023-06-02 18:13:20,422:INFO:Defining folds
2023-06-02 18:13:20,423:INFO:Declaring metric variables
2023-06-02 18:13:20,427:INFO:Importing untrained model
2023-06-02 18:13:20,432:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:13:20,439:INFO:Starting cross validation
2023-06-02 18:13:20,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:20,795:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,799:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,799:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,806:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,809:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,811:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,812:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,814:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,814:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,822:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,823:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,824:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,825:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,827:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,842:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,846:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,848:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,850:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,856:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:20,858:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:20,860:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,244:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,244:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,245:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:23,245:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:23,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:23,423:INFO:Calculating mean and std
2023-06-02 18:13:23,425:INFO:Creating metrics dataframe
2023-06-02 18:13:23,615:INFO:Uploading results into container
2023-06-02 18:13:23,616:INFO:Uploading model into container now
2023-06-02 18:13:23,616:INFO:_master_model_container: 2
2023-06-02 18:13:23,616:INFO:_display_container: 2
2023-06-02 18:13:23,617:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:13:23,617:INFO:create_model() successfully completed......................................
2023-06-02 18:13:23,767:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:23,767:INFO:Creating metrics dataframe
2023-06-02 18:13:23,780:INFO:Initializing Naive Bayes
2023-06-02 18:13:23,780:INFO:Total runtime is 0.1764459808667501 minutes
2023-06-02 18:13:23,785:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:23,785:INFO:Initializing create_model()
2023-06-02 18:13:23,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:23,785:INFO:Checking exceptions
2023-06-02 18:13:23,786:INFO:Importing libraries
2023-06-02 18:13:23,786:INFO:Copying training dataset
2023-06-02 18:13:23,790:INFO:Defining folds
2023-06-02 18:13:23,790:INFO:Declaring metric variables
2023-06-02 18:13:23,795:INFO:Importing untrained model
2023-06-02 18:13:23,800:INFO:Naive Bayes Imported successfully
2023-06-02 18:13:23,808:INFO:Starting cross validation
2023-06-02 18:13:23,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:24,091:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,096:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,098:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,102:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,104:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,104:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,106:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,108:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,108:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,110:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,112:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,113:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,115:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,116:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,117:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,121:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,124:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,125:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,127:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,129:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,134:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,138:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,140:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,142:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,143:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,147:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,150:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,151:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,151:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,152:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,153:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,155:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,156:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:24,158:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:24,160:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:25,549:INFO:Calculating mean and std
2023-06-02 18:13:25,551:INFO:Creating metrics dataframe
2023-06-02 18:13:25,741:INFO:Uploading results into container
2023-06-02 18:13:25,742:INFO:Uploading model into container now
2023-06-02 18:13:25,742:INFO:_master_model_container: 3
2023-06-02 18:13:25,742:INFO:_display_container: 2
2023-06-02 18:13:25,742:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:13:25,743:INFO:create_model() successfully completed......................................
2023-06-02 18:13:25,894:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:25,894:INFO:Creating metrics dataframe
2023-06-02 18:13:25,907:INFO:Initializing Decision Tree Classifier
2023-06-02 18:13:25,907:INFO:Total runtime is 0.21189004580179852 minutes
2023-06-02 18:13:25,911:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:25,911:INFO:Initializing create_model()
2023-06-02 18:13:25,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:25,911:INFO:Checking exceptions
2023-06-02 18:13:25,912:INFO:Importing libraries
2023-06-02 18:13:25,912:INFO:Copying training dataset
2023-06-02 18:13:25,918:INFO:Defining folds
2023-06-02 18:13:25,918:INFO:Declaring metric variables
2023-06-02 18:13:25,923:INFO:Importing untrained model
2023-06-02 18:13:25,928:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:13:25,936:INFO:Starting cross validation
2023-06-02 18:13:25,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:26,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,239:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 18:13:26,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,242:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,243:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,243:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,244:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,255:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,258:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,259:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,263:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,265:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,267:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,267:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,269:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,269:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,271:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,272:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,274:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,276:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,281:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,282:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,286:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,287:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,289:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,293:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,297:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:26,299:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:26,301:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:27,694:INFO:Calculating mean and std
2023-06-02 18:13:27,695:INFO:Creating metrics dataframe
2023-06-02 18:13:27,879:INFO:Uploading results into container
2023-06-02 18:13:27,879:INFO:Uploading model into container now
2023-06-02 18:13:27,880:INFO:_master_model_container: 4
2023-06-02 18:13:27,881:INFO:_display_container: 2
2023-06-02 18:13:27,881:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:13:27,881:INFO:create_model() successfully completed......................................
2023-06-02 18:13:28,041:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:28,041:INFO:Creating metrics dataframe
2023-06-02 18:13:28,054:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:13:28,054:INFO:Total runtime is 0.24766841729482017 minutes
2023-06-02 18:13:28,058:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:28,058:INFO:Initializing create_model()
2023-06-02 18:13:28,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:28,059:INFO:Checking exceptions
2023-06-02 18:13:28,059:INFO:Importing libraries
2023-06-02 18:13:28,059:INFO:Copying training dataset
2023-06-02 18:13:28,065:INFO:Defining folds
2023-06-02 18:13:28,065:INFO:Declaring metric variables
2023-06-02 18:13:28,069:INFO:Importing untrained model
2023-06-02 18:13:28,074:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:13:28,083:INFO:Starting cross validation
2023-06-02 18:13:28,084:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:28,308:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,310:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,313:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,314:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,315:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,316:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,317:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,319:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,321:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,321:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,323:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,323:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,327:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,331:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,333:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,333:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,334:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,338:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,338:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,339:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,340:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,343:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,344:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,346:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,346:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,347:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,348:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,351:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,353:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,355:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,355:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,357:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,360:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,363:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,364:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,365:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,366:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,368:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,370:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,370:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,372:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,373:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,374:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,375:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:13:28,375:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,377:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,377:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,381:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:28,383:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:28,385:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:29,763:INFO:Calculating mean and std
2023-06-02 18:13:29,765:INFO:Creating metrics dataframe
2023-06-02 18:13:29,947:INFO:Uploading results into container
2023-06-02 18:13:29,948:INFO:Uploading model into container now
2023-06-02 18:13:29,948:INFO:_master_model_container: 5
2023-06-02 18:13:29,949:INFO:_display_container: 2
2023-06-02 18:13:29,949:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:13:29,949:INFO:create_model() successfully completed......................................
2023-06-02 18:13:30,097:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:30,097:INFO:Creating metrics dataframe
2023-06-02 18:13:30,112:INFO:Initializing Ridge Classifier
2023-06-02 18:13:30,112:INFO:Total runtime is 0.2819695115089417 minutes
2023-06-02 18:13:30,117:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:30,117:INFO:Initializing create_model()
2023-06-02 18:13:30,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:30,117:INFO:Checking exceptions
2023-06-02 18:13:30,118:INFO:Importing libraries
2023-06-02 18:13:30,118:INFO:Copying training dataset
2023-06-02 18:13:30,122:INFO:Defining folds
2023-06-02 18:13:30,122:INFO:Declaring metric variables
2023-06-02 18:13:30,126:INFO:Importing untrained model
2023-06-02 18:13:30,131:INFO:Ridge Classifier Imported successfully
2023-06-02 18:13:30,139:INFO:Starting cross validation
2023-06-02 18:13:30,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:30,341:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,342:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,346:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,348:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,350:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,351:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,353:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,357:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,359:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,360:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,361:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,363:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,364:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,365:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,367:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,373:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,373:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,377:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,379:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,379:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,381:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,383:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,384:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,384:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,386:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,390:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,392:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,393:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,397:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,397:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,400:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,400:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:13:30,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,404:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,406:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,406:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:30,408:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:30,410:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:31,815:INFO:Calculating mean and std
2023-06-02 18:13:31,817:INFO:Creating metrics dataframe
2023-06-02 18:13:32,000:INFO:Uploading results into container
2023-06-02 18:13:32,001:INFO:Uploading model into container now
2023-06-02 18:13:32,001:INFO:_master_model_container: 6
2023-06-02 18:13:32,002:INFO:_display_container: 2
2023-06-02 18:13:32,002:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:13:32,002:INFO:create_model() successfully completed......................................
2023-06-02 18:13:32,151:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:32,151:INFO:Creating metrics dataframe
2023-06-02 18:13:32,166:INFO:Initializing Random Forest Classifier
2023-06-02 18:13:32,166:INFO:Total runtime is 0.3162038008371989 minutes
2023-06-02 18:13:32,170:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:32,171:INFO:Initializing create_model()
2023-06-02 18:13:32,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:32,171:INFO:Checking exceptions
2023-06-02 18:13:32,171:INFO:Importing libraries
2023-06-02 18:13:32,171:INFO:Copying training dataset
2023-06-02 18:13:32,176:INFO:Defining folds
2023-06-02 18:13:32,176:INFO:Declaring metric variables
2023-06-02 18:13:32,181:INFO:Importing untrained model
2023-06-02 18:13:32,185:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:13:32,193:INFO:Starting cross validation
2023-06-02 18:13:32,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:33,321:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,321:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,325:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,325:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,327:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,327:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,327:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,328:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,329:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,329:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,331:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,333:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,333:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,334:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,335:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,336:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,357:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,361:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,363:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,364:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,367:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,367:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,381:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,382:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,384:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,385:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,386:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,386:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,387:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,389:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,389:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,397:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,401:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:33,403:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:33,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:34,841:INFO:Calculating mean and std
2023-06-02 18:13:34,843:INFO:Creating metrics dataframe
2023-06-02 18:13:35,034:INFO:Uploading results into container
2023-06-02 18:13:35,035:INFO:Uploading model into container now
2023-06-02 18:13:35,036:INFO:_master_model_container: 7
2023-06-02 18:13:35,036:INFO:_display_container: 2
2023-06-02 18:13:35,036:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:13:35,037:INFO:create_model() successfully completed......................................
2023-06-02 18:13:35,186:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:35,187:INFO:Creating metrics dataframe
2023-06-02 18:13:35,202:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:13:35,202:INFO:Total runtime is 0.36680353482564293 minutes
2023-06-02 18:13:35,206:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:35,207:INFO:Initializing create_model()
2023-06-02 18:13:35,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:35,207:INFO:Checking exceptions
2023-06-02 18:13:35,207:INFO:Importing libraries
2023-06-02 18:13:35,207:INFO:Copying training dataset
2023-06-02 18:13:35,212:INFO:Defining folds
2023-06-02 18:13:35,212:INFO:Declaring metric variables
2023-06-02 18:13:35,216:INFO:Importing untrained model
2023-06-02 18:13:35,220:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:13:35,229:INFO:Starting cross validation
2023-06-02 18:13:35,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:35,366:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,367:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,374:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,384:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,394:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,404:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,415:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,425:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:35,432:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,444:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,455:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,455:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,456:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,465:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,465:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,466:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,476:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,476:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,477:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,478:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,478:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,481:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,481:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,482:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,498:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,498:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,498:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,510:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,510:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,511:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,516:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,518:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,518:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,519:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,519:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,522:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,523:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,524:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,524:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,528:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,530:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,532:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,534:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,536:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,538:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,543:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,544:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,553:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,555:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,556:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,557:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,557:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,561:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,562:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,562:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,563:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,564:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,564:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,572:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,573:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,574:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:13:35,574:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,575:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,575:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,575:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,576:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,576:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,577:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,578:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,578:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,579:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,579:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,581:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

ighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:13:35,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:13:35,585:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,586:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:13:35,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,589:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,591:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:35,593:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:35,596:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:37,140:INFO:Calculating mean and std
2023-06-02 18:13:37,141:INFO:Creating metrics dataframe
2023-06-02 18:13:37,334:INFO:Uploading results into container
2023-06-02 18:13:37,335:INFO:Uploading model into container now
2023-06-02 18:13:37,335:INFO:_master_model_container: 8
2023-06-02 18:13:37,335:INFO:_display_container: 2
2023-06-02 18:13:37,336:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:13:37,336:INFO:create_model() successfully completed......................................
2023-06-02 18:13:37,486:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:37,486:INFO:Creating metrics dataframe
2023-06-02 18:13:37,504:INFO:Initializing Ada Boost Classifier
2023-06-02 18:13:37,504:INFO:Total runtime is 0.4051833271980286 minutes
2023-06-02 18:13:37,508:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:37,508:INFO:Initializing create_model()
2023-06-02 18:13:37,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:37,509:INFO:Checking exceptions
2023-06-02 18:13:37,509:INFO:Importing libraries
2023-06-02 18:13:37,509:INFO:Copying training dataset
2023-06-02 18:13:37,514:INFO:Defining folds
2023-06-02 18:13:37,515:INFO:Declaring metric variables
2023-06-02 18:13:37,519:INFO:Importing untrained model
2023-06-02 18:13:37,523:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:13:37,532:INFO:Starting cross validation
2023-06-02 18:13:37,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:38,220:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,226:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,231:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,236:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,238:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,239:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,242:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,256:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,258:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,264:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,267:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,268:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,272:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,276:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,280:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,282:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,282:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,285:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,285:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,286:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,287:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,289:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:38,291:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:38,293:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:39,826:INFO:Calculating mean and std
2023-06-02 18:13:39,828:INFO:Creating metrics dataframe
2023-06-02 18:13:40,026:INFO:Uploading results into container
2023-06-02 18:13:40,027:INFO:Uploading model into container now
2023-06-02 18:13:40,027:INFO:_master_model_container: 9
2023-06-02 18:13:40,027:INFO:_display_container: 2
2023-06-02 18:13:40,028:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:13:40,028:INFO:create_model() successfully completed......................................
2023-06-02 18:13:40,179:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:40,179:INFO:Creating metrics dataframe
2023-06-02 18:13:40,195:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:13:40,196:INFO:Total runtime is 0.4500476201375326 minutes
2023-06-02 18:13:40,200:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:40,200:INFO:Initializing create_model()
2023-06-02 18:13:40,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:40,200:INFO:Checking exceptions
2023-06-02 18:13:40,201:INFO:Importing libraries
2023-06-02 18:13:40,201:INFO:Copying training dataset
2023-06-02 18:13:40,205:INFO:Defining folds
2023-06-02 18:13:40,205:INFO:Declaring metric variables
2023-06-02 18:13:40,210:INFO:Importing untrained model
2023-06-02 18:13:40,215:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:13:40,223:INFO:Starting cross validation
2023-06-02 18:13:40,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:42,449:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,457:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,479:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,482:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,484:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,485:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,510:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,514:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,526:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:42,527:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:13:44,414:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,418:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,420:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,422:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,428:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,432:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,435:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,435:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,440:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,441:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,441:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,441:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,483:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,496:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,501:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,503:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,505:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,506:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,508:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,510:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,512:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,513:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,515:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:44,515:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:44,517:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,088:INFO:Calculating mean and std
2023-06-02 18:13:46,089:INFO:Creating metrics dataframe
2023-06-02 18:13:46,297:INFO:Uploading results into container
2023-06-02 18:13:46,298:INFO:Uploading model into container now
2023-06-02 18:13:46,299:INFO:_master_model_container: 10
2023-06-02 18:13:46,299:INFO:_display_container: 2
2023-06-02 18:13:46,299:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:13:46,300:INFO:create_model() successfully completed......................................
2023-06-02 18:13:46,454:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:46,454:INFO:Creating metrics dataframe
2023-06-02 18:13:46,470:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:13:46,470:INFO:Total runtime is 0.5546160260836284 minutes
2023-06-02 18:13:46,474:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:46,474:INFO:Initializing create_model()
2023-06-02 18:13:46,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:46,475:INFO:Checking exceptions
2023-06-02 18:13:46,475:INFO:Importing libraries
2023-06-02 18:13:46,475:INFO:Copying training dataset
2023-06-02 18:13:46,480:INFO:Defining folds
2023-06-02 18:13:46,480:INFO:Declaring metric variables
2023-06-02 18:13:46,484:INFO:Importing untrained model
2023-06-02 18:13:46,489:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:13:46,497:INFO:Starting cross validation
2023-06-02 18:13:46,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:46,783:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,791:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,795:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,796:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,801:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,809:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,810:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,815:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,817:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,823:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,824:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,827:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,827:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,828:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,829:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,830:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,837:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,841:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,843:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,844:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,845:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,846:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,847:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,849:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,850:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,851:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:46,853:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:46,855:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:48,437:INFO:Calculating mean and std
2023-06-02 18:13:48,438:INFO:Creating metrics dataframe
2023-06-02 18:13:48,649:INFO:Uploading results into container
2023-06-02 18:13:48,650:INFO:Uploading model into container now
2023-06-02 18:13:48,650:INFO:_master_model_container: 11
2023-06-02 18:13:48,650:INFO:_display_container: 2
2023-06-02 18:13:48,651:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:13:48,651:INFO:create_model() successfully completed......................................
2023-06-02 18:13:48,806:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:48,806:INFO:Creating metrics dataframe
2023-06-02 18:13:48,824:INFO:Initializing Extra Trees Classifier
2023-06-02 18:13:48,824:INFO:Total runtime is 0.593837865193685 minutes
2023-06-02 18:13:48,829:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:48,830:INFO:Initializing create_model()
2023-06-02 18:13:48,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:48,830:INFO:Checking exceptions
2023-06-02 18:13:48,830:INFO:Importing libraries
2023-06-02 18:13:48,831:INFO:Copying training dataset
2023-06-02 18:13:48,835:INFO:Defining folds
2023-06-02 18:13:48,835:INFO:Declaring metric variables
2023-06-02 18:13:48,839:INFO:Importing untrained model
2023-06-02 18:13:48,844:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:13:48,852:INFO:Starting cross validation
2023-06-02 18:13:48,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:49,953:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,957:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,960:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:49,961:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,962:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,965:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,967:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,967:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:49,969:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,970:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,970:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:49,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,974:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,975:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:49,976:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,977:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,979:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,982:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:49,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,986:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:49,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,996:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:49,998:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:50,000:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,024:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,028:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,028:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,030:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:50,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,035:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:50,036:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,036:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:50,038:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:50,040:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:51,677:INFO:Calculating mean and std
2023-06-02 18:13:51,678:INFO:Creating metrics dataframe
2023-06-02 18:13:51,891:INFO:Uploading results into container
2023-06-02 18:13:51,892:INFO:Uploading model into container now
2023-06-02 18:13:51,892:INFO:_master_model_container: 12
2023-06-02 18:13:51,893:INFO:_display_container: 2
2023-06-02 18:13:51,893:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:13:51,893:INFO:create_model() successfully completed......................................
2023-06-02 18:13:52,047:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:52,047:INFO:Creating metrics dataframe
2023-06-02 18:13:52,065:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:13:52,065:INFO:Total runtime is 0.6478639801343283 minutes
2023-06-02 18:13:52,070:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:52,070:INFO:Initializing create_model()
2023-06-02 18:13:52,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:52,070:INFO:Checking exceptions
2023-06-02 18:13:52,071:INFO:Importing libraries
2023-06-02 18:13:52,071:INFO:Copying training dataset
2023-06-02 18:13:52,075:INFO:Defining folds
2023-06-02 18:13:52,075:INFO:Declaring metric variables
2023-06-02 18:13:52,080:INFO:Importing untrained model
2023-06-02 18:13:52,086:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:13:52,094:INFO:Starting cross validation
2023-06-02 18:13:52,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:52,573:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,577:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,578:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,578:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,579:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,581:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,583:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,583:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,583:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,585:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,585:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,587:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,589:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,591:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,591:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,593:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,595:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,609:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,610:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,622:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,622:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,625:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,625:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,625:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,626:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,627:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:52,631:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:52,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,282:INFO:Calculating mean and std
2023-06-02 18:13:54,284:INFO:Creating metrics dataframe
2023-06-02 18:13:54,494:INFO:Uploading results into container
2023-06-02 18:13:54,495:INFO:Uploading model into container now
2023-06-02 18:13:54,495:INFO:_master_model_container: 13
2023-06-02 18:13:54,495:INFO:_display_container: 2
2023-06-02 18:13:54,496:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:13:54,496:INFO:create_model() successfully completed......................................
2023-06-02 18:13:54,650:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:54,650:INFO:Creating metrics dataframe
2023-06-02 18:13:54,669:INFO:Initializing Dummy Classifier
2023-06-02 18:13:54,669:INFO:Total runtime is 0.6912554105122886 minutes
2023-06-02 18:13:54,673:INFO:SubProcess create_model() called ==================================
2023-06-02 18:13:54,673:INFO:Initializing create_model()
2023-06-02 18:13:54,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE47519FA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:54,673:INFO:Checking exceptions
2023-06-02 18:13:54,674:INFO:Importing libraries
2023-06-02 18:13:54,674:INFO:Copying training dataset
2023-06-02 18:13:54,678:INFO:Defining folds
2023-06-02 18:13:54,679:INFO:Declaring metric variables
2023-06-02 18:13:54,683:INFO:Importing untrained model
2023-06-02 18:13:54,687:INFO:Dummy Classifier Imported successfully
2023-06-02 18:13:54,695:INFO:Starting cross validation
2023-06-02 18:13:54,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:13:54,968:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,971:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,974:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,974:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:54,976:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,976:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:54,978:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,980:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,986:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:54,988:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,992:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:54,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:54,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,000:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,005:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,006:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:55,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:55,008:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:55,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,017:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,020:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,020:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,023:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:55,024:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,025:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,026:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:55,028:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,034:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,038:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:55,040:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:13:55,042:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:13:56,710:INFO:Calculating mean and std
2023-06-02 18:13:56,712:INFO:Creating metrics dataframe
2023-06-02 18:13:56,933:INFO:Uploading results into container
2023-06-02 18:13:56,933:INFO:Uploading model into container now
2023-06-02 18:13:56,934:INFO:_master_model_container: 14
2023-06-02 18:13:56,934:INFO:_display_container: 2
2023-06-02 18:13:56,934:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:13:56,935:INFO:create_model() successfully completed......................................
2023-06-02 18:13:57,099:INFO:SubProcess create_model() end ==================================
2023-06-02 18:13:57,099:INFO:Creating metrics dataframe
2023-06-02 18:13:57,130:INFO:Initializing create_model()
2023-06-02 18:13:57,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CE535D7DF0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:13:57,131:INFO:Checking exceptions
2023-06-02 18:13:57,133:INFO:Importing libraries
2023-06-02 18:13:57,134:INFO:Copying training dataset
2023-06-02 18:13:57,138:INFO:Defining folds
2023-06-02 18:13:57,138:INFO:Declaring metric variables
2023-06-02 18:13:57,138:INFO:Importing untrained model
2023-06-02 18:13:57,138:INFO:Declaring custom model
2023-06-02 18:13:57,139:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:13:57,140:INFO:Cross validation set to False
2023-06-02 18:13:57,140:INFO:Fitting Model
2023-06-02 18:13:57,219:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:13:57,410:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:13:57,410:INFO:create_model() successfully completed......................................
2023-06-02 18:13:57,606:INFO:_master_model_container: 14
2023-06-02 18:13:57,606:INFO:_display_container: 2
2023-06-02 18:13:57,606:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:13:57,607:INFO:compare_models() successfully completed......................................
2023-06-02 18:13:57,877:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_19148\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:14:03,454:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\ray\tune\experiment\experiment.py:170: UserWarning: The `local_dir` argument of `Experiment is deprecated. Use `storage_path` or set the `TUNE_RESULT_DIR` environment variable instead.
  warnings.warn(

2023-06-02 18:24:11,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:24:11,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:24:11,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:24:11,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:24:12,123:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:24:24,406:INFO:PyCaret ClassificationExperiment
2023-06-02 18:24:24,406:INFO:Logging name: clf-default-name
2023-06-02 18:24:24,406:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:24:24,406:INFO:version 3.0.2
2023-06-02 18:24:24,406:INFO:Initializing setup()
2023-06-02 18:24:24,406:INFO:self.USI: 85ef
2023-06-02 18:24:24,406:INFO:self._variable_keys: {'_available_plots', 'USI', 'y_test', 'X_train', 'exp_name_log', 'n_jobs_param', 'memory', 'idx', 'target_param', 'pipeline', 'fix_imbalance', 'gpu_n_jobs_param', 'fold_shuffle_param', 'seed', 'html_param', 'fold_generator', 'data', 'X_test', 'log_plots_param', 'y', 'logging_param', 'y_train', '_ml_usecase', 'X', 'exp_id', 'fold_groups_param', 'gpu_param', 'is_multiclass'}
2023-06-02 18:24:24,406:INFO:Checking environment
2023-06-02 18:24:24,406:INFO:python_version: 3.8.16
2023-06-02 18:24:24,406:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:24:24,406:INFO:machine: AMD64
2023-06-02 18:24:24,407:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:24:24,407:INFO:Memory: svmem(total=17106501632, available=8652464128, percent=49.4, used=8454037504, free=8652464128)
2023-06-02 18:24:24,407:INFO:Physical Core: 6
2023-06-02 18:24:24,407:INFO:Logical Core: 12
2023-06-02 18:24:24,407:INFO:Checking libraries
2023-06-02 18:24:24,407:INFO:System:
2023-06-02 18:24:24,407:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:24:24,407:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:24:24,407:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:24:24,407:INFO:PyCaret required dependencies:
2023-06-02 18:24:24,408:INFO:                 pip: 23.0.1
2023-06-02 18:24:24,408:INFO:          setuptools: 67.8.0
2023-06-02 18:24:24,408:INFO:             pycaret: 3.0.2
2023-06-02 18:24:24,408:INFO:             IPython: 8.8.0
2023-06-02 18:24:24,408:INFO:          ipywidgets: 8.0.6
2023-06-02 18:24:24,408:INFO:                tqdm: 4.65.0
2023-06-02 18:24:24,408:INFO:               numpy: 1.23.5
2023-06-02 18:24:24,408:INFO:              pandas: 1.5.3
2023-06-02 18:24:24,408:INFO:              jinja2: 3.1.2
2023-06-02 18:24:24,408:INFO:               scipy: 1.10.1
2023-06-02 18:24:24,408:INFO:              joblib: 1.2.0
2023-06-02 18:24:24,409:INFO:             sklearn: 1.2.2
2023-06-02 18:24:24,409:INFO:                pyod: 1.0.9
2023-06-02 18:24:24,409:INFO:            imblearn: 0.10.1
2023-06-02 18:24:24,409:INFO:   category_encoders: 2.6.1
2023-06-02 18:24:24,409:INFO:            lightgbm: 3.3.5
2023-06-02 18:24:24,409:INFO:               numba: 0.57.0
2023-06-02 18:24:24,409:INFO:            requests: 2.31.0
2023-06-02 18:24:24,409:INFO:          matplotlib: 3.7.1
2023-06-02 18:24:24,409:INFO:          scikitplot: 0.3.7
2023-06-02 18:24:24,409:INFO:         yellowbrick: 1.5
2023-06-02 18:24:24,409:INFO:              plotly: 5.14.1
2023-06-02 18:24:24,409:INFO:             kaleido: 0.2.1
2023-06-02 18:24:24,409:INFO:         statsmodels: 0.14.0
2023-06-02 18:24:24,410:INFO:              sktime: 0.17.0
2023-06-02 18:24:24,410:INFO:               tbats: 1.1.3
2023-06-02 18:24:24,410:INFO:            pmdarima: 2.0.3
2023-06-02 18:24:24,410:INFO:              psutil: 5.9.5
2023-06-02 18:24:24,410:INFO:PyCaret optional dependencies:
2023-06-02 18:24:24,431:INFO:                shap: Not installed
2023-06-02 18:24:24,431:INFO:           interpret: Not installed
2023-06-02 18:24:24,431:INFO:                umap: Not installed
2023-06-02 18:24:24,431:INFO:    pandas_profiling: Not installed
2023-06-02 18:24:24,431:INFO:  explainerdashboard: Not installed
2023-06-02 18:24:24,431:INFO:             autoviz: Not installed
2023-06-02 18:24:24,431:INFO:           fairlearn: Not installed
2023-06-02 18:24:24,431:INFO:             xgboost: Not installed
2023-06-02 18:24:24,431:INFO:            catboost: Not installed
2023-06-02 18:24:24,431:INFO:              kmodes: Not installed
2023-06-02 18:24:24,432:INFO:             mlxtend: Not installed
2023-06-02 18:24:24,432:INFO:       statsforecast: Not installed
2023-06-02 18:24:24,432:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:24:24,432:INFO:                 ray: 2.4.0
2023-06-02 18:24:24,432:INFO:            hyperopt: Not installed
2023-06-02 18:24:24,432:INFO:              optuna: Not installed
2023-06-02 18:24:24,432:INFO:               skopt: Not installed
2023-06-02 18:24:24,432:INFO:              mlflow: Not installed
2023-06-02 18:24:24,432:INFO:              gradio: Not installed
2023-06-02 18:24:24,432:INFO:             fastapi: Not installed
2023-06-02 18:24:24,432:INFO:             uvicorn: Not installed
2023-06-02 18:24:24,432:INFO:              m2cgen: Not installed
2023-06-02 18:24:24,432:INFO:           evidently: Not installed
2023-06-02 18:24:24,432:INFO:               fugue: Not installed
2023-06-02 18:24:24,432:INFO:           streamlit: Not installed
2023-06-02 18:24:24,433:INFO:             prophet: Not installed
2023-06-02 18:24:24,433:INFO:None
2023-06-02 18:24:24,433:INFO:Set up data.
2023-06-02 18:24:24,437:INFO:Set up train/test split.
2023-06-02 18:24:24,441:INFO:Set up index.
2023-06-02 18:24:24,442:INFO:Set up folding strategy.
2023-06-02 18:24:24,442:INFO:Assigning column types.
2023-06-02 18:24:24,445:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:24:24,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:24:24,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:24:24,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:24:24,662:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:24:24,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,709:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:24:24,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:24:24,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,908:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:24:24,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:24,956:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:24:25,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,189:INFO:Preparing preprocessing pipeline...
2023-06-02 18:24:25,190:INFO:Set up label encoding.
2023-06-02 18:24:25,190:INFO:Set up simple imputation.
2023-06-02 18:24:25,193:INFO:Set up encoding of categorical features.
2023-06-02 18:24:25,264:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:24:25,276:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:24:25,276:INFO:Creating final display dataframe.
2023-06-02 18:24:25,512:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               85ef  
2023-06-02 18:24:25,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:24:25,757:INFO:setup() successfully completed in 1.54s...............
2023-06-02 18:24:25,804:INFO:Initializing compare_models()
2023-06-02 18:24:25,804:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:24:25,804:INFO:Checking exceptions
2023-06-02 18:24:25,808:INFO:Preparing display monitor
2023-06-02 18:24:25,849:INFO:Initializing Logistic Regression
2023-06-02 18:24:25,849:INFO:Total runtime is 0.0 minutes
2023-06-02 18:24:25,854:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:25,855:INFO:Initializing create_model()
2023-06-02 18:24:25,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:25,855:INFO:Checking exceptions
2023-06-02 18:24:25,856:INFO:Importing libraries
2023-06-02 18:24:25,856:INFO:Copying training dataset
2023-06-02 18:24:25,861:INFO:Defining folds
2023-06-02 18:24:25,862:INFO:Declaring metric variables
2023-06-02 18:24:25,867:INFO:Importing untrained model
2023-06-02 18:24:25,871:INFO:Logistic Regression Imported successfully
2023-06-02 18:24:25,880:INFO:Starting cross validation
2023-06-02 18:24:25,882:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:29,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,906:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:29,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:29,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,915:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:29,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,927:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:29,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,939:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,942:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:29,943:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:29,945:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:30,695:INFO:Calculating mean and std
2023-06-02 18:24:30,696:INFO:Creating metrics dataframe
2023-06-02 18:24:30,913:INFO:Uploading results into container
2023-06-02 18:24:30,914:INFO:Uploading model into container now
2023-06-02 18:24:30,914:INFO:_master_model_container: 1
2023-06-02 18:24:30,915:INFO:_display_container: 2
2023-06-02 18:24:30,916:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:24:30,916:INFO:create_model() successfully completed......................................
2023-06-02 18:24:31,097:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:31,097:INFO:Creating metrics dataframe
2023-06-02 18:24:31,111:INFO:Initializing K Neighbors Classifier
2023-06-02 18:24:31,112:INFO:Total runtime is 0.08771669069925944 minutes
2023-06-02 18:24:31,119:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:31,119:INFO:Initializing create_model()
2023-06-02 18:24:31,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:31,120:INFO:Checking exceptions
2023-06-02 18:24:31,120:INFO:Importing libraries
2023-06-02 18:24:31,120:INFO:Copying training dataset
2023-06-02 18:24:31,126:INFO:Defining folds
2023-06-02 18:24:31,126:INFO:Declaring metric variables
2023-06-02 18:24:31,132:INFO:Importing untrained model
2023-06-02 18:24:31,137:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:24:31,149:INFO:Starting cross validation
2023-06-02 18:24:31,151:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:34,070:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,072:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,074:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:34,075:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,112:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,115:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,116:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,116:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:34,119:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:34,119:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,121:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:34,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,123:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,125:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:34,126:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:34,843:INFO:Calculating mean and std
2023-06-02 18:24:34,844:INFO:Creating metrics dataframe
2023-06-02 18:24:35,056:INFO:Uploading results into container
2023-06-02 18:24:35,057:INFO:Uploading model into container now
2023-06-02 18:24:35,058:INFO:_master_model_container: 2
2023-06-02 18:24:35,058:INFO:_display_container: 2
2023-06-02 18:24:35,058:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:24:35,058:INFO:create_model() successfully completed......................................
2023-06-02 18:24:35,220:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:35,220:INFO:Creating metrics dataframe
2023-06-02 18:24:35,233:INFO:Initializing Naive Bayes
2023-06-02 18:24:35,233:INFO:Total runtime is 0.15640002489089966 minutes
2023-06-02 18:24:35,237:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:35,237:INFO:Initializing create_model()
2023-06-02 18:24:35,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:35,238:INFO:Checking exceptions
2023-06-02 18:24:35,238:INFO:Importing libraries
2023-06-02 18:24:35,238:INFO:Copying training dataset
2023-06-02 18:24:35,243:INFO:Defining folds
2023-06-02 18:24:35,244:INFO:Declaring metric variables
2023-06-02 18:24:35,248:INFO:Importing untrained model
2023-06-02 18:24:35,253:INFO:Naive Bayes Imported successfully
2023-06-02 18:24:35,261:INFO:Starting cross validation
2023-06-02 18:24:35,262:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:35,501:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,504:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,505:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:35,506:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,507:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,510:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:35,511:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,525:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,529:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:35,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:35,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:37,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:37,899:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:37,901:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:37,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:37,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:37,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:37,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:37,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,116:INFO:Calculating mean and std
2023-06-02 18:24:38,117:INFO:Creating metrics dataframe
2023-06-02 18:24:38,345:INFO:Uploading results into container
2023-06-02 18:24:38,346:INFO:Uploading model into container now
2023-06-02 18:24:38,346:INFO:_master_model_container: 3
2023-06-02 18:24:38,346:INFO:_display_container: 2
2023-06-02 18:24:38,346:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:24:38,347:INFO:create_model() successfully completed......................................
2023-06-02 18:24:38,509:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:38,510:INFO:Creating metrics dataframe
2023-06-02 18:24:38,524:INFO:Initializing Decision Tree Classifier
2023-06-02 18:24:38,524:INFO:Total runtime is 0.21124866008758544 minutes
2023-06-02 18:24:38,528:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:38,528:INFO:Initializing create_model()
2023-06-02 18:24:38,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:38,528:INFO:Checking exceptions
2023-06-02 18:24:38,528:INFO:Importing libraries
2023-06-02 18:24:38,529:INFO:Copying training dataset
2023-06-02 18:24:38,534:INFO:Defining folds
2023-06-02 18:24:38,534:INFO:Declaring metric variables
2023-06-02 18:24:38,539:INFO:Importing untrained model
2023-06-02 18:24:38,543:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:24:38,552:INFO:Starting cross validation
2023-06-02 18:24:38,553:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:38,783:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,783:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,785:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,786:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:38,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,788:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:38,788:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,788:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,790:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,791:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:38,792:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:38,792:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,793:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,798:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:38,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:38,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:39,575:INFO:Calculating mean and std
2023-06-02 18:24:39,576:INFO:Creating metrics dataframe
2023-06-02 18:24:39,786:INFO:Uploading results into container
2023-06-02 18:24:39,787:INFO:Uploading model into container now
2023-06-02 18:24:39,788:INFO:_master_model_container: 4
2023-06-02 18:24:39,788:INFO:_display_container: 2
2023-06-02 18:24:39,788:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:24:39,789:INFO:create_model() successfully completed......................................
2023-06-02 18:24:39,959:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:39,959:INFO:Creating metrics dataframe
2023-06-02 18:24:39,973:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:24:39,973:INFO:Total runtime is 0.2353986144065857 minutes
2023-06-02 18:24:39,977:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:39,978:INFO:Initializing create_model()
2023-06-02 18:24:39,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:39,978:INFO:Checking exceptions
2023-06-02 18:24:39,978:INFO:Importing libraries
2023-06-02 18:24:39,978:INFO:Copying training dataset
2023-06-02 18:24:39,983:INFO:Defining folds
2023-06-02 18:24:39,984:INFO:Declaring metric variables
2023-06-02 18:24:39,988:INFO:Importing untrained model
2023-06-02 18:24:39,993:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:24:40,001:INFO:Starting cross validation
2023-06-02 18:24:40,003:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:40,174:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:24:40,174:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,177:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,178:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:40,179:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,183:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:24:40,184:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,187:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,188:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:40,190:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,191:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:24:40,192:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:24:40,193:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,193:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,193:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:24:40,194:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,195:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,196:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:40,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:40,198:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:40,200:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:40,927:INFO:Calculating mean and std
2023-06-02 18:24:40,929:INFO:Creating metrics dataframe
2023-06-02 18:24:41,137:INFO:Uploading results into container
2023-06-02 18:24:41,138:INFO:Uploading model into container now
2023-06-02 18:24:41,139:INFO:_master_model_container: 5
2023-06-02 18:24:41,139:INFO:_display_container: 2
2023-06-02 18:24:41,140:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:24:41,140:INFO:create_model() successfully completed......................................
2023-06-02 18:24:41,298:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:41,299:INFO:Creating metrics dataframe
2023-06-02 18:24:41,313:INFO:Initializing Ridge Classifier
2023-06-02 18:24:41,313:INFO:Total runtime is 0.2577341834704081 minutes
2023-06-02 18:24:41,318:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:41,319:INFO:Initializing create_model()
2023-06-02 18:24:41,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:41,319:INFO:Checking exceptions
2023-06-02 18:24:41,320:INFO:Importing libraries
2023-06-02 18:24:41,320:INFO:Copying training dataset
2023-06-02 18:24:41,327:INFO:Defining folds
2023-06-02 18:24:41,327:INFO:Declaring metric variables
2023-06-02 18:24:41,333:INFO:Importing untrained model
2023-06-02 18:24:41,340:INFO:Ridge Classifier Imported successfully
2023-06-02 18:24:41,349:INFO:Starting cross validation
2023-06-02 18:24:41,350:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:41,509:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:24:41,511:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,514:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,517:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:41,518:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,520:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:24:41,522:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,526:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,528:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:41,529:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:24:41,530:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,530:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:24:41,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,535:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:41,536:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,536:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,539:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:41,539:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:24:41,540:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,540:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,542:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:41,544:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:41,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:42,283:INFO:Calculating mean and std
2023-06-02 18:24:42,285:INFO:Creating metrics dataframe
2023-06-02 18:24:42,499:INFO:Uploading results into container
2023-06-02 18:24:42,500:INFO:Uploading model into container now
2023-06-02 18:24:42,500:INFO:_master_model_container: 6
2023-06-02 18:24:42,500:INFO:_display_container: 2
2023-06-02 18:24:42,501:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:24:42,501:INFO:create_model() successfully completed......................................
2023-06-02 18:24:42,661:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:42,661:INFO:Creating metrics dataframe
2023-06-02 18:24:42,676:INFO:Initializing Random Forest Classifier
2023-06-02 18:24:42,677:INFO:Total runtime is 0.2804735700289408 minutes
2023-06-02 18:24:42,681:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:42,681:INFO:Initializing create_model()
2023-06-02 18:24:42,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:42,681:INFO:Checking exceptions
2023-06-02 18:24:42,681:INFO:Importing libraries
2023-06-02 18:24:42,682:INFO:Copying training dataset
2023-06-02 18:24:42,686:INFO:Defining folds
2023-06-02 18:24:42,686:INFO:Declaring metric variables
2023-06-02 18:24:42,690:INFO:Importing untrained model
2023-06-02 18:24:42,695:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:24:42,703:INFO:Starting cross validation
2023-06-02 18:24:42,705:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:43,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,636:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:43,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,641:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:43,641:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:43,643:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,643:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,647:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,651:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:43,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,659:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,663:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:43,665:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:43,666:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:44,412:INFO:Calculating mean and std
2023-06-02 18:24:44,413:INFO:Creating metrics dataframe
2023-06-02 18:24:44,635:INFO:Uploading results into container
2023-06-02 18:24:44,636:INFO:Uploading model into container now
2023-06-02 18:24:44,636:INFO:_master_model_container: 7
2023-06-02 18:24:44,636:INFO:_display_container: 2
2023-06-02 18:24:44,637:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:24:44,637:INFO:create_model() successfully completed......................................
2023-06-02 18:24:44,801:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:44,801:INFO:Creating metrics dataframe
2023-06-02 18:24:44,816:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:24:44,817:INFO:Total runtime is 0.3161327401796976 minutes
2023-06-02 18:24:44,821:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:44,821:INFO:Initializing create_model()
2023-06-02 18:24:44,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:44,821:INFO:Checking exceptions
2023-06-02 18:24:44,821:INFO:Importing libraries
2023-06-02 18:24:44,822:INFO:Copying training dataset
2023-06-02 18:24:44,827:INFO:Defining folds
2023-06-02 18:24:44,827:INFO:Declaring metric variables
2023-06-02 18:24:44,831:INFO:Importing untrained model
2023-06-02 18:24:44,836:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:24:44,843:INFO:Starting cross validation
2023-06-02 18:24:44,845:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:44,952:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:24:44,956:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:24:44,956:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:24:44,965:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:24:44,975:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:24:45,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,015:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,015:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,019:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,020:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,020:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,037:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,038:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,038:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,087:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,087:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,087:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,088:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,088:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,088:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

riors_)

2023-06-02 18:24:45,089:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,089:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,092:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:24:45,092:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:24:45,092:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:24:45,093:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,095:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,095:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,096:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,097:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,097:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:45,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:45,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:24:45,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:45,100:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,101:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,101:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,101:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,105:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,107:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:45,109:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:24:45,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:24:45,112:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:24:45,117:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:24:45,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,124:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,127:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:45,128:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:45,959:INFO:Calculating mean and std
2023-06-02 18:24:45,960:INFO:Creating metrics dataframe
2023-06-02 18:24:46,175:INFO:Uploading results into container
2023-06-02 18:24:46,176:INFO:Uploading model into container now
2023-06-02 18:24:46,176:INFO:_master_model_container: 8
2023-06-02 18:24:46,176:INFO:_display_container: 2
2023-06-02 18:24:46,177:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:24:46,177:INFO:create_model() successfully completed......................................
2023-06-02 18:24:46,355:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:46,355:INFO:Creating metrics dataframe
2023-06-02 18:24:46,371:INFO:Initializing Ada Boost Classifier
2023-06-02 18:24:46,371:INFO:Total runtime is 0.34203220605850215 minutes
2023-06-02 18:24:46,375:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:46,375:INFO:Initializing create_model()
2023-06-02 18:24:46,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:46,376:INFO:Checking exceptions
2023-06-02 18:24:46,376:INFO:Importing libraries
2023-06-02 18:24:46,376:INFO:Copying training dataset
2023-06-02 18:24:46,381:INFO:Defining folds
2023-06-02 18:24:46,381:INFO:Declaring metric variables
2023-06-02 18:24:46,386:INFO:Importing untrained model
2023-06-02 18:24:46,390:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:24:46,399:INFO:Starting cross validation
2023-06-02 18:24:46,401:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:46,971:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,975:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:46,976:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,978:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:46,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,992:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,993:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:46,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:46,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:47,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:47,002:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:47,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:47,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:47,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:47,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:47,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:47,774:INFO:Calculating mean and std
2023-06-02 18:24:47,776:INFO:Creating metrics dataframe
2023-06-02 18:24:48,000:INFO:Uploading results into container
2023-06-02 18:24:48,001:INFO:Uploading model into container now
2023-06-02 18:24:48,002:INFO:_master_model_container: 9
2023-06-02 18:24:48,002:INFO:_display_container: 2
2023-06-02 18:24:48,003:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:24:48,003:INFO:create_model() successfully completed......................................
2023-06-02 18:24:48,214:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:48,214:INFO:Creating metrics dataframe
2023-06-02 18:24:48,232:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:24:48,232:INFO:Total runtime is 0.3730497519175211 minutes
2023-06-02 18:24:48,236:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:48,237:INFO:Initializing create_model()
2023-06-02 18:24:48,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:48,237:INFO:Checking exceptions
2023-06-02 18:24:48,237:INFO:Importing libraries
2023-06-02 18:24:48,237:INFO:Copying training dataset
2023-06-02 18:24:48,242:INFO:Defining folds
2023-06-02 18:24:48,242:INFO:Declaring metric variables
2023-06-02 18:24:48,246:INFO:Importing untrained model
2023-06-02 18:24:48,251:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:24:48,260:INFO:Starting cross validation
2023-06-02 18:24:48,262:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:50,000:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:24:50,015:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:24:50,015:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:24:50,036:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:24:50,055:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:24:51,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,573:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:51,574:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,615:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:51,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,623:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,626:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,627:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:51,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,639:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,641:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:51,643:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,685:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:51,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:51,689:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:52,381:INFO:Calculating mean and std
2023-06-02 18:24:52,383:INFO:Creating metrics dataframe
2023-06-02 18:24:52,608:INFO:Uploading results into container
2023-06-02 18:24:52,609:INFO:Uploading model into container now
2023-06-02 18:24:52,609:INFO:_master_model_container: 10
2023-06-02 18:24:52,610:INFO:_display_container: 2
2023-06-02 18:24:52,610:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:24:52,610:INFO:create_model() successfully completed......................................
2023-06-02 18:24:52,769:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:52,769:INFO:Creating metrics dataframe
2023-06-02 18:24:52,790:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:24:52,790:INFO:Total runtime is 0.4490212678909301 minutes
2023-06-02 18:24:52,795:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:52,795:INFO:Initializing create_model()
2023-06-02 18:24:52,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:52,795:INFO:Checking exceptions
2023-06-02 18:24:52,796:INFO:Importing libraries
2023-06-02 18:24:52,796:INFO:Copying training dataset
2023-06-02 18:24:52,800:INFO:Defining folds
2023-06-02 18:24:52,801:INFO:Declaring metric variables
2023-06-02 18:24:52,805:INFO:Importing untrained model
2023-06-02 18:24:52,809:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:24:52,817:INFO:Starting cross validation
2023-06-02 18:24:52,819:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:53,036:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,039:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,040:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,042:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:53,042:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,042:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,042:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,043:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:53,044:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,044:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,046:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:53,047:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,053:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,057:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,058:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:53,059:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,063:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,066:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,068:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:53,070:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:53,840:INFO:Calculating mean and std
2023-06-02 18:24:53,842:INFO:Creating metrics dataframe
2023-06-02 18:24:54,062:INFO:Uploading results into container
2023-06-02 18:24:54,063:INFO:Uploading model into container now
2023-06-02 18:24:54,063:INFO:_master_model_container: 11
2023-06-02 18:24:54,063:INFO:_display_container: 2
2023-06-02 18:24:54,064:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:24:54,064:INFO:create_model() successfully completed......................................
2023-06-02 18:24:54,223:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:54,223:INFO:Creating metrics dataframe
2023-06-02 18:24:54,241:INFO:Initializing Extra Trees Classifier
2023-06-02 18:24:54,241:INFO:Total runtime is 0.47319733301798494 minutes
2023-06-02 18:24:54,245:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:54,245:INFO:Initializing create_model()
2023-06-02 18:24:54,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:54,246:INFO:Checking exceptions
2023-06-02 18:24:54,246:INFO:Importing libraries
2023-06-02 18:24:54,246:INFO:Copying training dataset
2023-06-02 18:24:54,251:INFO:Defining folds
2023-06-02 18:24:54,251:INFO:Declaring metric variables
2023-06-02 18:24:54,256:INFO:Importing untrained model
2023-06-02 18:24:54,260:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:24:54,267:INFO:Starting cross validation
2023-06-02 18:24:54,270:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:55,117:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:55,124:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,132:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,135:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,137:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:55,138:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,150:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,150:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,153:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,153:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,155:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:55,155:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:55,156:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,156:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,171:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,176:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,178:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:55,179:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:55,935:INFO:Calculating mean and std
2023-06-02 18:24:55,936:INFO:Creating metrics dataframe
2023-06-02 18:24:56,170:INFO:Uploading results into container
2023-06-02 18:24:56,171:INFO:Uploading model into container now
2023-06-02 18:24:56,172:INFO:_master_model_container: 12
2023-06-02 18:24:56,172:INFO:_display_container: 2
2023-06-02 18:24:56,172:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:24:56,173:INFO:create_model() successfully completed......................................
2023-06-02 18:24:56,335:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:56,335:INFO:Creating metrics dataframe
2023-06-02 18:24:56,353:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:24:56,353:INFO:Total runtime is 0.5084011236826578 minutes
2023-06-02 18:24:56,357:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:56,358:INFO:Initializing create_model()
2023-06-02 18:24:56,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:56,358:INFO:Checking exceptions
2023-06-02 18:24:56,358:INFO:Importing libraries
2023-06-02 18:24:56,358:INFO:Copying training dataset
2023-06-02 18:24:56,363:INFO:Defining folds
2023-06-02 18:24:56,363:INFO:Declaring metric variables
2023-06-02 18:24:56,367:INFO:Importing untrained model
2023-06-02 18:24:56,372:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:24:56,379:INFO:Starting cross validation
2023-06-02 18:24:56,381:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:56,706:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,709:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,710:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:56,711:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,722:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:56,729:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,739:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,743:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,745:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:56,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,749:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,752:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:56,756:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:56,757:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:56,757:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:57,531:INFO:Calculating mean and std
2023-06-02 18:24:57,533:INFO:Creating metrics dataframe
2023-06-02 18:24:57,757:INFO:Uploading results into container
2023-06-02 18:24:57,758:INFO:Uploading model into container now
2023-06-02 18:24:57,759:INFO:_master_model_container: 13
2023-06-02 18:24:57,759:INFO:_display_container: 2
2023-06-02 18:24:57,760:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:24:57,760:INFO:create_model() successfully completed......................................
2023-06-02 18:24:57,921:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:57,921:INFO:Creating metrics dataframe
2023-06-02 18:24:57,939:INFO:Initializing Dummy Classifier
2023-06-02 18:24:57,939:INFO:Total runtime is 0.5348346273104349 minutes
2023-06-02 18:24:57,943:INFO:SubProcess create_model() called ==================================
2023-06-02 18:24:57,944:INFO:Initializing create_model()
2023-06-02 18:24:57,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71F86070>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:57,944:INFO:Checking exceptions
2023-06-02 18:24:57,944:INFO:Importing libraries
2023-06-02 18:24:57,944:INFO:Copying training dataset
2023-06-02 18:24:57,949:INFO:Defining folds
2023-06-02 18:24:57,949:INFO:Declaring metric variables
2023-06-02 18:24:57,953:INFO:Importing untrained model
2023-06-02 18:24:57,958:INFO:Dummy Classifier Imported successfully
2023-06-02 18:24:57,966:INFO:Starting cross validation
2023-06-02 18:24:57,968:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:24:58,189:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,191:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,192:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,192:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,194:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:58,194:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,195:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,196:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:58,196:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,201:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:58,202:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,205:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,208:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:58,210:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:24:58,211:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:24:59,023:INFO:Calculating mean and std
2023-06-02 18:24:59,024:INFO:Creating metrics dataframe
2023-06-02 18:24:59,250:INFO:Uploading results into container
2023-06-02 18:24:59,251:INFO:Uploading model into container now
2023-06-02 18:24:59,252:INFO:_master_model_container: 14
2023-06-02 18:24:59,252:INFO:_display_container: 2
2023-06-02 18:24:59,252:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:24:59,253:INFO:create_model() successfully completed......................................
2023-06-02 18:24:59,425:INFO:SubProcess create_model() end ==================================
2023-06-02 18:24:59,425:INFO:Creating metrics dataframe
2023-06-02 18:24:59,455:INFO:Initializing create_model()
2023-06-02 18:24:59,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:59,456:INFO:Checking exceptions
2023-06-02 18:24:59,458:INFO:Importing libraries
2023-06-02 18:24:59,458:INFO:Copying training dataset
2023-06-02 18:24:59,462:INFO:Defining folds
2023-06-02 18:24:59,462:INFO:Declaring metric variables
2023-06-02 18:24:59,462:INFO:Importing untrained model
2023-06-02 18:24:59,462:INFO:Declaring custom model
2023-06-02 18:24:59,463:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:24:59,464:INFO:Cross validation set to False
2023-06-02 18:24:59,465:INFO:Fitting Model
2023-06-02 18:24:59,544:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:24:59,748:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:24:59,748:INFO:create_model() successfully completed......................................
2023-06-02 18:24:59,919:INFO:Initializing create_model()
2023-06-02 18:24:59,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:24:59,919:INFO:Checking exceptions
2023-06-02 18:24:59,921:INFO:Importing libraries
2023-06-02 18:24:59,921:INFO:Copying training dataset
2023-06-02 18:24:59,925:INFO:Defining folds
2023-06-02 18:24:59,925:INFO:Declaring metric variables
2023-06-02 18:24:59,925:INFO:Importing untrained model
2023-06-02 18:24:59,925:INFO:Declaring custom model
2023-06-02 18:24:59,926:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:24:59,927:INFO:Cross validation set to False
2023-06-02 18:24:59,927:INFO:Fitting Model
2023-06-02 18:25:00,208:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:25:00,208:INFO:create_model() successfully completed......................................
2023-06-02 18:25:00,375:INFO:Initializing create_model()
2023-06-02 18:25:00,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:25:00,376:INFO:Checking exceptions
2023-06-02 18:25:00,378:INFO:Importing libraries
2023-06-02 18:25:00,378:INFO:Copying training dataset
2023-06-02 18:25:00,382:INFO:Defining folds
2023-06-02 18:25:00,382:INFO:Declaring metric variables
2023-06-02 18:25:00,382:INFO:Importing untrained model
2023-06-02 18:25:00,382:INFO:Declaring custom model
2023-06-02 18:25:00,382:INFO:Naive Bayes Imported successfully
2023-06-02 18:25:00,384:INFO:Cross validation set to False
2023-06-02 18:25:00,384:INFO:Fitting Model
2023-06-02 18:25:00,644:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:25:00,644:INFO:create_model() successfully completed......................................
2023-06-02 18:25:00,821:INFO:Initializing create_model()
2023-06-02 18:25:00,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:25:00,821:INFO:Checking exceptions
2023-06-02 18:25:00,824:INFO:Importing libraries
2023-06-02 18:25:00,824:INFO:Copying training dataset
2023-06-02 18:25:00,827:INFO:Defining folds
2023-06-02 18:25:00,827:INFO:Declaring metric variables
2023-06-02 18:25:00,827:INFO:Importing untrained model
2023-06-02 18:25:00,828:INFO:Declaring custom model
2023-06-02 18:25:00,828:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:25:00,830:INFO:Cross validation set to False
2023-06-02 18:25:00,830:INFO:Fitting Model
2023-06-02 18:25:01,090:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:25:01,091:INFO:create_model() successfully completed......................................
2023-06-02 18:25:01,258:INFO:Initializing create_model()
2023-06-02 18:25:01,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:25:01,258:INFO:Checking exceptions
2023-06-02 18:25:01,261:INFO:Importing libraries
2023-06-02 18:25:01,261:INFO:Copying training dataset
2023-06-02 18:25:01,265:INFO:Defining folds
2023-06-02 18:25:01,266:INFO:Declaring metric variables
2023-06-02 18:25:01,266:INFO:Importing untrained model
2023-06-02 18:25:01,266:INFO:Declaring custom model
2023-06-02 18:25:01,267:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:25:01,269:INFO:Cross validation set to False
2023-06-02 18:25:01,269:INFO:Fitting Model
2023-06-02 18:25:01,913:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:25:01,914:INFO:create_model() successfully completed......................................
2023-06-02 18:25:02,115:INFO:_master_model_container: 14
2023-06-02 18:25:02,115:INFO:_display_container: 2
2023-06-02 18:25:02,117:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:25:02,117:INFO:compare_models() successfully completed......................................
2023-06-02 18:25:02,322:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_20232\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:28:36,466:INFO:Initializing compare_models()
2023-06-02 18:28:36,466:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:28:36,466:INFO:Checking exceptions
2023-06-02 18:28:36,469:INFO:Preparing display monitor
2023-06-02 18:28:36,497:INFO:Initializing Logistic Regression
2023-06-02 18:28:36,497:INFO:Total runtime is 1.6673405965169272e-05 minutes
2023-06-02 18:28:36,501:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:36,501:INFO:Initializing create_model()
2023-06-02 18:28:36,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:36,502:INFO:Checking exceptions
2023-06-02 18:28:36,502:INFO:Importing libraries
2023-06-02 18:28:36,503:INFO:Copying training dataset
2023-06-02 18:28:36,507:INFO:Defining folds
2023-06-02 18:28:36,507:INFO:Declaring metric variables
2023-06-02 18:28:36,512:INFO:Importing untrained model
2023-06-02 18:28:36,516:INFO:Logistic Regression Imported successfully
2023-06-02 18:28:36,527:INFO:Starting cross validation
2023-06-02 18:28:36,528:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:36,780:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:36,785:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,785:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,788:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,789:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:36,790:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,794:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,797:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,799:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:36,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,812:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,815:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:36,817:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:36,817:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:36,819:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:37,589:INFO:Calculating mean and std
2023-06-02 18:28:37,591:INFO:Creating metrics dataframe
2023-06-02 18:28:37,817:INFO:Uploading results into container
2023-06-02 18:28:37,818:INFO:Uploading model into container now
2023-06-02 18:28:37,818:INFO:_master_model_container: 15
2023-06-02 18:28:37,818:INFO:_display_container: 3
2023-06-02 18:28:37,819:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:28:37,819:INFO:create_model() successfully completed......................................
2023-06-02 18:28:37,984:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:37,985:INFO:Creating metrics dataframe
2023-06-02 18:28:37,996:INFO:Initializing K Neighbors Classifier
2023-06-02 18:28:37,996:INFO:Total runtime is 0.025003751118977863 minutes
2023-06-02 18:28:38,000:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:38,000:INFO:Initializing create_model()
2023-06-02 18:28:38,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:38,000:INFO:Checking exceptions
2023-06-02 18:28:38,000:INFO:Importing libraries
2023-06-02 18:28:38,000:INFO:Copying training dataset
2023-06-02 18:28:38,005:INFO:Defining folds
2023-06-02 18:28:38,005:INFO:Declaring metric variables
2023-06-02 18:28:38,010:INFO:Importing untrained model
2023-06-02 18:28:38,014:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:28:38,022:INFO:Starting cross validation
2023-06-02 18:28:38,024:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:38,274:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,277:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:38,279:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,279:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,280:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,281:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,281:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,282:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:38,283:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:38,283:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,285:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:38,286:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,311:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,314:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:38,316:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:38,318:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,083:INFO:Calculating mean and std
2023-06-02 18:28:39,085:INFO:Creating metrics dataframe
2023-06-02 18:28:39,312:INFO:Uploading results into container
2023-06-02 18:28:39,313:INFO:Uploading model into container now
2023-06-02 18:28:39,314:INFO:_master_model_container: 16
2023-06-02 18:28:39,314:INFO:_display_container: 3
2023-06-02 18:28:39,314:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:28:39,314:INFO:create_model() successfully completed......................................
2023-06-02 18:28:39,490:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:39,490:INFO:Creating metrics dataframe
2023-06-02 18:28:39,502:INFO:Initializing Naive Bayes
2023-06-02 18:28:39,502:INFO:Total runtime is 0.050100580851236975 minutes
2023-06-02 18:28:39,506:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:39,507:INFO:Initializing create_model()
2023-06-02 18:28:39,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:39,507:INFO:Checking exceptions
2023-06-02 18:28:39,507:INFO:Importing libraries
2023-06-02 18:28:39,507:INFO:Copying training dataset
2023-06-02 18:28:39,512:INFO:Defining folds
2023-06-02 18:28:39,512:INFO:Declaring metric variables
2023-06-02 18:28:39,516:INFO:Importing untrained model
2023-06-02 18:28:39,521:INFO:Naive Bayes Imported successfully
2023-06-02 18:28:39,529:INFO:Starting cross validation
2023-06-02 18:28:39,531:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:39,747:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,748:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,749:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,751:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:39,752:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:39,754:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,756:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,759:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,760:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:39,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,766:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:39,767:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,767:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:39,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:39,771:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:40,556:INFO:Calculating mean and std
2023-06-02 18:28:40,557:INFO:Creating metrics dataframe
2023-06-02 18:28:40,775:INFO:Uploading results into container
2023-06-02 18:28:40,776:INFO:Uploading model into container now
2023-06-02 18:28:40,777:INFO:_master_model_container: 17
2023-06-02 18:28:40,777:INFO:_display_container: 3
2023-06-02 18:28:40,777:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:28:40,777:INFO:create_model() successfully completed......................................
2023-06-02 18:28:40,951:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:40,951:INFO:Creating metrics dataframe
2023-06-02 18:28:40,965:INFO:Initializing Decision Tree Classifier
2023-06-02 18:28:40,965:INFO:Total runtime is 0.07448240915934244 minutes
2023-06-02 18:28:40,971:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:40,971:INFO:Initializing create_model()
2023-06-02 18:28:40,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:40,972:INFO:Checking exceptions
2023-06-02 18:28:40,972:INFO:Importing libraries
2023-06-02 18:28:40,972:INFO:Copying training dataset
2023-06-02 18:28:40,976:INFO:Defining folds
2023-06-02 18:28:40,977:INFO:Declaring metric variables
2023-06-02 18:28:40,982:INFO:Importing untrained model
2023-06-02 18:28:40,987:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:28:40,996:INFO:Starting cross validation
2023-06-02 18:28:40,997:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:41,208:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,210:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,211:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,212:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:41,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,215:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,217:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:41,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:41,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,226:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:41,229:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,245:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:41,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:41,248:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,006:INFO:Calculating mean and std
2023-06-02 18:28:42,008:INFO:Creating metrics dataframe
2023-06-02 18:28:42,229:INFO:Uploading results into container
2023-06-02 18:28:42,230:INFO:Uploading model into container now
2023-06-02 18:28:42,230:INFO:_master_model_container: 18
2023-06-02 18:28:42,230:INFO:_display_container: 3
2023-06-02 18:28:42,231:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:28:42,231:INFO:create_model() successfully completed......................................
2023-06-02 18:28:42,390:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:42,390:INFO:Creating metrics dataframe
2023-06-02 18:28:42,403:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:28:42,403:INFO:Total runtime is 0.09845255613327025 minutes
2023-06-02 18:28:42,407:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:42,407:INFO:Initializing create_model()
2023-06-02 18:28:42,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:42,409:INFO:Checking exceptions
2023-06-02 18:28:42,409:INFO:Importing libraries
2023-06-02 18:28:42,409:INFO:Copying training dataset
2023-06-02 18:28:42,414:INFO:Defining folds
2023-06-02 18:28:42,414:INFO:Declaring metric variables
2023-06-02 18:28:42,418:INFO:Importing untrained model
2023-06-02 18:28:42,422:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:28:42,430:INFO:Starting cross validation
2023-06-02 18:28:42,432:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:42,598:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:28:42,599:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,601:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,602:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:28:42,603:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,603:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:42,604:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,605:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,607:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:42,608:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:28:42,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:28:42,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:42,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:28:42,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:42,622:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:42,622:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:42,623:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,398:INFO:Calculating mean and std
2023-06-02 18:28:43,400:INFO:Creating metrics dataframe
2023-06-02 18:28:43,624:INFO:Uploading results into container
2023-06-02 18:28:43,625:INFO:Uploading model into container now
2023-06-02 18:28:43,625:INFO:_master_model_container: 19
2023-06-02 18:28:43,625:INFO:_display_container: 3
2023-06-02 18:28:43,626:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:28:43,626:INFO:create_model() successfully completed......................................
2023-06-02 18:28:43,785:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:43,786:INFO:Creating metrics dataframe
2023-06-02 18:28:43,799:INFO:Initializing Ridge Classifier
2023-06-02 18:28:43,799:INFO:Total runtime is 0.1217152714729309 minutes
2023-06-02 18:28:43,803:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:43,803:INFO:Initializing create_model()
2023-06-02 18:28:43,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:43,804:INFO:Checking exceptions
2023-06-02 18:28:43,804:INFO:Importing libraries
2023-06-02 18:28:43,804:INFO:Copying training dataset
2023-06-02 18:28:43,808:INFO:Defining folds
2023-06-02 18:28:43,808:INFO:Declaring metric variables
2023-06-02 18:28:43,813:INFO:Importing untrained model
2023-06-02 18:28:43,817:INFO:Ridge Classifier Imported successfully
2023-06-02 18:28:43,825:INFO:Starting cross validation
2023-06-02 18:28:43,827:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:43,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:28:43,985:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,987:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:28:43,987:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,988:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:43,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,993:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:43,995:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:28:43,998:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:43,999:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:28:44,000:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,002:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:44,003:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,003:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:44,005:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,006:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:28:44,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,010:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:44,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:44,791:INFO:Calculating mean and std
2023-06-02 18:28:44,793:INFO:Creating metrics dataframe
2023-06-02 18:28:45,021:INFO:Uploading results into container
2023-06-02 18:28:45,022:INFO:Uploading model into container now
2023-06-02 18:28:45,022:INFO:_master_model_container: 20
2023-06-02 18:28:45,022:INFO:_display_container: 3
2023-06-02 18:28:45,023:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:28:45,023:INFO:create_model() successfully completed......................................
2023-06-02 18:28:45,181:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:45,182:INFO:Creating metrics dataframe
2023-06-02 18:28:45,199:INFO:Initializing Random Forest Classifier
2023-06-02 18:28:45,199:INFO:Total runtime is 0.1450511892636617 minutes
2023-06-02 18:28:45,203:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:45,204:INFO:Initializing create_model()
2023-06-02 18:28:45,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:45,204:INFO:Checking exceptions
2023-06-02 18:28:45,204:INFO:Importing libraries
2023-06-02 18:28:45,205:INFO:Copying training dataset
2023-06-02 18:28:45,209:INFO:Defining folds
2023-06-02 18:28:45,209:INFO:Declaring metric variables
2023-06-02 18:28:45,214:INFO:Importing untrained model
2023-06-02 18:28:45,218:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:28:45,226:INFO:Starting cross validation
2023-06-02 18:28:45,228:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:45,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,773:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,774:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,775:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:45,776:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:45,777:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,778:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,781:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,786:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:45,786:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:45,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:45,806:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:45,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:46,565:INFO:Calculating mean and std
2023-06-02 18:28:46,566:INFO:Creating metrics dataframe
2023-06-02 18:28:46,796:INFO:Uploading results into container
2023-06-02 18:28:46,796:INFO:Uploading model into container now
2023-06-02 18:28:46,797:INFO:_master_model_container: 21
2023-06-02 18:28:46,797:INFO:_display_container: 3
2023-06-02 18:28:46,798:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:28:46,798:INFO:create_model() successfully completed......................................
2023-06-02 18:28:46,959:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:46,959:INFO:Creating metrics dataframe
2023-06-02 18:28:46,974:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:28:46,974:INFO:Total runtime is 0.17462159395217897 minutes
2023-06-02 18:28:46,978:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:46,978:INFO:Initializing create_model()
2023-06-02 18:28:46,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:46,979:INFO:Checking exceptions
2023-06-02 18:28:46,979:INFO:Importing libraries
2023-06-02 18:28:46,979:INFO:Copying training dataset
2023-06-02 18:28:46,984:INFO:Defining folds
2023-06-02 18:28:46,984:INFO:Declaring metric variables
2023-06-02 18:28:46,988:INFO:Importing untrained model
2023-06-02 18:28:46,992:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:28:47,001:INFO:Starting cross validation
2023-06-02 18:28:47,002:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:47,105:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:28:47,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:28:47,112:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:28:47,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:28:47,123:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:28:47,157:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,157:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,157:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,162:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,162:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,162:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,163:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,163:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,163:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,170:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,171:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,171:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,174:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,175:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,175:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,214:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,214:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,214:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,216:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:28:47,217:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:28:47,217:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,219:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,219:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,220:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,222:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:28:47,222:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:47,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,224:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,225:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:28:47,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:47,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:28:47,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:28:47,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:28:47,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,229:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:28:47,230:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,231:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:47,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:47,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:47,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,035:INFO:Calculating mean and std
2023-06-02 18:28:48,036:INFO:Creating metrics dataframe
2023-06-02 18:28:48,263:INFO:Uploading results into container
2023-06-02 18:28:48,264:INFO:Uploading model into container now
2023-06-02 18:28:48,264:INFO:_master_model_container: 22
2023-06-02 18:28:48,264:INFO:_display_container: 3
2023-06-02 18:28:48,265:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:28:48,265:INFO:create_model() successfully completed......................................
2023-06-02 18:28:48,440:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:48,441:INFO:Creating metrics dataframe
2023-06-02 18:28:48,456:INFO:Initializing Ada Boost Classifier
2023-06-02 18:28:48,456:INFO:Total runtime is 0.19932985703150433 minutes
2023-06-02 18:28:48,461:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:48,461:INFO:Initializing create_model()
2023-06-02 18:28:48,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:48,461:INFO:Checking exceptions
2023-06-02 18:28:48,462:INFO:Importing libraries
2023-06-02 18:28:48,462:INFO:Copying training dataset
2023-06-02 18:28:48,466:INFO:Defining folds
2023-06-02 18:28:48,467:INFO:Declaring metric variables
2023-06-02 18:28:48,471:INFO:Importing untrained model
2023-06-02 18:28:48,475:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:28:48,483:INFO:Starting cross validation
2023-06-02 18:28:48,485:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:48,832:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,835:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,836:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:48,837:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,839:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,842:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,843:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:48,845:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,847:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,849:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,849:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,851:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:48,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,853:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:48,854:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,855:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:48,856:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:48,857:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:49,646:INFO:Calculating mean and std
2023-06-02 18:28:49,647:INFO:Creating metrics dataframe
2023-06-02 18:28:49,878:INFO:Uploading results into container
2023-06-02 18:28:49,879:INFO:Uploading model into container now
2023-06-02 18:28:49,880:INFO:_master_model_container: 23
2023-06-02 18:28:49,880:INFO:_display_container: 3
2023-06-02 18:28:49,880:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:28:49,880:INFO:create_model() successfully completed......................................
2023-06-02 18:28:50,050:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:50,051:INFO:Creating metrics dataframe
2023-06-02 18:28:50,067:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:28:50,068:INFO:Total runtime is 0.22619142929712932 minutes
2023-06-02 18:28:50,071:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:50,071:INFO:Initializing create_model()
2023-06-02 18:28:50,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:50,072:INFO:Checking exceptions
2023-06-02 18:28:50,072:INFO:Importing libraries
2023-06-02 18:28:50,072:INFO:Copying training dataset
2023-06-02 18:28:50,078:INFO:Defining folds
2023-06-02 18:28:50,078:INFO:Declaring metric variables
2023-06-02 18:28:50,082:INFO:Importing untrained model
2023-06-02 18:28:50,087:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:28:50,095:INFO:Starting cross validation
2023-06-02 18:28:50,097:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:52,025:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,028:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,030:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:52,031:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,056:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,058:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,059:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,062:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:52,063:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,064:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,065:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:52,067:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,071:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,075:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,077:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:52,079:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,091:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,095:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,097:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:52,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:52,871:INFO:Calculating mean and std
2023-06-02 18:28:52,872:INFO:Creating metrics dataframe
2023-06-02 18:28:53,105:INFO:Uploading results into container
2023-06-02 18:28:53,106:INFO:Uploading model into container now
2023-06-02 18:28:53,107:INFO:_master_model_container: 24
2023-06-02 18:28:53,107:INFO:_display_container: 3
2023-06-02 18:28:53,108:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:28:53,108:INFO:create_model() successfully completed......................................
2023-06-02 18:28:53,274:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:53,274:INFO:Creating metrics dataframe
2023-06-02 18:28:53,292:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:28:53,292:INFO:Total runtime is 0.27992231051127114 minutes
2023-06-02 18:28:53,297:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:53,298:INFO:Initializing create_model()
2023-06-02 18:28:53,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:53,298:INFO:Checking exceptions
2023-06-02 18:28:53,298:INFO:Importing libraries
2023-06-02 18:28:53,298:INFO:Copying training dataset
2023-06-02 18:28:53,303:INFO:Defining folds
2023-06-02 18:28:53,303:INFO:Declaring metric variables
2023-06-02 18:28:53,308:INFO:Importing untrained model
2023-06-02 18:28:53,313:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:28:53,320:INFO:Starting cross validation
2023-06-02 18:28:53,322:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:53,538:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,541:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,544:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:53,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,549:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,553:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,555:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:53,557:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,566:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,568:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:53,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,572:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,574:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,575:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:53,578:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,579:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:53,584:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:53,585:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:54,377:INFO:Calculating mean and std
2023-06-02 18:28:54,380:INFO:Creating metrics dataframe
2023-06-02 18:28:54,606:INFO:Uploading results into container
2023-06-02 18:28:54,607:INFO:Uploading model into container now
2023-06-02 18:28:54,608:INFO:_master_model_container: 25
2023-06-02 18:28:54,608:INFO:_display_container: 3
2023-06-02 18:28:54,608:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:28:54,609:INFO:create_model() successfully completed......................................
2023-06-02 18:28:54,767:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:54,768:INFO:Creating metrics dataframe
2023-06-02 18:28:54,788:INFO:Initializing Extra Trees Classifier
2023-06-02 18:28:54,788:INFO:Total runtime is 0.3048590699831645 minutes
2023-06-02 18:28:54,794:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:54,794:INFO:Initializing create_model()
2023-06-02 18:28:54,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:54,794:INFO:Checking exceptions
2023-06-02 18:28:54,795:INFO:Importing libraries
2023-06-02 18:28:54,795:INFO:Copying training dataset
2023-06-02 18:28:54,799:INFO:Defining folds
2023-06-02 18:28:54,799:INFO:Declaring metric variables
2023-06-02 18:28:54,803:INFO:Importing untrained model
2023-06-02 18:28:54,807:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:28:54,815:INFO:Starting cross validation
2023-06-02 18:28:54,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:55,363:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,366:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,367:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:55,368:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,370:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,372:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,373:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:55,374:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,374:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,375:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,376:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:55,377:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,377:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,379:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:55,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,385:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:55,389:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:55,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,164:INFO:Calculating mean and std
2023-06-02 18:28:56,165:INFO:Creating metrics dataframe
2023-06-02 18:28:56,387:INFO:Uploading results into container
2023-06-02 18:28:56,388:INFO:Uploading model into container now
2023-06-02 18:28:56,388:INFO:_master_model_container: 26
2023-06-02 18:28:56,388:INFO:_display_container: 3
2023-06-02 18:28:56,389:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:28:56,389:INFO:create_model() successfully completed......................................
2023-06-02 18:28:56,556:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:56,557:INFO:Creating metrics dataframe
2023-06-02 18:28:56,575:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:28:56,575:INFO:Total runtime is 0.3346392432848613 minutes
2023-06-02 18:28:56,579:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:56,579:INFO:Initializing create_model()
2023-06-02 18:28:56,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:56,580:INFO:Checking exceptions
2023-06-02 18:28:56,580:INFO:Importing libraries
2023-06-02 18:28:56,580:INFO:Copying training dataset
2023-06-02 18:28:56,585:INFO:Defining folds
2023-06-02 18:28:56,585:INFO:Declaring metric variables
2023-06-02 18:28:56,590:INFO:Importing untrained model
2023-06-02 18:28:56,595:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:28:56,604:INFO:Starting cross validation
2023-06-02 18:28:56,606:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:56,927:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,931:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:56,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,944:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,947:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,949:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:56,950:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,951:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,955:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,955:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,957:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:56,958:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,958:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,959:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,959:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:56,961:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,961:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:56,963:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:56,964:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:57,728:INFO:Calculating mean and std
2023-06-02 18:28:57,730:INFO:Creating metrics dataframe
2023-06-02 18:28:57,957:INFO:Uploading results into container
2023-06-02 18:28:57,958:INFO:Uploading model into container now
2023-06-02 18:28:57,958:INFO:_master_model_container: 27
2023-06-02 18:28:57,958:INFO:_display_container: 3
2023-06-02 18:28:57,959:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:28:57,959:INFO:create_model() successfully completed......................................
2023-06-02 18:28:58,125:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:58,125:INFO:Creating metrics dataframe
2023-06-02 18:28:58,144:INFO:Initializing Dummy Classifier
2023-06-02 18:28:58,144:INFO:Total runtime is 0.3607983390490214 minutes
2023-06-02 18:28:58,148:INFO:SubProcess create_model() called ==================================
2023-06-02 18:28:58,149:INFO:Initializing create_model()
2023-06-02 18:28:58,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF71D53C70>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:58,149:INFO:Checking exceptions
2023-06-02 18:28:58,149:INFO:Importing libraries
2023-06-02 18:28:58,149:INFO:Copying training dataset
2023-06-02 18:28:58,154:INFO:Defining folds
2023-06-02 18:28:58,154:INFO:Declaring metric variables
2023-06-02 18:28:58,158:INFO:Importing untrained model
2023-06-02 18:28:58,163:INFO:Dummy Classifier Imported successfully
2023-06-02 18:28:58,171:INFO:Starting cross validation
2023-06-02 18:28:58,173:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:28:58,384:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,387:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,389:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:58,390:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,392:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,393:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,394:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,395:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,395:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:58,396:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,396:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,396:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:58,397:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:58,398:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,398:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,407:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,409:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:58,411:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:28:58,412:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:28:59,175:INFO:Calculating mean and std
2023-06-02 18:28:59,177:INFO:Creating metrics dataframe
2023-06-02 18:28:59,399:INFO:Uploading results into container
2023-06-02 18:28:59,399:INFO:Uploading model into container now
2023-06-02 18:28:59,400:INFO:_master_model_container: 28
2023-06-02 18:28:59,400:INFO:_display_container: 3
2023-06-02 18:28:59,400:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:28:59,401:INFO:create_model() successfully completed......................................
2023-06-02 18:28:59,560:INFO:SubProcess create_model() end ==================================
2023-06-02 18:28:59,560:INFO:Creating metrics dataframe
2023-06-02 18:28:59,590:INFO:Initializing create_model()
2023-06-02 18:28:59,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:28:59,590:INFO:Checking exceptions
2023-06-02 18:28:59,593:INFO:Importing libraries
2023-06-02 18:28:59,593:INFO:Copying training dataset
2023-06-02 18:28:59,598:INFO:Defining folds
2023-06-02 18:28:59,598:INFO:Declaring metric variables
2023-06-02 18:28:59,598:INFO:Importing untrained model
2023-06-02 18:28:59,599:INFO:Declaring custom model
2023-06-02 18:28:59,599:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:28:59,600:INFO:Cross validation set to False
2023-06-02 18:28:59,600:INFO:Fitting Model
2023-06-02 18:28:59,677:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:28:59,861:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:28:59,862:INFO:create_model() successfully completed......................................
2023-06-02 18:29:00,034:INFO:Initializing create_model()
2023-06-02 18:29:00,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:29:00,035:INFO:Checking exceptions
2023-06-02 18:29:00,037:INFO:Importing libraries
2023-06-02 18:29:00,037:INFO:Copying training dataset
2023-06-02 18:29:00,041:INFO:Defining folds
2023-06-02 18:29:00,041:INFO:Declaring metric variables
2023-06-02 18:29:00,041:INFO:Importing untrained model
2023-06-02 18:29:00,041:INFO:Declaring custom model
2023-06-02 18:29:00,042:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:29:00,043:INFO:Cross validation set to False
2023-06-02 18:29:00,043:INFO:Fitting Model
2023-06-02 18:29:00,315:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:29:00,315:INFO:create_model() successfully completed......................................
2023-06-02 18:29:00,480:INFO:Initializing create_model()
2023-06-02 18:29:00,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:29:00,481:INFO:Checking exceptions
2023-06-02 18:29:00,483:INFO:Importing libraries
2023-06-02 18:29:00,483:INFO:Copying training dataset
2023-06-02 18:29:00,488:INFO:Defining folds
2023-06-02 18:29:00,488:INFO:Declaring metric variables
2023-06-02 18:29:00,489:INFO:Importing untrained model
2023-06-02 18:29:00,489:INFO:Declaring custom model
2023-06-02 18:29:00,489:INFO:Naive Bayes Imported successfully
2023-06-02 18:29:00,491:INFO:Cross validation set to False
2023-06-02 18:29:00,491:INFO:Fitting Model
2023-06-02 18:29:00,758:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:29:00,759:INFO:create_model() successfully completed......................................
2023-06-02 18:29:00,928:INFO:Initializing create_model()
2023-06-02 18:29:00,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:29:00,929:INFO:Checking exceptions
2023-06-02 18:29:00,931:INFO:Importing libraries
2023-06-02 18:29:00,931:INFO:Copying training dataset
2023-06-02 18:29:00,935:INFO:Defining folds
2023-06-02 18:29:00,935:INFO:Declaring metric variables
2023-06-02 18:29:00,935:INFO:Importing untrained model
2023-06-02 18:29:00,935:INFO:Declaring custom model
2023-06-02 18:29:00,936:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:29:00,938:INFO:Cross validation set to False
2023-06-02 18:29:00,938:INFO:Fitting Model
2023-06-02 18:29:01,204:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:29:01,204:INFO:create_model() successfully completed......................................
2023-06-02 18:29:01,371:INFO:Initializing create_model()
2023-06-02 18:29:01,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF71DEA2E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:29:01,372:INFO:Checking exceptions
2023-06-02 18:29:01,374:INFO:Importing libraries
2023-06-02 18:29:01,374:INFO:Copying training dataset
2023-06-02 18:29:01,378:INFO:Defining folds
2023-06-02 18:29:01,378:INFO:Declaring metric variables
2023-06-02 18:29:01,378:INFO:Importing untrained model
2023-06-02 18:29:01,378:INFO:Declaring custom model
2023-06-02 18:29:01,380:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:29:01,381:INFO:Cross validation set to False
2023-06-02 18:29:01,381:INFO:Fitting Model
2023-06-02 18:29:01,726:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:29:01,726:INFO:create_model() successfully completed......................................
2023-06-02 18:29:01,922:INFO:_master_model_container: 28
2023-06-02 18:29:01,922:INFO:_display_container: 3
2023-06-02 18:29:01,924:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:29:01,924:INFO:compare_models() successfully completed......................................
2023-06-02 18:31:34,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:31:34,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:31:34,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:31:34,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:31:35,278:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:31:35,627:INFO:PyCaret ClassificationExperiment
2023-06-02 18:31:35,627:INFO:Logging name: clf-default-name
2023-06-02 18:31:35,627:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:31:35,627:INFO:version 3.0.2
2023-06-02 18:31:35,627:INFO:Initializing setup()
2023-06-02 18:31:35,627:INFO:self.USI: 413d
2023-06-02 18:31:35,627:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'y_test', 'exp_id', 'memory', 'logging_param', 'y_train', 'idx', 'y', 'html_param', 'pipeline', 'log_plots_param', 'X_test', 'X_train', 'seed', 'fold_generator', 'is_multiclass', 'data', 'n_jobs_param', '_ml_usecase', 'target_param', 'exp_name_log', '_available_plots', 'X', 'USI', 'fold_groups_param', 'fix_imbalance', 'gpu_n_jobs_param'}
2023-06-02 18:31:35,628:INFO:Checking environment
2023-06-02 18:31:35,628:INFO:python_version: 3.8.16
2023-06-02 18:31:35,628:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:31:35,628:INFO:machine: AMD64
2023-06-02 18:31:35,628:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:31:35,628:INFO:Memory: svmem(total=17106501632, available=8427057152, percent=50.7, used=8679444480, free=8427057152)
2023-06-02 18:31:35,628:INFO:Physical Core: 6
2023-06-02 18:31:35,628:INFO:Logical Core: 12
2023-06-02 18:31:35,628:INFO:Checking libraries
2023-06-02 18:31:35,628:INFO:System:
2023-06-02 18:31:35,628:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:31:35,628:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:31:35,628:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:31:35,628:INFO:PyCaret required dependencies:
2023-06-02 18:31:35,629:INFO:                 pip: 23.0.1
2023-06-02 18:31:35,629:INFO:          setuptools: 67.8.0
2023-06-02 18:31:35,629:INFO:             pycaret: 3.0.2
2023-06-02 18:31:35,629:INFO:             IPython: 8.8.0
2023-06-02 18:31:35,629:INFO:          ipywidgets: 8.0.6
2023-06-02 18:31:35,629:INFO:                tqdm: 4.65.0
2023-06-02 18:31:35,629:INFO:               numpy: 1.23.5
2023-06-02 18:31:35,629:INFO:              pandas: 1.5.3
2023-06-02 18:31:35,629:INFO:              jinja2: 3.1.2
2023-06-02 18:31:35,629:INFO:               scipy: 1.10.1
2023-06-02 18:31:35,629:INFO:              joblib: 1.2.0
2023-06-02 18:31:35,629:INFO:             sklearn: 1.2.2
2023-06-02 18:31:35,629:INFO:                pyod: 1.0.9
2023-06-02 18:31:35,629:INFO:            imblearn: 0.10.1
2023-06-02 18:31:35,629:INFO:   category_encoders: 2.6.1
2023-06-02 18:31:35,630:INFO:            lightgbm: 3.3.5
2023-06-02 18:31:35,630:INFO:               numba: 0.57.0
2023-06-02 18:31:35,630:INFO:            requests: 2.31.0
2023-06-02 18:31:35,630:INFO:          matplotlib: 3.7.1
2023-06-02 18:31:35,630:INFO:          scikitplot: 0.3.7
2023-06-02 18:31:35,630:INFO:         yellowbrick: 1.5
2023-06-02 18:31:35,630:INFO:              plotly: 5.14.1
2023-06-02 18:31:35,630:INFO:             kaleido: 0.2.1
2023-06-02 18:31:35,630:INFO:         statsmodels: 0.14.0
2023-06-02 18:31:35,630:INFO:              sktime: 0.17.0
2023-06-02 18:31:35,630:INFO:               tbats: 1.1.3
2023-06-02 18:31:35,630:INFO:            pmdarima: 2.0.3
2023-06-02 18:31:35,630:INFO:              psutil: 5.9.5
2023-06-02 18:31:35,630:INFO:PyCaret optional dependencies:
2023-06-02 18:31:35,650:INFO:                shap: Not installed
2023-06-02 18:31:35,651:INFO:           interpret: Not installed
2023-06-02 18:31:35,651:INFO:                umap: Not installed
2023-06-02 18:31:35,651:INFO:    pandas_profiling: Not installed
2023-06-02 18:31:35,651:INFO:  explainerdashboard: Not installed
2023-06-02 18:31:35,651:INFO:             autoviz: Not installed
2023-06-02 18:31:35,651:INFO:           fairlearn: Not installed
2023-06-02 18:31:35,651:INFO:             xgboost: Not installed
2023-06-02 18:31:35,651:INFO:            catboost: Not installed
2023-06-02 18:31:35,651:INFO:              kmodes: Not installed
2023-06-02 18:31:35,651:INFO:             mlxtend: Not installed
2023-06-02 18:31:35,651:INFO:       statsforecast: Not installed
2023-06-02 18:31:35,651:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:31:35,651:INFO:                 ray: 2.4.0
2023-06-02 18:31:35,651:INFO:            hyperopt: Not installed
2023-06-02 18:31:35,651:INFO:              optuna: Not installed
2023-06-02 18:31:35,652:INFO:               skopt: Not installed
2023-06-02 18:31:35,652:INFO:              mlflow: Not installed
2023-06-02 18:31:35,652:INFO:              gradio: Not installed
2023-06-02 18:31:35,652:INFO:             fastapi: Not installed
2023-06-02 18:31:35,652:INFO:             uvicorn: Not installed
2023-06-02 18:31:35,652:INFO:              m2cgen: Not installed
2023-06-02 18:31:35,652:INFO:           evidently: Not installed
2023-06-02 18:31:35,652:INFO:               fugue: Not installed
2023-06-02 18:31:35,652:INFO:           streamlit: Not installed
2023-06-02 18:31:35,652:INFO:             prophet: Not installed
2023-06-02 18:31:35,652:INFO:None
2023-06-02 18:31:35,652:INFO:Set up data.
2023-06-02 18:31:35,657:INFO:Set up train/test split.
2023-06-02 18:31:35,661:INFO:Set up index.
2023-06-02 18:31:35,661:INFO:Set up folding strategy.
2023-06-02 18:31:35,661:INFO:Assigning column types.
2023-06-02 18:31:35,664:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:31:35,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:31:35,744:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:31:35,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:35,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:35,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:31:35,888:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:31:35,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:35,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:35,933:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:31:36,004:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:31:36,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,122:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:31:36,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,164:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:31:36,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,396:INFO:Preparing preprocessing pipeline...
2023-06-02 18:31:36,397:INFO:Set up label encoding.
2023-06-02 18:31:36,397:INFO:Set up simple imputation.
2023-06-02 18:31:36,400:INFO:Set up encoding of categorical features.
2023-06-02 18:31:36,475:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:31:36,486:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:31:36,486:INFO:Creating final display dataframe.
2023-06-02 18:31:36,712:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               413d  
2023-06-02 18:31:36,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:31:36,945:INFO:setup() successfully completed in 1.51s...............
2023-06-02 18:31:37,011:INFO:Initializing compare_models()
2023-06-02 18:31:37,012:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:31:37,012:INFO:Checking exceptions
2023-06-02 18:31:37,015:INFO:Preparing display monitor
2023-06-02 18:31:37,046:INFO:Initializing Logistic Regression
2023-06-02 18:31:37,047:INFO:Total runtime is 0.0 minutes
2023-06-02 18:31:37,051:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:37,052:INFO:Initializing create_model()
2023-06-02 18:31:37,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:37,052:INFO:Checking exceptions
2023-06-02 18:31:37,052:INFO:Importing libraries
2023-06-02 18:31:37,053:INFO:Copying training dataset
2023-06-02 18:31:37,057:INFO:Defining folds
2023-06-02 18:31:37,057:INFO:Declaring metric variables
2023-06-02 18:31:37,061:INFO:Importing untrained model
2023-06-02 18:31:37,066:INFO:Logistic Regression Imported successfully
2023-06-02 18:31:37,075:INFO:Starting cross validation
2023-06-02 18:31:37,077:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:41,156:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,158:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,160:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:41,161:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:41,225:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,230:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:41,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:41,234:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:41,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:41,992:INFO:Calculating mean and std
2023-06-02 18:31:41,993:INFO:Creating metrics dataframe
2023-06-02 18:31:42,222:INFO:Uploading results into container
2023-06-02 18:31:42,223:INFO:Uploading model into container now
2023-06-02 18:31:42,224:INFO:_master_model_container: 1
2023-06-02 18:31:42,224:INFO:_display_container: 2
2023-06-02 18:31:42,225:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:31:42,225:INFO:create_model() successfully completed......................................
2023-06-02 18:31:42,378:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:42,379:INFO:Creating metrics dataframe
2023-06-02 18:31:42,390:INFO:Initializing K Neighbors Classifier
2023-06-02 18:31:42,391:INFO:Total runtime is 0.08908284902572632 minutes
2023-06-02 18:31:42,395:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:42,395:INFO:Initializing create_model()
2023-06-02 18:31:42,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:42,395:INFO:Checking exceptions
2023-06-02 18:31:42,396:INFO:Importing libraries
2023-06-02 18:31:42,396:INFO:Copying training dataset
2023-06-02 18:31:42,401:INFO:Defining folds
2023-06-02 18:31:42,401:INFO:Declaring metric variables
2023-06-02 18:31:42,406:INFO:Importing untrained model
2023-06-02 18:31:42,410:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:31:42,419:INFO:Starting cross validation
2023-06-02 18:31:42,421:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:45,343:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,346:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,348:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:45,349:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,356:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,359:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,361:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:45,362:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,366:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,366:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,369:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,370:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:45,371:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:45,372:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,372:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,395:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:45,400:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:45,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,193:INFO:Calculating mean and std
2023-06-02 18:31:46,195:INFO:Creating metrics dataframe
2023-06-02 18:31:46,419:INFO:Uploading results into container
2023-06-02 18:31:46,421:INFO:Uploading model into container now
2023-06-02 18:31:46,422:INFO:_master_model_container: 2
2023-06-02 18:31:46,422:INFO:_display_container: 2
2023-06-02 18:31:46,422:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:31:46,423:INFO:create_model() successfully completed......................................
2023-06-02 18:31:46,603:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:46,603:INFO:Creating metrics dataframe
2023-06-02 18:31:46,617:INFO:Initializing Naive Bayes
2023-06-02 18:31:46,617:INFO:Total runtime is 0.1595207691192627 minutes
2023-06-02 18:31:46,621:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:46,621:INFO:Initializing create_model()
2023-06-02 18:31:46,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:46,622:INFO:Checking exceptions
2023-06-02 18:31:46,622:INFO:Importing libraries
2023-06-02 18:31:46,622:INFO:Copying training dataset
2023-06-02 18:31:46,627:INFO:Defining folds
2023-06-02 18:31:46,627:INFO:Declaring metric variables
2023-06-02 18:31:46,631:INFO:Importing untrained model
2023-06-02 18:31:46,636:INFO:Naive Bayes Imported successfully
2023-06-02 18:31:46,644:INFO:Starting cross validation
2023-06-02 18:31:46,646:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:46,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,881:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:46,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,896:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:46,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,905:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:46,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:46,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,162:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,164:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,166:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:49,167:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,176:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,179:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,180:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:49,181:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:49,378:INFO:Calculating mean and std
2023-06-02 18:31:49,379:INFO:Creating metrics dataframe
2023-06-02 18:31:49,610:INFO:Uploading results into container
2023-06-02 18:31:49,610:INFO:Uploading model into container now
2023-06-02 18:31:49,611:INFO:_master_model_container: 3
2023-06-02 18:31:49,611:INFO:_display_container: 2
2023-06-02 18:31:49,612:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:31:49,612:INFO:create_model() successfully completed......................................
2023-06-02 18:31:49,761:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:49,762:INFO:Creating metrics dataframe
2023-06-02 18:31:49,775:INFO:Initializing Decision Tree Classifier
2023-06-02 18:31:49,775:INFO:Total runtime is 0.21214600404103595 minutes
2023-06-02 18:31:49,779:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:49,780:INFO:Initializing create_model()
2023-06-02 18:31:49,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:49,780:INFO:Checking exceptions
2023-06-02 18:31:49,780:INFO:Importing libraries
2023-06-02 18:31:49,780:INFO:Copying training dataset
2023-06-02 18:31:49,785:INFO:Defining folds
2023-06-02 18:31:49,785:INFO:Declaring metric variables
2023-06-02 18:31:49,789:INFO:Importing untrained model
2023-06-02 18:31:49,794:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:31:49,803:INFO:Starting cross validation
2023-06-02 18:31:49,805:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:50,021:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,024:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,024:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,027:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:50,029:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,029:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,029:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,029:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,031:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:50,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,033:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:50,033:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:50,035:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,035:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,046:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,049:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,050:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:50,052:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:50,835:INFO:Calculating mean and std
2023-06-02 18:31:50,836:INFO:Creating metrics dataframe
2023-06-02 18:31:51,064:INFO:Uploading results into container
2023-06-02 18:31:51,065:INFO:Uploading model into container now
2023-06-02 18:31:51,066:INFO:_master_model_container: 4
2023-06-02 18:31:51,066:INFO:_display_container: 2
2023-06-02 18:31:51,066:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:31:51,066:INFO:create_model() successfully completed......................................
2023-06-02 18:31:51,216:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:51,216:INFO:Creating metrics dataframe
2023-06-02 18:31:51,230:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:31:51,230:INFO:Total runtime is 0.23641015688578287 minutes
2023-06-02 18:31:51,234:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:51,234:INFO:Initializing create_model()
2023-06-02 18:31:51,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:51,234:INFO:Checking exceptions
2023-06-02 18:31:51,235:INFO:Importing libraries
2023-06-02 18:31:51,235:INFO:Copying training dataset
2023-06-02 18:31:51,240:INFO:Defining folds
2023-06-02 18:31:51,240:INFO:Declaring metric variables
2023-06-02 18:31:51,244:INFO:Importing untrained model
2023-06-02 18:31:51,249:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:31:51,258:INFO:Starting cross validation
2023-06-02 18:31:51,260:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:51,427:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:31:51,428:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,431:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,432:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:51,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:31:51,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:31:51,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,440:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,440:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,442:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:51,442:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:51,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,456:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:31:51,457:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,459:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:31:51,461:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,461:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,463:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:51,464:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,465:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:51,466:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:51,468:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,232:INFO:Calculating mean and std
2023-06-02 18:31:52,233:INFO:Creating metrics dataframe
2023-06-02 18:31:52,451:INFO:Uploading results into container
2023-06-02 18:31:52,452:INFO:Uploading model into container now
2023-06-02 18:31:52,452:INFO:_master_model_container: 5
2023-06-02 18:31:52,452:INFO:_display_container: 2
2023-06-02 18:31:52,453:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:31:52,453:INFO:create_model() successfully completed......................................
2023-06-02 18:31:52,601:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:52,601:INFO:Creating metrics dataframe
2023-06-02 18:31:52,616:INFO:Initializing Ridge Classifier
2023-06-02 18:31:52,616:INFO:Total runtime is 0.25950079758961997 minutes
2023-06-02 18:31:52,620:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:52,621:INFO:Initializing create_model()
2023-06-02 18:31:52,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:52,621:INFO:Checking exceptions
2023-06-02 18:31:52,621:INFO:Importing libraries
2023-06-02 18:31:52,622:INFO:Copying training dataset
2023-06-02 18:31:52,627:INFO:Defining folds
2023-06-02 18:31:52,627:INFO:Declaring metric variables
2023-06-02 18:31:52,631:INFO:Importing untrained model
2023-06-02 18:31:52,636:INFO:Ridge Classifier Imported successfully
2023-06-02 18:31:52,644:INFO:Starting cross validation
2023-06-02 18:31:52,646:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:52,797:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:31:52,799:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:31:52,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:52,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:52,809:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:31:52,814:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:52,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,822:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:31:52,824:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,824:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:31:52,825:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,827:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,828:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,828:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:52,829:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:52,830:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:52,831:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:53,611:INFO:Calculating mean and std
2023-06-02 18:31:53,612:INFO:Creating metrics dataframe
2023-06-02 18:31:53,839:INFO:Uploading results into container
2023-06-02 18:31:53,840:INFO:Uploading model into container now
2023-06-02 18:31:53,840:INFO:_master_model_container: 6
2023-06-02 18:31:53,841:INFO:_display_container: 2
2023-06-02 18:31:53,841:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:31:53,841:INFO:create_model() successfully completed......................................
2023-06-02 18:31:53,992:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:53,992:INFO:Creating metrics dataframe
2023-06-02 18:31:54,007:INFO:Initializing Random Forest Classifier
2023-06-02 18:31:54,007:INFO:Total runtime is 0.28268882433573406 minutes
2023-06-02 18:31:54,011:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:54,011:INFO:Initializing create_model()
2023-06-02 18:31:54,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:54,011:INFO:Checking exceptions
2023-06-02 18:31:54,012:INFO:Importing libraries
2023-06-02 18:31:54,012:INFO:Copying training dataset
2023-06-02 18:31:54,016:INFO:Defining folds
2023-06-02 18:31:54,016:INFO:Declaring metric variables
2023-06-02 18:31:54,021:INFO:Importing untrained model
2023-06-02 18:31:54,026:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:31:54,034:INFO:Starting cross validation
2023-06-02 18:31:54,036:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:54,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,909:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:54,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,923:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:54,924:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,931:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,931:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,932:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,933:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:54,934:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,935:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:54,935:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,935:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:54,936:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:54,937:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:55,743:INFO:Calculating mean and std
2023-06-02 18:31:55,745:INFO:Creating metrics dataframe
2023-06-02 18:31:55,975:INFO:Uploading results into container
2023-06-02 18:31:55,976:INFO:Uploading model into container now
2023-06-02 18:31:55,976:INFO:_master_model_container: 7
2023-06-02 18:31:55,976:INFO:_display_container: 2
2023-06-02 18:31:55,977:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:31:55,977:INFO:create_model() successfully completed......................................
2023-06-02 18:31:56,130:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:56,131:INFO:Creating metrics dataframe
2023-06-02 18:31:56,146:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:31:56,147:INFO:Total runtime is 0.3183514753977458 minutes
2023-06-02 18:31:56,151:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:56,151:INFO:Initializing create_model()
2023-06-02 18:31:56,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:56,151:INFO:Checking exceptions
2023-06-02 18:31:56,151:INFO:Importing libraries
2023-06-02 18:31:56,152:INFO:Copying training dataset
2023-06-02 18:31:56,157:INFO:Defining folds
2023-06-02 18:31:56,157:INFO:Declaring metric variables
2023-06-02 18:31:56,162:INFO:Importing untrained model
2023-06-02 18:31:56,166:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:31:56,175:INFO:Starting cross validation
2023-06-02 18:31:56,176:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:56,293:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:31:56,310:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:31:56,313:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:31:56,315:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:31:56,323:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:31:56,346:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,347:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,347:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,366:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,368:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,368:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,373:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,374:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,374:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,379:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,379:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,380:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,398:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,401:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:31:56,403:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,407:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:56,409:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,426:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,427:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,427:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,430:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:31:56,431:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,433:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,435:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:56,435:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:31:56,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,437:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,441:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:31:56,441:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,443:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:56,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,445:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:31:56,446:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:31:56,446:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:31:56,446:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,448:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:56,450:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:31:56,450:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,452:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,455:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:56,457:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:56,458:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:57,227:INFO:Calculating mean and std
2023-06-02 18:31:57,229:INFO:Creating metrics dataframe
2023-06-02 18:31:57,458:INFO:Uploading results into container
2023-06-02 18:31:57,459:INFO:Uploading model into container now
2023-06-02 18:31:57,460:INFO:_master_model_container: 8
2023-06-02 18:31:57,460:INFO:_display_container: 2
2023-06-02 18:31:57,460:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:31:57,460:INFO:create_model() successfully completed......................................
2023-06-02 18:31:57,612:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:57,612:INFO:Creating metrics dataframe
2023-06-02 18:31:57,628:INFO:Initializing Ada Boost Classifier
2023-06-02 18:31:57,628:INFO:Total runtime is 0.3430382529894511 minutes
2023-06-02 18:31:57,632:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:57,632:INFO:Initializing create_model()
2023-06-02 18:31:57,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:57,632:INFO:Checking exceptions
2023-06-02 18:31:57,632:INFO:Importing libraries
2023-06-02 18:31:57,633:INFO:Copying training dataset
2023-06-02 18:31:57,638:INFO:Defining folds
2023-06-02 18:31:57,639:INFO:Declaring metric variables
2023-06-02 18:31:57,643:INFO:Importing untrained model
2023-06-02 18:31:57,647:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:31:57,655:INFO:Starting cross validation
2023-06-02 18:31:57,657:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:31:58,088:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,091:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,092:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:58,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,110:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,113:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,114:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:58,115:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,124:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,126:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:58,127:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,231:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:58,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,247:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,250:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,251:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:31:58,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:31:58,914:INFO:Calculating mean and std
2023-06-02 18:31:58,916:INFO:Creating metrics dataframe
2023-06-02 18:31:59,148:INFO:Uploading results into container
2023-06-02 18:31:59,149:INFO:Uploading model into container now
2023-06-02 18:31:59,149:INFO:_master_model_container: 9
2023-06-02 18:31:59,149:INFO:_display_container: 2
2023-06-02 18:31:59,150:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:31:59,150:INFO:create_model() successfully completed......................................
2023-06-02 18:31:59,305:INFO:SubProcess create_model() end ==================================
2023-06-02 18:31:59,305:INFO:Creating metrics dataframe
2023-06-02 18:31:59,321:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:31:59,321:INFO:Total runtime is 0.37124728361765547 minutes
2023-06-02 18:31:59,326:INFO:SubProcess create_model() called ==================================
2023-06-02 18:31:59,326:INFO:Initializing create_model()
2023-06-02 18:31:59,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:31:59,327:INFO:Checking exceptions
2023-06-02 18:31:59,327:INFO:Importing libraries
2023-06-02 18:31:59,327:INFO:Copying training dataset
2023-06-02 18:31:59,332:INFO:Defining folds
2023-06-02 18:31:59,332:INFO:Declaring metric variables
2023-06-02 18:31:59,336:INFO:Importing untrained model
2023-06-02 18:31:59,341:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:31:59,349:INFO:Starting cross validation
2023-06-02 18:31:59,351:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:32:01,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:32:01,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:32:01,025:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:32:01,045:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:32:01,059:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:32:02,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,567:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:02,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,607:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,608:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,609:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:02,611:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,612:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:02,614:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,615:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:02,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:02,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:02,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:03,420:INFO:Calculating mean and std
2023-06-02 18:32:03,422:INFO:Creating metrics dataframe
2023-06-02 18:32:03,657:INFO:Uploading results into container
2023-06-02 18:32:03,658:INFO:Uploading model into container now
2023-06-02 18:32:03,659:INFO:_master_model_container: 10
2023-06-02 18:32:03,659:INFO:_display_container: 2
2023-06-02 18:32:03,660:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:32:03,660:INFO:create_model() successfully completed......................................
2023-06-02 18:32:03,812:INFO:SubProcess create_model() end ==================================
2023-06-02 18:32:03,812:INFO:Creating metrics dataframe
2023-06-02 18:32:03,829:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:32:03,830:INFO:Total runtime is 0.44640212853749595 minutes
2023-06-02 18:32:03,834:INFO:SubProcess create_model() called ==================================
2023-06-02 18:32:03,834:INFO:Initializing create_model()
2023-06-02 18:32:03,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:03,835:INFO:Checking exceptions
2023-06-02 18:32:03,835:INFO:Importing libraries
2023-06-02 18:32:03,835:INFO:Copying training dataset
2023-06-02 18:32:03,840:INFO:Defining folds
2023-06-02 18:32:03,840:INFO:Declaring metric variables
2023-06-02 18:32:03,844:INFO:Importing untrained model
2023-06-02 18:32:03,848:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:32:03,857:INFO:Starting cross validation
2023-06-02 18:32:03,859:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:32:04,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,097:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,098:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:04,099:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,100:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,102:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,104:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,104:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:04,105:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,107:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,107:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,108:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:04,110:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,110:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:04,112:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,113:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,116:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,117:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:04,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:04,944:INFO:Calculating mean and std
2023-06-02 18:32:04,945:INFO:Creating metrics dataframe
2023-06-02 18:32:05,184:INFO:Uploading results into container
2023-06-02 18:32:05,185:INFO:Uploading model into container now
2023-06-02 18:32:05,186:INFO:_master_model_container: 11
2023-06-02 18:32:05,186:INFO:_display_container: 2
2023-06-02 18:32:05,186:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:32:05,187:INFO:create_model() successfully completed......................................
2023-06-02 18:32:05,346:INFO:SubProcess create_model() end ==================================
2023-06-02 18:32:05,346:INFO:Creating metrics dataframe
2023-06-02 18:32:05,365:INFO:Initializing Extra Trees Classifier
2023-06-02 18:32:05,365:INFO:Total runtime is 0.4719868659973145 minutes
2023-06-02 18:32:05,369:INFO:SubProcess create_model() called ==================================
2023-06-02 18:32:05,369:INFO:Initializing create_model()
2023-06-02 18:32:05,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:05,370:INFO:Checking exceptions
2023-06-02 18:32:05,370:INFO:Importing libraries
2023-06-02 18:32:05,370:INFO:Copying training dataset
2023-06-02 18:32:05,375:INFO:Defining folds
2023-06-02 18:32:05,376:INFO:Declaring metric variables
2023-06-02 18:32:05,380:INFO:Importing untrained model
2023-06-02 18:32:05,385:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:32:05,393:INFO:Starting cross validation
2023-06-02 18:32:05,395:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:32:06,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,230:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:06,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,248:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,251:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:06,254:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,261:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:06,262:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,281:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,283:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,285:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:06,286:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,310:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,314:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:06,316:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:06,317:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,088:INFO:Calculating mean and std
2023-06-02 18:32:07,090:INFO:Creating metrics dataframe
2023-06-02 18:32:07,328:INFO:Uploading results into container
2023-06-02 18:32:07,329:INFO:Uploading model into container now
2023-06-02 18:32:07,329:INFO:_master_model_container: 12
2023-06-02 18:32:07,329:INFO:_display_container: 2
2023-06-02 18:32:07,330:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:32:07,330:INFO:create_model() successfully completed......................................
2023-06-02 18:32:07,479:INFO:SubProcess create_model() end ==================================
2023-06-02 18:32:07,479:INFO:Creating metrics dataframe
2023-06-02 18:32:07,497:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:32:07,497:INFO:Total runtime is 0.5075257817904155 minutes
2023-06-02 18:32:07,501:INFO:SubProcess create_model() called ==================================
2023-06-02 18:32:07,501:INFO:Initializing create_model()
2023-06-02 18:32:07,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:07,502:INFO:Checking exceptions
2023-06-02 18:32:07,502:INFO:Importing libraries
2023-06-02 18:32:07,502:INFO:Copying training dataset
2023-06-02 18:32:07,507:INFO:Defining folds
2023-06-02 18:32:07,507:INFO:Declaring metric variables
2023-06-02 18:32:07,511:INFO:Importing untrained model
2023-06-02 18:32:07,516:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:32:07,524:INFO:Starting cross validation
2023-06-02 18:32:07,526:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:32:07,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,881:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:07,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,886:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,890:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,890:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:07,892:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,892:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:07,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:07,895:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:07,899:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:07,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:08,739:INFO:Calculating mean and std
2023-06-02 18:32:08,740:INFO:Creating metrics dataframe
2023-06-02 18:32:08,988:INFO:Uploading results into container
2023-06-02 18:32:08,989:INFO:Uploading model into container now
2023-06-02 18:32:08,990:INFO:_master_model_container: 13
2023-06-02 18:32:08,990:INFO:_display_container: 2
2023-06-02 18:32:08,991:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:32:08,991:INFO:create_model() successfully completed......................................
2023-06-02 18:32:09,143:INFO:SubProcess create_model() end ==================================
2023-06-02 18:32:09,143:INFO:Creating metrics dataframe
2023-06-02 18:32:09,160:INFO:Initializing Dummy Classifier
2023-06-02 18:32:09,160:INFO:Total runtime is 0.5352328062057495 minutes
2023-06-02 18:32:09,165:INFO:SubProcess create_model() called ==================================
2023-06-02 18:32:09,166:INFO:Initializing create_model()
2023-06-02 18:32:09,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024C891E26A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:09,166:INFO:Checking exceptions
2023-06-02 18:32:09,166:INFO:Importing libraries
2023-06-02 18:32:09,166:INFO:Copying training dataset
2023-06-02 18:32:09,172:INFO:Defining folds
2023-06-02 18:32:09,173:INFO:Declaring metric variables
2023-06-02 18:32:09,177:INFO:Importing untrained model
2023-06-02 18:32:09,181:INFO:Dummy Classifier Imported successfully
2023-06-02 18:32:09,190:INFO:Starting cross validation
2023-06-02 18:32:09,191:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:32:09,400:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,403:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:09,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,406:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,408:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,409:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:09,410:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,411:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,411:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,413:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,414:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,415:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:09,416:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:09,417:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,418:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,432:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,436:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:09,438:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:32:09,439:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:32:10,298:INFO:Calculating mean and std
2023-06-02 18:32:10,304:INFO:Creating metrics dataframe
2023-06-02 18:32:10,584:INFO:Uploading results into container
2023-06-02 18:32:10,585:INFO:Uploading model into container now
2023-06-02 18:32:10,585:INFO:_master_model_container: 14
2023-06-02 18:32:10,585:INFO:_display_container: 2
2023-06-02 18:32:10,586:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:32:10,586:INFO:create_model() successfully completed......................................
2023-06-02 18:32:10,742:INFO:SubProcess create_model() end ==================================
2023-06-02 18:32:10,742:INFO:Creating metrics dataframe
2023-06-02 18:32:10,773:INFO:Initializing create_model()
2023-06-02 18:32:10,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:10,773:INFO:Checking exceptions
2023-06-02 18:32:10,775:INFO:Importing libraries
2023-06-02 18:32:10,776:INFO:Copying training dataset
2023-06-02 18:32:10,780:INFO:Defining folds
2023-06-02 18:32:10,780:INFO:Declaring metric variables
2023-06-02 18:32:10,780:INFO:Importing untrained model
2023-06-02 18:32:10,780:INFO:Declaring custom model
2023-06-02 18:32:10,781:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:32:10,782:INFO:Cross validation set to False
2023-06-02 18:32:10,782:INFO:Fitting Model
2023-06-02 18:32:10,862:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:32:11,072:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:32:11,072:INFO:create_model() successfully completed......................................
2023-06-02 18:32:11,257:INFO:Initializing create_model()
2023-06-02 18:32:11,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:11,258:INFO:Checking exceptions
2023-06-02 18:32:11,260:INFO:Importing libraries
2023-06-02 18:32:11,260:INFO:Copying training dataset
2023-06-02 18:32:11,264:INFO:Defining folds
2023-06-02 18:32:11,264:INFO:Declaring metric variables
2023-06-02 18:32:11,264:INFO:Importing untrained model
2023-06-02 18:32:11,264:INFO:Declaring custom model
2023-06-02 18:32:11,265:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:32:11,267:INFO:Cross validation set to False
2023-06-02 18:32:11,267:INFO:Fitting Model
2023-06-02 18:32:11,561:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:32:11,561:INFO:create_model() successfully completed......................................
2023-06-02 18:32:11,731:INFO:Initializing create_model()
2023-06-02 18:32:11,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:11,731:INFO:Checking exceptions
2023-06-02 18:32:11,733:INFO:Importing libraries
2023-06-02 18:32:11,733:INFO:Copying training dataset
2023-06-02 18:32:11,737:INFO:Defining folds
2023-06-02 18:32:11,738:INFO:Declaring metric variables
2023-06-02 18:32:11,738:INFO:Importing untrained model
2023-06-02 18:32:11,738:INFO:Declaring custom model
2023-06-02 18:32:11,739:INFO:Naive Bayes Imported successfully
2023-06-02 18:32:11,741:INFO:Cross validation set to False
2023-06-02 18:32:11,741:INFO:Fitting Model
2023-06-02 18:32:12,028:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:32:12,028:INFO:create_model() successfully completed......................................
2023-06-02 18:32:12,191:INFO:Initializing create_model()
2023-06-02 18:32:12,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:12,191:INFO:Checking exceptions
2023-06-02 18:32:12,193:INFO:Importing libraries
2023-06-02 18:32:12,194:INFO:Copying training dataset
2023-06-02 18:32:12,198:INFO:Defining folds
2023-06-02 18:32:12,198:INFO:Declaring metric variables
2023-06-02 18:32:12,198:INFO:Importing untrained model
2023-06-02 18:32:12,198:INFO:Declaring custom model
2023-06-02 18:32:12,199:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:32:12,200:INFO:Cross validation set to False
2023-06-02 18:32:12,200:INFO:Fitting Model
2023-06-02 18:32:12,483:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:32:12,483:INFO:create_model() successfully completed......................................
2023-06-02 18:32:12,646:INFO:Initializing create_model()
2023-06-02 18:32:12,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024C89407970>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:32:12,646:INFO:Checking exceptions
2023-06-02 18:32:12,649:INFO:Importing libraries
2023-06-02 18:32:12,649:INFO:Copying training dataset
2023-06-02 18:32:12,653:INFO:Defining folds
2023-06-02 18:32:12,653:INFO:Declaring metric variables
2023-06-02 18:32:12,653:INFO:Importing untrained model
2023-06-02 18:32:12,653:INFO:Declaring custom model
2023-06-02 18:32:12,654:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:32:12,656:INFO:Cross validation set to False
2023-06-02 18:32:12,656:INFO:Fitting Model
2023-06-02 18:32:13,335:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:32:13,335:INFO:create_model() successfully completed......................................
2023-06-02 18:32:13,535:INFO:_master_model_container: 14
2023-06-02 18:32:13,535:INFO:_display_container: 2
2023-06-02 18:32:13,537:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:32:13,537:INFO:compare_models() successfully completed......................................
2023-06-02 18:35:49,609:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:35:49,609:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:35:49,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:35:49,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:35:50,206:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:35:50,579:INFO:PyCaret ClassificationExperiment
2023-06-02 18:35:50,579:INFO:Logging name: clf-default-name
2023-06-02 18:35:50,580:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:35:50,580:INFO:version 3.0.2
2023-06-02 18:35:50,580:INFO:Initializing setup()
2023-06-02 18:35:50,580:INFO:self.USI: 918e
2023-06-02 18:35:50,580:INFO:self._variable_keys: {'exp_id', '_ml_usecase', 'html_param', 'fold_generator', '_available_plots', 'n_jobs_param', 'y_test', 'pipeline', 'logging_param', 'fold_shuffle_param', 'X_test', 'X', 'seed', 'fix_imbalance', 'y', 'is_multiclass', 'data', 'y_train', 'idx', 'log_plots_param', 'X_train', 'memory', 'fold_groups_param', 'gpu_n_jobs_param', 'exp_name_log', 'target_param', 'USI', 'gpu_param'}
2023-06-02 18:35:50,580:INFO:Checking environment
2023-06-02 18:35:50,580:INFO:python_version: 3.8.16
2023-06-02 18:35:50,580:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:35:50,580:INFO:machine: AMD64
2023-06-02 18:35:50,580:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:35:50,580:INFO:Memory: svmem(total=17106501632, available=8242929664, percent=51.8, used=8863571968, free=8242929664)
2023-06-02 18:35:50,580:INFO:Physical Core: 6
2023-06-02 18:35:50,580:INFO:Logical Core: 12
2023-06-02 18:35:50,581:INFO:Checking libraries
2023-06-02 18:35:50,581:INFO:System:
2023-06-02 18:35:50,581:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:35:50,581:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:35:50,581:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:35:50,581:INFO:PyCaret required dependencies:
2023-06-02 18:35:50,581:INFO:                 pip: 23.0.1
2023-06-02 18:35:50,581:INFO:          setuptools: 67.8.0
2023-06-02 18:35:50,581:INFO:             pycaret: 3.0.2
2023-06-02 18:35:50,581:INFO:             IPython: 8.8.0
2023-06-02 18:35:50,581:INFO:          ipywidgets: 8.0.6
2023-06-02 18:35:50,582:INFO:                tqdm: 4.65.0
2023-06-02 18:35:50,582:INFO:               numpy: 1.23.5
2023-06-02 18:35:50,582:INFO:              pandas: 1.5.3
2023-06-02 18:35:50,582:INFO:              jinja2: 3.1.2
2023-06-02 18:35:50,582:INFO:               scipy: 1.10.1
2023-06-02 18:35:50,582:INFO:              joblib: 1.2.0
2023-06-02 18:35:50,582:INFO:             sklearn: 1.2.2
2023-06-02 18:35:50,582:INFO:                pyod: 1.0.9
2023-06-02 18:35:50,582:INFO:            imblearn: 0.10.1
2023-06-02 18:35:50,583:INFO:   category_encoders: 2.6.1
2023-06-02 18:35:50,583:INFO:            lightgbm: 3.3.5
2023-06-02 18:35:50,583:INFO:               numba: 0.57.0
2023-06-02 18:35:50,583:INFO:            requests: 2.31.0
2023-06-02 18:35:50,583:INFO:          matplotlib: 3.7.1
2023-06-02 18:35:50,583:INFO:          scikitplot: 0.3.7
2023-06-02 18:35:50,583:INFO:         yellowbrick: 1.5
2023-06-02 18:35:50,583:INFO:              plotly: 5.14.1
2023-06-02 18:35:50,583:INFO:             kaleido: 0.2.1
2023-06-02 18:35:50,583:INFO:         statsmodels: 0.14.0
2023-06-02 18:35:50,583:INFO:              sktime: 0.17.0
2023-06-02 18:35:50,583:INFO:               tbats: 1.1.3
2023-06-02 18:35:50,584:INFO:            pmdarima: 2.0.3
2023-06-02 18:35:50,584:INFO:              psutil: 5.9.5
2023-06-02 18:35:50,584:INFO:PyCaret optional dependencies:
2023-06-02 18:35:50,611:INFO:                shap: Not installed
2023-06-02 18:35:50,612:INFO:           interpret: Not installed
2023-06-02 18:35:50,612:INFO:                umap: Not installed
2023-06-02 18:35:50,613:INFO:    pandas_profiling: Not installed
2023-06-02 18:35:50,613:INFO:  explainerdashboard: Not installed
2023-06-02 18:35:50,613:INFO:             autoviz: Not installed
2023-06-02 18:35:50,613:INFO:           fairlearn: Not installed
2023-06-02 18:35:50,613:INFO:             xgboost: Not installed
2023-06-02 18:35:50,613:INFO:            catboost: Not installed
2023-06-02 18:35:50,613:INFO:              kmodes: Not installed
2023-06-02 18:35:50,613:INFO:             mlxtend: Not installed
2023-06-02 18:35:50,613:INFO:       statsforecast: Not installed
2023-06-02 18:35:50,613:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:35:50,614:INFO:                 ray: 2.4.0
2023-06-02 18:35:50,614:INFO:            hyperopt: Not installed
2023-06-02 18:35:50,614:INFO:              optuna: Not installed
2023-06-02 18:35:50,614:INFO:               skopt: Not installed
2023-06-02 18:35:50,614:INFO:              mlflow: Not installed
2023-06-02 18:35:50,614:INFO:              gradio: Not installed
2023-06-02 18:35:50,614:INFO:             fastapi: Not installed
2023-06-02 18:35:50,614:INFO:             uvicorn: Not installed
2023-06-02 18:35:50,615:INFO:              m2cgen: Not installed
2023-06-02 18:35:50,615:INFO:           evidently: Not installed
2023-06-02 18:35:50,615:INFO:               fugue: Not installed
2023-06-02 18:35:50,615:INFO:           streamlit: Not installed
2023-06-02 18:35:50,615:INFO:             prophet: Not installed
2023-06-02 18:35:50,615:INFO:None
2023-06-02 18:35:50,615:INFO:Set up data.
2023-06-02 18:35:50,630:INFO:Set up train/test split.
2023-06-02 18:35:50,640:INFO:Set up index.
2023-06-02 18:35:50,640:INFO:Set up folding strategy.
2023-06-02 18:35:50,640:INFO:Assigning column types.
2023-06-02 18:35:50,644:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:35:50,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:35:50,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:35:50,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:50,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:50,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:35:50,871:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:35:50,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:50,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:50,916:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:35:50,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:35:51,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:35:51,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,159:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:35:51,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,400:INFO:Preparing preprocessing pipeline...
2023-06-02 18:35:51,401:INFO:Set up label encoding.
2023-06-02 18:35:51,401:INFO:Set up simple imputation.
2023-06-02 18:35:51,404:INFO:Set up encoding of categorical features.
2023-06-02 18:35:51,477:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:35:51,487:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:35:51,487:INFO:Creating final display dataframe.
2023-06-02 18:35:51,714:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               918e  
2023-06-02 18:35:51,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:35:51,971:INFO:setup() successfully completed in 1.6s...............
2023-06-02 18:35:52,017:INFO:Initializing compare_models()
2023-06-02 18:35:52,017:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:35:52,018:INFO:Checking exceptions
2023-06-02 18:35:52,022:INFO:Preparing display monitor
2023-06-02 18:35:52,053:INFO:Initializing Logistic Regression
2023-06-02 18:35:52,053:INFO:Total runtime is 0.0 minutes
2023-06-02 18:35:52,058:INFO:SubProcess create_model() called ==================================
2023-06-02 18:35:52,059:INFO:Initializing create_model()
2023-06-02 18:35:52,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:35:52,059:INFO:Checking exceptions
2023-06-02 18:35:52,059:INFO:Importing libraries
2023-06-02 18:35:52,059:INFO:Copying training dataset
2023-06-02 18:35:52,063:INFO:Defining folds
2023-06-02 18:35:52,063:INFO:Declaring metric variables
2023-06-02 18:35:52,068:INFO:Importing untrained model
2023-06-02 18:35:52,074:INFO:Logistic Regression Imported successfully
2023-06-02 18:35:52,085:INFO:Starting cross validation
2023-06-02 18:35:52,087:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:35:56,289:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,290:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,292:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,293:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,294:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:35:56,294:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:35:56,295:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,295:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,323:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,326:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,326:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,327:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:35:56,328:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,328:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,330:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:35:56,331:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,331:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,334:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:56,336:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:35:56,337:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:35:57,193:INFO:Calculating mean and std
2023-06-02 18:35:57,195:INFO:Creating metrics dataframe
2023-06-02 18:35:57,448:INFO:Uploading results into container
2023-06-02 18:35:57,449:INFO:Uploading model into container now
2023-06-02 18:35:57,449:INFO:_master_model_container: 1
2023-06-02 18:35:57,450:INFO:_display_container: 2
2023-06-02 18:35:57,450:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:35:57,451:INFO:create_model() successfully completed......................................
2023-06-02 18:35:57,614:INFO:SubProcess create_model() end ==================================
2023-06-02 18:35:57,614:INFO:Creating metrics dataframe
2023-06-02 18:35:57,626:INFO:Initializing K Neighbors Classifier
2023-06-02 18:35:57,626:INFO:Total runtime is 0.09288383722305298 minutes
2023-06-02 18:35:57,630:INFO:SubProcess create_model() called ==================================
2023-06-02 18:35:57,631:INFO:Initializing create_model()
2023-06-02 18:35:57,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:35:57,631:INFO:Checking exceptions
2023-06-02 18:35:57,631:INFO:Importing libraries
2023-06-02 18:35:57,632:INFO:Copying training dataset
2023-06-02 18:35:57,637:INFO:Defining folds
2023-06-02 18:35:57,637:INFO:Declaring metric variables
2023-06-02 18:35:57,642:INFO:Importing untrained model
2023-06-02 18:35:57,647:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:35:57,656:INFO:Starting cross validation
2023-06-02 18:35:57,658:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:00,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,892:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,892:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:00,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:00,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,895:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,899:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:00,901:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:00,918:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:00,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:00,922:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:01,841:INFO:Calculating mean and std
2023-06-02 18:36:01,842:INFO:Creating metrics dataframe
2023-06-02 18:36:02,097:INFO:Uploading results into container
2023-06-02 18:36:02,098:INFO:Uploading model into container now
2023-06-02 18:36:02,099:INFO:_master_model_container: 2
2023-06-02 18:36:02,099:INFO:_display_container: 2
2023-06-02 18:36:02,099:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:36:02,099:INFO:create_model() successfully completed......................................
2023-06-02 18:36:02,262:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:02,263:INFO:Creating metrics dataframe
2023-06-02 18:36:02,276:INFO:Initializing Naive Bayes
2023-06-02 18:36:02,276:INFO:Total runtime is 0.17038680712381998 minutes
2023-06-02 18:36:02,280:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:02,280:INFO:Initializing create_model()
2023-06-02 18:36:02,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:02,281:INFO:Checking exceptions
2023-06-02 18:36:02,281:INFO:Importing libraries
2023-06-02 18:36:02,281:INFO:Copying training dataset
2023-06-02 18:36:02,286:INFO:Defining folds
2023-06-02 18:36:02,286:INFO:Declaring metric variables
2023-06-02 18:36:02,291:INFO:Importing untrained model
2023-06-02 18:36:02,295:INFO:Naive Bayes Imported successfully
2023-06-02 18:36:02,304:INFO:Starting cross validation
2023-06-02 18:36:02,305:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:02,557:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,560:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,562:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:02,564:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,573:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,575:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:02,576:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,577:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,580:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:02,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:02,586:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:04,951:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:04,955:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:04,956:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:04,958:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:04,977:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:04,980:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:04,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:04,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,192:INFO:Calculating mean and std
2023-06-02 18:36:05,194:INFO:Creating metrics dataframe
2023-06-02 18:36:05,464:INFO:Uploading results into container
2023-06-02 18:36:05,465:INFO:Uploading model into container now
2023-06-02 18:36:05,466:INFO:_master_model_container: 3
2023-06-02 18:36:05,466:INFO:_display_container: 2
2023-06-02 18:36:05,467:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:36:05,467:INFO:create_model() successfully completed......................................
2023-06-02 18:36:05,621:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:05,622:INFO:Creating metrics dataframe
2023-06-02 18:36:05,635:INFO:Initializing Decision Tree Classifier
2023-06-02 18:36:05,635:INFO:Total runtime is 0.22637066046396892 minutes
2023-06-02 18:36:05,639:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:05,640:INFO:Initializing create_model()
2023-06-02 18:36:05,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:05,640:INFO:Checking exceptions
2023-06-02 18:36:05,640:INFO:Importing libraries
2023-06-02 18:36:05,640:INFO:Copying training dataset
2023-06-02 18:36:05,645:INFO:Defining folds
2023-06-02 18:36:05,645:INFO:Declaring metric variables
2023-06-02 18:36:05,651:INFO:Importing untrained model
2023-06-02 18:36:05,656:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:36:05,663:INFO:Starting cross validation
2023-06-02 18:36:05,665:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:05,898:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,903:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,905:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:05,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:05,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,914:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,915:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,917:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:05,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:05,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:05,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:05,923:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:06,802:INFO:Calculating mean and std
2023-06-02 18:36:06,804:INFO:Creating metrics dataframe
2023-06-02 18:36:07,057:INFO:Uploading results into container
2023-06-02 18:36:07,058:INFO:Uploading model into container now
2023-06-02 18:36:07,058:INFO:_master_model_container: 4
2023-06-02 18:36:07,058:INFO:_display_container: 2
2023-06-02 18:36:07,059:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:36:07,059:INFO:create_model() successfully completed......................................
2023-06-02 18:36:07,218:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:07,219:INFO:Creating metrics dataframe
2023-06-02 18:36:07,233:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:36:07,233:INFO:Total runtime is 0.2530029058456421 minutes
2023-06-02 18:36:07,237:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:07,238:INFO:Initializing create_model()
2023-06-02 18:36:07,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:07,238:INFO:Checking exceptions
2023-06-02 18:36:07,238:INFO:Importing libraries
2023-06-02 18:36:07,238:INFO:Copying training dataset
2023-06-02 18:36:07,243:INFO:Defining folds
2023-06-02 18:36:07,243:INFO:Declaring metric variables
2023-06-02 18:36:07,247:INFO:Importing untrained model
2023-06-02 18:36:07,253:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:36:07,260:INFO:Starting cross validation
2023-06-02 18:36:07,262:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:07,451:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:36:07,452:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,457:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,459:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:36:07,459:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:36:07,460:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,460:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,461:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,462:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,464:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:07,464:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,466:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,468:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:36:07,468:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:36:07,469:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:07,469:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,469:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,470:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,472:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,472:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,474:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:07,474:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:07,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:07,475:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,346:INFO:Calculating mean and std
2023-06-02 18:36:08,347:INFO:Creating metrics dataframe
2023-06-02 18:36:08,608:INFO:Uploading results into container
2023-06-02 18:36:08,609:INFO:Uploading model into container now
2023-06-02 18:36:08,609:INFO:_master_model_container: 5
2023-06-02 18:36:08,610:INFO:_display_container: 2
2023-06-02 18:36:08,611:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:36:08,611:INFO:create_model() successfully completed......................................
2023-06-02 18:36:08,766:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:08,766:INFO:Creating metrics dataframe
2023-06-02 18:36:08,781:INFO:Initializing Ridge Classifier
2023-06-02 18:36:08,781:INFO:Total runtime is 0.27879966894785563 minutes
2023-06-02 18:36:08,785:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:08,786:INFO:Initializing create_model()
2023-06-02 18:36:08,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:08,786:INFO:Checking exceptions
2023-06-02 18:36:08,786:INFO:Importing libraries
2023-06-02 18:36:08,786:INFO:Copying training dataset
2023-06-02 18:36:08,791:INFO:Defining folds
2023-06-02 18:36:08,791:INFO:Declaring metric variables
2023-06-02 18:36:08,795:INFO:Importing untrained model
2023-06-02 18:36:08,802:INFO:Ridge Classifier Imported successfully
2023-06-02 18:36:08,810:INFO:Starting cross validation
2023-06-02 18:36:08,811:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:08,980:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:36:08,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,985:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,987:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:36:08,988:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:08,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,993:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:36:08,995:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:08,996:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:08,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,000:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,002:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:36:09,002:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:09,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,006:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:36:09,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:09,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:09,016:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:09,878:INFO:Calculating mean and std
2023-06-02 18:36:09,880:INFO:Creating metrics dataframe
2023-06-02 18:36:10,145:INFO:Uploading results into container
2023-06-02 18:36:10,146:INFO:Uploading model into container now
2023-06-02 18:36:10,146:INFO:_master_model_container: 6
2023-06-02 18:36:10,147:INFO:_display_container: 2
2023-06-02 18:36:10,147:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:36:10,147:INFO:create_model() successfully completed......................................
2023-06-02 18:36:10,303:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:10,304:INFO:Creating metrics dataframe
2023-06-02 18:36:10,319:INFO:Initializing Random Forest Classifier
2023-06-02 18:36:10,319:INFO:Total runtime is 0.30443351666132606 minutes
2023-06-02 18:36:10,323:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:10,324:INFO:Initializing create_model()
2023-06-02 18:36:10,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:10,324:INFO:Checking exceptions
2023-06-02 18:36:10,324:INFO:Importing libraries
2023-06-02 18:36:10,324:INFO:Copying training dataset
2023-06-02 18:36:10,329:INFO:Defining folds
2023-06-02 18:36:10,329:INFO:Declaring metric variables
2023-06-02 18:36:10,333:INFO:Importing untrained model
2023-06-02 18:36:10,338:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:36:10,345:INFO:Starting cross validation
2023-06-02 18:36:10,347:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:11,255:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,258:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,259:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:11,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,268:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,271:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,272:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:11,274:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,274:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,280:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:11,282:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,294:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,297:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,299:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:11,301:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,315:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,318:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:11,319:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:11,321:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,153:INFO:Calculating mean and std
2023-06-02 18:36:12,155:INFO:Creating metrics dataframe
2023-06-02 18:36:12,413:INFO:Uploading results into container
2023-06-02 18:36:12,414:INFO:Uploading model into container now
2023-06-02 18:36:12,414:INFO:_master_model_container: 7
2023-06-02 18:36:12,414:INFO:_display_container: 2
2023-06-02 18:36:12,415:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:36:12,415:INFO:create_model() successfully completed......................................
2023-06-02 18:36:12,572:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:12,572:INFO:Creating metrics dataframe
2023-06-02 18:36:12,588:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:36:12,588:INFO:Total runtime is 0.34224933783213296 minutes
2023-06-02 18:36:12,592:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:12,593:INFO:Initializing create_model()
2023-06-02 18:36:12,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:12,593:INFO:Checking exceptions
2023-06-02 18:36:12,593:INFO:Importing libraries
2023-06-02 18:36:12,593:INFO:Copying training dataset
2023-06-02 18:36:12,598:INFO:Defining folds
2023-06-02 18:36:12,598:INFO:Declaring metric variables
2023-06-02 18:36:12,603:INFO:Importing untrained model
2023-06-02 18:36:12,608:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:36:12,616:INFO:Starting cross validation
2023-06-02 18:36:12,618:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:12,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:36:12,732:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:36:12,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:36:12,742:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:36:12,746:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:36:12,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,809:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,809:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,809:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,819:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,821:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,821:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,839:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,840:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,840:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,877:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,878:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,881:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:36:12,882:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:36:12,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:36:12,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:12,887:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:36:12,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:12,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,889:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,890:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,892:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,892:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:12,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:12,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,903:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:36:12,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:36:12,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:36:12,907:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:36:12,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,911:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:12,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:12,913:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:13,771:INFO:Calculating mean and std
2023-06-02 18:36:13,772:INFO:Creating metrics dataframe
2023-06-02 18:36:14,032:INFO:Uploading results into container
2023-06-02 18:36:14,033:INFO:Uploading model into container now
2023-06-02 18:36:14,034:INFO:_master_model_container: 8
2023-06-02 18:36:14,034:INFO:_display_container: 2
2023-06-02 18:36:14,034:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:36:14,034:INFO:create_model() successfully completed......................................
2023-06-02 18:36:14,197:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:14,197:INFO:Creating metrics dataframe
2023-06-02 18:36:14,214:INFO:Initializing Ada Boost Classifier
2023-06-02 18:36:14,214:INFO:Total runtime is 0.3693554798762003 minutes
2023-06-02 18:36:14,219:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:14,220:INFO:Initializing create_model()
2023-06-02 18:36:14,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:14,220:INFO:Checking exceptions
2023-06-02 18:36:14,220:INFO:Importing libraries
2023-06-02 18:36:14,220:INFO:Copying training dataset
2023-06-02 18:36:14,224:INFO:Defining folds
2023-06-02 18:36:14,224:INFO:Declaring metric variables
2023-06-02 18:36:14,229:INFO:Importing untrained model
2023-06-02 18:36:14,233:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:36:14,241:INFO:Starting cross validation
2023-06-02 18:36:14,243:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:14,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,727:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,729:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:14,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,811:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,814:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,815:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:14,819:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,823:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,825:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,826:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:14,827:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,834:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,835:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,838:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,838:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,839:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:14,840:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:14,841:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:14,841:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:15,644:INFO:Calculating mean and std
2023-06-02 18:36:15,646:INFO:Creating metrics dataframe
2023-06-02 18:36:15,913:INFO:Uploading results into container
2023-06-02 18:36:15,914:INFO:Uploading model into container now
2023-06-02 18:36:15,915:INFO:_master_model_container: 9
2023-06-02 18:36:15,915:INFO:_display_container: 2
2023-06-02 18:36:15,915:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:36:15,916:INFO:create_model() successfully completed......................................
2023-06-02 18:36:16,081:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:16,081:INFO:Creating metrics dataframe
2023-06-02 18:36:16,097:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:36:16,097:INFO:Total runtime is 0.4007328311602274 minutes
2023-06-02 18:36:16,102:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:16,102:INFO:Initializing create_model()
2023-06-02 18:36:16,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:16,103:INFO:Checking exceptions
2023-06-02 18:36:16,103:INFO:Importing libraries
2023-06-02 18:36:16,103:INFO:Copying training dataset
2023-06-02 18:36:16,107:INFO:Defining folds
2023-06-02 18:36:16,107:INFO:Declaring metric variables
2023-06-02 18:36:16,111:INFO:Importing untrained model
2023-06-02 18:36:16,116:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:36:16,124:INFO:Starting cross validation
2023-06-02 18:36:16,126:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:17,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:36:17,939:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:36:17,942:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:36:17,946:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:36:17,962:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:36:19,541:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,543:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:19,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,642:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,646:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,648:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:19,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,651:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,654:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,655:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:19,657:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,689:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,693:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,695:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:19,696:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,731:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:19,732:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:19,736:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:20,491:INFO:Calculating mean and std
2023-06-02 18:36:20,492:INFO:Creating metrics dataframe
2023-06-02 18:36:20,755:INFO:Uploading results into container
2023-06-02 18:36:20,756:INFO:Uploading model into container now
2023-06-02 18:36:20,757:INFO:_master_model_container: 10
2023-06-02 18:36:20,757:INFO:_display_container: 2
2023-06-02 18:36:20,757:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:36:20,758:INFO:create_model() successfully completed......................................
2023-06-02 18:36:20,912:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:20,912:INFO:Creating metrics dataframe
2023-06-02 18:36:20,929:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:36:20,929:INFO:Total runtime is 0.4812751213709513 minutes
2023-06-02 18:36:20,933:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:20,934:INFO:Initializing create_model()
2023-06-02 18:36:20,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:20,934:INFO:Checking exceptions
2023-06-02 18:36:20,934:INFO:Importing libraries
2023-06-02 18:36:20,934:INFO:Copying training dataset
2023-06-02 18:36:20,939:INFO:Defining folds
2023-06-02 18:36:20,939:INFO:Declaring metric variables
2023-06-02 18:36:20,943:INFO:Importing untrained model
2023-06-02 18:36:20,947:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:36:20,956:INFO:Starting cross validation
2023-06-02 18:36:20,957:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:21,182:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,185:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,186:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:21,187:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,193:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,197:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:21,203:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,208:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,210:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,212:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,214:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:21,214:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:21,215:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,216:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,217:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:21,219:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:21,221:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:22,103:INFO:Calculating mean and std
2023-06-02 18:36:22,104:INFO:Creating metrics dataframe
2023-06-02 18:36:22,383:INFO:Uploading results into container
2023-06-02 18:36:22,384:INFO:Uploading model into container now
2023-06-02 18:36:22,384:INFO:_master_model_container: 11
2023-06-02 18:36:22,385:INFO:_display_container: 2
2023-06-02 18:36:22,385:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:36:22,385:INFO:create_model() successfully completed......................................
2023-06-02 18:36:22,546:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:22,546:INFO:Creating metrics dataframe
2023-06-02 18:36:22,564:INFO:Initializing Extra Trees Classifier
2023-06-02 18:36:22,564:INFO:Total runtime is 0.5085216959317524 minutes
2023-06-02 18:36:22,570:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:22,570:INFO:Initializing create_model()
2023-06-02 18:36:22,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:22,571:INFO:Checking exceptions
2023-06-02 18:36:22,571:INFO:Importing libraries
2023-06-02 18:36:22,571:INFO:Copying training dataset
2023-06-02 18:36:22,575:INFO:Defining folds
2023-06-02 18:36:22,576:INFO:Declaring metric variables
2023-06-02 18:36:22,580:INFO:Importing untrained model
2023-06-02 18:36:22,585:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:36:22,594:INFO:Starting cross validation
2023-06-02 18:36:22,596:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:23,458:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,461:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,463:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:23,464:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,471:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,474:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,476:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:23,478:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:23,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:23,492:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,492:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:23,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:23,496:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:24,390:INFO:Calculating mean and std
2023-06-02 18:36:24,391:INFO:Creating metrics dataframe
2023-06-02 18:36:24,673:INFO:Uploading results into container
2023-06-02 18:36:24,674:INFO:Uploading model into container now
2023-06-02 18:36:24,675:INFO:_master_model_container: 12
2023-06-02 18:36:24,675:INFO:_display_container: 2
2023-06-02 18:36:24,676:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:36:24,676:INFO:create_model() successfully completed......................................
2023-06-02 18:36:24,851:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:24,852:INFO:Creating metrics dataframe
2023-06-02 18:36:24,871:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:36:24,871:INFO:Total runtime is 0.5469667077064514 minutes
2023-06-02 18:36:24,875:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:24,876:INFO:Initializing create_model()
2023-06-02 18:36:24,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:24,876:INFO:Checking exceptions
2023-06-02 18:36:24,876:INFO:Importing libraries
2023-06-02 18:36:24,876:INFO:Copying training dataset
2023-06-02 18:36:24,881:INFO:Defining folds
2023-06-02 18:36:24,882:INFO:Declaring metric variables
2023-06-02 18:36:24,887:INFO:Importing untrained model
2023-06-02 18:36:24,892:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:36:24,902:INFO:Starting cross validation
2023-06-02 18:36:24,904:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:25,284:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,287:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,289:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,290:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:25,291:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:25,291:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,292:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,298:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,299:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,302:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,302:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,303:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:25,304:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:25,305:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,305:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,307:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,311:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:25,313:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:25,314:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,239:INFO:Calculating mean and std
2023-06-02 18:36:26,241:INFO:Creating metrics dataframe
2023-06-02 18:36:26,509:INFO:Uploading results into container
2023-06-02 18:36:26,510:INFO:Uploading model into container now
2023-06-02 18:36:26,511:INFO:_master_model_container: 13
2023-06-02 18:36:26,511:INFO:_display_container: 2
2023-06-02 18:36:26,512:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:36:26,512:INFO:create_model() successfully completed......................................
2023-06-02 18:36:26,674:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:26,674:INFO:Creating metrics dataframe
2023-06-02 18:36:26,696:INFO:Initializing Dummy Classifier
2023-06-02 18:36:26,696:INFO:Total runtime is 0.5773843208948771 minutes
2023-06-02 18:36:26,700:INFO:SubProcess create_model() called ==================================
2023-06-02 18:36:26,701:INFO:Initializing create_model()
2023-06-02 18:36:26,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E74CCA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:26,701:INFO:Checking exceptions
2023-06-02 18:36:26,702:INFO:Importing libraries
2023-06-02 18:36:26,702:INFO:Copying training dataset
2023-06-02 18:36:26,706:INFO:Defining folds
2023-06-02 18:36:26,706:INFO:Declaring metric variables
2023-06-02 18:36:26,711:INFO:Importing untrained model
2023-06-02 18:36:26,715:INFO:Dummy Classifier Imported successfully
2023-06-02 18:36:26,723:INFO:Starting cross validation
2023-06-02 18:36:26,725:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:36:26,942:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,945:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,947:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:26,948:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,948:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,953:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,955:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:26,957:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,958:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,961:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,962:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:26,962:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,963:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,965:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,965:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,967:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:26,969:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,969:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:26,971:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:36:26,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:36:27,879:INFO:Calculating mean and std
2023-06-02 18:36:27,881:INFO:Creating metrics dataframe
2023-06-02 18:36:28,147:INFO:Uploading results into container
2023-06-02 18:36:28,148:INFO:Uploading model into container now
2023-06-02 18:36:28,148:INFO:_master_model_container: 14
2023-06-02 18:36:28,148:INFO:_display_container: 2
2023-06-02 18:36:28,149:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:36:28,149:INFO:create_model() successfully completed......................................
2023-06-02 18:36:28,303:INFO:SubProcess create_model() end ==================================
2023-06-02 18:36:28,304:INFO:Creating metrics dataframe
2023-06-02 18:36:28,336:INFO:Initializing create_model()
2023-06-02 18:36:28,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:28,336:INFO:Checking exceptions
2023-06-02 18:36:28,338:INFO:Importing libraries
2023-06-02 18:36:28,338:INFO:Copying training dataset
2023-06-02 18:36:28,342:INFO:Defining folds
2023-06-02 18:36:28,342:INFO:Declaring metric variables
2023-06-02 18:36:28,343:INFO:Importing untrained model
2023-06-02 18:36:28,343:INFO:Declaring custom model
2023-06-02 18:36:28,343:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:36:28,345:INFO:Cross validation set to False
2023-06-02 18:36:28,345:INFO:Fitting Model
2023-06-02 18:36:28,422:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:36:28,633:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:36:28,633:INFO:create_model() successfully completed......................................
2023-06-02 18:36:28,807:INFO:Initializing create_model()
2023-06-02 18:36:28,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:28,807:INFO:Checking exceptions
2023-06-02 18:36:28,809:INFO:Importing libraries
2023-06-02 18:36:28,809:INFO:Copying training dataset
2023-06-02 18:36:28,813:INFO:Defining folds
2023-06-02 18:36:28,813:INFO:Declaring metric variables
2023-06-02 18:36:28,813:INFO:Importing untrained model
2023-06-02 18:36:28,813:INFO:Declaring custom model
2023-06-02 18:36:28,814:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:36:28,815:INFO:Cross validation set to False
2023-06-02 18:36:28,815:INFO:Fitting Model
2023-06-02 18:36:29,119:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:36:29,119:INFO:create_model() successfully completed......................................
2023-06-02 18:36:29,279:INFO:Initializing create_model()
2023-06-02 18:36:29,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:29,279:INFO:Checking exceptions
2023-06-02 18:36:29,281:INFO:Importing libraries
2023-06-02 18:36:29,282:INFO:Copying training dataset
2023-06-02 18:36:29,286:INFO:Defining folds
2023-06-02 18:36:29,287:INFO:Declaring metric variables
2023-06-02 18:36:29,287:INFO:Importing untrained model
2023-06-02 18:36:29,287:INFO:Declaring custom model
2023-06-02 18:36:29,287:INFO:Naive Bayes Imported successfully
2023-06-02 18:36:29,289:INFO:Cross validation set to False
2023-06-02 18:36:29,289:INFO:Fitting Model
2023-06-02 18:36:29,584:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:36:29,584:INFO:create_model() successfully completed......................................
2023-06-02 18:36:29,744:INFO:Initializing create_model()
2023-06-02 18:36:29,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:29,745:INFO:Checking exceptions
2023-06-02 18:36:29,747:INFO:Importing libraries
2023-06-02 18:36:29,747:INFO:Copying training dataset
2023-06-02 18:36:29,751:INFO:Defining folds
2023-06-02 18:36:29,752:INFO:Declaring metric variables
2023-06-02 18:36:29,752:INFO:Importing untrained model
2023-06-02 18:36:29,752:INFO:Declaring custom model
2023-06-02 18:36:29,753:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:36:29,754:INFO:Cross validation set to False
2023-06-02 18:36:29,754:INFO:Fitting Model
2023-06-02 18:36:30,048:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:36:30,048:INFO:create_model() successfully completed......................................
2023-06-02 18:36:30,213:INFO:Initializing create_model()
2023-06-02 18:36:30,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D3E0F2E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:36:30,214:INFO:Checking exceptions
2023-06-02 18:36:30,216:INFO:Importing libraries
2023-06-02 18:36:30,216:INFO:Copying training dataset
2023-06-02 18:36:30,220:INFO:Defining folds
2023-06-02 18:36:30,220:INFO:Declaring metric variables
2023-06-02 18:36:30,220:INFO:Importing untrained model
2023-06-02 18:36:30,220:INFO:Declaring custom model
2023-06-02 18:36:30,221:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:36:30,223:INFO:Cross validation set to False
2023-06-02 18:36:30,223:INFO:Fitting Model
2023-06-02 18:36:30,900:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:36:30,900:INFO:create_model() successfully completed......................................
2023-06-02 18:36:31,092:INFO:_master_model_container: 14
2023-06-02 18:36:31,092:INFO:_display_container: 2
2023-06-02 18:36:31,093:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:36:31,094:INFO:compare_models() successfully completed......................................
2023-06-02 18:41:52,748:INFO:PyCaret ClassificationExperiment
2023-06-02 18:41:52,748:INFO:Logging name: clf-default-name
2023-06-02 18:41:52,748:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:41:52,748:INFO:version 3.0.2
2023-06-02 18:41:52,748:INFO:Initializing setup()
2023-06-02 18:41:52,748:INFO:self.USI: b704
2023-06-02 18:41:52,748:INFO:self._variable_keys: {'exp_id', '_ml_usecase', 'html_param', 'fold_generator', '_available_plots', 'n_jobs_param', 'y_test', 'pipeline', 'logging_param', 'fold_shuffle_param', 'X_test', 'X', 'seed', 'fix_imbalance', 'y', 'is_multiclass', 'data', 'y_train', 'idx', 'log_plots_param', 'X_train', 'memory', 'fold_groups_param', 'gpu_n_jobs_param', 'exp_name_log', 'target_param', 'USI', 'gpu_param'}
2023-06-02 18:41:52,748:INFO:Checking environment
2023-06-02 18:41:52,749:INFO:python_version: 3.8.16
2023-06-02 18:41:52,749:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:41:52,749:INFO:machine: AMD64
2023-06-02 18:41:52,749:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:41:52,749:INFO:Memory: svmem(total=17106501632, available=8093020160, percent=52.7, used=9013481472, free=8093020160)
2023-06-02 18:41:52,749:INFO:Physical Core: 6
2023-06-02 18:41:52,749:INFO:Logical Core: 12
2023-06-02 18:41:52,749:INFO:Checking libraries
2023-06-02 18:41:52,749:INFO:System:
2023-06-02 18:41:52,749:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:41:52,749:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:41:52,749:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:41:52,749:INFO:PyCaret required dependencies:
2023-06-02 18:41:52,750:INFO:                 pip: 23.0.1
2023-06-02 18:41:52,750:INFO:          setuptools: 67.8.0
2023-06-02 18:41:52,750:INFO:             pycaret: 3.0.2
2023-06-02 18:41:52,750:INFO:             IPython: 8.8.0
2023-06-02 18:41:52,750:INFO:          ipywidgets: 8.0.6
2023-06-02 18:41:52,750:INFO:                tqdm: 4.65.0
2023-06-02 18:41:52,750:INFO:               numpy: 1.23.5
2023-06-02 18:41:52,750:INFO:              pandas: 1.5.3
2023-06-02 18:41:52,750:INFO:              jinja2: 3.1.2
2023-06-02 18:41:52,750:INFO:               scipy: 1.10.1
2023-06-02 18:41:52,750:INFO:              joblib: 1.2.0
2023-06-02 18:41:52,750:INFO:             sklearn: 1.2.2
2023-06-02 18:41:52,750:INFO:                pyod: 1.0.9
2023-06-02 18:41:52,750:INFO:            imblearn: 0.10.1
2023-06-02 18:41:52,751:INFO:   category_encoders: 2.6.1
2023-06-02 18:41:52,751:INFO:            lightgbm: 3.3.5
2023-06-02 18:41:52,751:INFO:               numba: 0.57.0
2023-06-02 18:41:52,751:INFO:            requests: 2.31.0
2023-06-02 18:41:52,751:INFO:          matplotlib: 3.7.1
2023-06-02 18:41:52,751:INFO:          scikitplot: 0.3.7
2023-06-02 18:41:52,751:INFO:         yellowbrick: 1.5
2023-06-02 18:41:52,751:INFO:              plotly: 5.14.1
2023-06-02 18:41:52,751:INFO:             kaleido: 0.2.1
2023-06-02 18:41:52,751:INFO:         statsmodels: 0.14.0
2023-06-02 18:41:52,751:INFO:              sktime: 0.17.0
2023-06-02 18:41:52,751:INFO:               tbats: 1.1.3
2023-06-02 18:41:52,751:INFO:            pmdarima: 2.0.3
2023-06-02 18:41:52,751:INFO:              psutil: 5.9.5
2023-06-02 18:41:52,751:INFO:PyCaret optional dependencies:
2023-06-02 18:41:52,752:INFO:                shap: Not installed
2023-06-02 18:41:52,752:INFO:           interpret: Not installed
2023-06-02 18:41:52,752:INFO:                umap: Not installed
2023-06-02 18:41:52,752:INFO:    pandas_profiling: Not installed
2023-06-02 18:41:52,752:INFO:  explainerdashboard: Not installed
2023-06-02 18:41:52,752:INFO:             autoviz: Not installed
2023-06-02 18:41:52,752:INFO:           fairlearn: Not installed
2023-06-02 18:41:52,752:INFO:             xgboost: Not installed
2023-06-02 18:41:52,752:INFO:            catboost: Not installed
2023-06-02 18:41:52,752:INFO:              kmodes: Not installed
2023-06-02 18:41:52,752:INFO:             mlxtend: Not installed
2023-06-02 18:41:52,752:INFO:       statsforecast: Not installed
2023-06-02 18:41:52,752:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:41:52,752:INFO:                 ray: 2.4.0
2023-06-02 18:41:52,753:INFO:            hyperopt: Not installed
2023-06-02 18:41:52,753:INFO:              optuna: Not installed
2023-06-02 18:41:52,753:INFO:               skopt: Not installed
2023-06-02 18:41:52,753:INFO:              mlflow: Not installed
2023-06-02 18:41:52,753:INFO:              gradio: Not installed
2023-06-02 18:41:52,753:INFO:             fastapi: Not installed
2023-06-02 18:41:52,753:INFO:             uvicorn: Not installed
2023-06-02 18:41:52,753:INFO:              m2cgen: Not installed
2023-06-02 18:41:52,753:INFO:           evidently: Not installed
2023-06-02 18:41:52,753:INFO:               fugue: Not installed
2023-06-02 18:41:52,753:INFO:           streamlit: Not installed
2023-06-02 18:41:52,753:INFO:             prophet: Not installed
2023-06-02 18:41:52,753:INFO:None
2023-06-02 18:41:52,753:INFO:Set up data.
2023-06-02 18:41:52,757:INFO:Set up train/test split.
2023-06-02 18:41:52,762:INFO:Set up index.
2023-06-02 18:41:52,762:INFO:Set up folding strategy.
2023-06-02 18:41:52,762:INFO:Assigning column types.
2023-06-02 18:41:52,765:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:41:52,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:41:52,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:41:52,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:52,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:52,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:41:52,950:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:41:52,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:52,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:52,995:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:41:53,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:41:53,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:41:53,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,226:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:41:53,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,460:INFO:Preparing preprocessing pipeline...
2023-06-02 18:41:53,461:INFO:Set up label encoding.
2023-06-02 18:41:53,461:INFO:Set up simple imputation.
2023-06-02 18:41:53,463:INFO:Set up encoding of categorical features.
2023-06-02 18:41:53,529:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:41:53,538:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:41:53,538:INFO:Creating final display dataframe.
2023-06-02 18:41:53,765:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               b704  
2023-06-02 18:41:53,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:53,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:54,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:54,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:41:54,016:INFO:setup() successfully completed in 1.51s...............
2023-06-02 18:41:54,067:INFO:Initializing compare_models()
2023-06-02 18:41:54,068:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:41:54,068:INFO:Checking exceptions
2023-06-02 18:41:54,072:INFO:Preparing display monitor
2023-06-02 18:41:54,099:INFO:Initializing Logistic Regression
2023-06-02 18:41:54,099:INFO:Total runtime is 0.0 minutes
2023-06-02 18:41:54,104:INFO:SubProcess create_model() called ==================================
2023-06-02 18:41:54,105:INFO:Initializing create_model()
2023-06-02 18:41:54,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:41:54,105:INFO:Checking exceptions
2023-06-02 18:41:54,105:INFO:Importing libraries
2023-06-02 18:41:54,106:INFO:Copying training dataset
2023-06-02 18:41:54,110:INFO:Defining folds
2023-06-02 18:41:54,110:INFO:Declaring metric variables
2023-06-02 18:41:54,115:INFO:Importing untrained model
2023-06-02 18:41:54,121:INFO:Logistic Regression Imported successfully
2023-06-02 18:41:54,130:INFO:Starting cross validation
2023-06-02 18:41:54,132:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:41:58,112:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,115:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,117:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:41:58,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,121:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,123:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:41:58,124:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,131:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,133:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,135:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:41:58,136:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,138:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,139:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,141:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:41:58,142:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,144:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,147:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:58,148:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:41:58,150:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:41:59,061:INFO:Calculating mean and std
2023-06-02 18:41:59,063:INFO:Creating metrics dataframe
2023-06-02 18:41:59,334:INFO:Uploading results into container
2023-06-02 18:41:59,335:INFO:Uploading model into container now
2023-06-02 18:41:59,335:INFO:_master_model_container: 1
2023-06-02 18:41:59,335:INFO:_display_container: 2
2023-06-02 18:41:59,336:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:41:59,336:INFO:create_model() successfully completed......................................
2023-06-02 18:41:59,530:INFO:SubProcess create_model() end ==================================
2023-06-02 18:41:59,530:INFO:Creating metrics dataframe
2023-06-02 18:41:59,543:INFO:Initializing K Neighbors Classifier
2023-06-02 18:41:59,543:INFO:Total runtime is 0.09074374834696451 minutes
2023-06-02 18:41:59,547:INFO:SubProcess create_model() called ==================================
2023-06-02 18:41:59,547:INFO:Initializing create_model()
2023-06-02 18:41:59,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:41:59,547:INFO:Checking exceptions
2023-06-02 18:41:59,547:INFO:Importing libraries
2023-06-02 18:41:59,548:INFO:Copying training dataset
2023-06-02 18:41:59,552:INFO:Defining folds
2023-06-02 18:41:59,553:INFO:Declaring metric variables
2023-06-02 18:41:59,557:INFO:Importing untrained model
2023-06-02 18:41:59,561:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:41:59,570:INFO:Starting cross validation
2023-06-02 18:41:59,571:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:02,477:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,480:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,481:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,481:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:02,483:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,484:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,485:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:02,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:02,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,496:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,498:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:02,499:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,505:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,508:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:02,509:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:02,511:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:03,420:INFO:Calculating mean and std
2023-06-02 18:42:03,421:INFO:Creating metrics dataframe
2023-06-02 18:42:03,690:INFO:Uploading results into container
2023-06-02 18:42:03,691:INFO:Uploading model into container now
2023-06-02 18:42:03,691:INFO:_master_model_container: 2
2023-06-02 18:42:03,691:INFO:_display_container: 2
2023-06-02 18:42:03,692:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:42:03,692:INFO:create_model() successfully completed......................................
2023-06-02 18:42:03,867:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:03,868:INFO:Creating metrics dataframe
2023-06-02 18:42:03,881:INFO:Initializing Naive Bayes
2023-06-02 18:42:03,882:INFO:Total runtime is 0.1630518039067586 minutes
2023-06-02 18:42:03,886:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:03,887:INFO:Initializing create_model()
2023-06-02 18:42:03,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:03,887:INFO:Checking exceptions
2023-06-02 18:42:03,887:INFO:Importing libraries
2023-06-02 18:42:03,887:INFO:Copying training dataset
2023-06-02 18:42:03,892:INFO:Defining folds
2023-06-02 18:42:03,893:INFO:Declaring metric variables
2023-06-02 18:42:03,897:INFO:Importing untrained model
2023-06-02 18:42:03,901:INFO:Naive Bayes Imported successfully
2023-06-02 18:42:03,910:INFO:Starting cross validation
2023-06-02 18:42:03,911:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:04,180:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,184:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,186:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:04,187:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,188:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,190:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,192:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:04,193:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,200:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,203:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:04,205:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:04,207:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,565:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,568:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:06,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,577:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,579:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,581:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:06,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:06,811:INFO:Calculating mean and std
2023-06-02 18:42:06,813:INFO:Creating metrics dataframe
2023-06-02 18:42:07,090:INFO:Uploading results into container
2023-06-02 18:42:07,090:INFO:Uploading model into container now
2023-06-02 18:42:07,091:INFO:_master_model_container: 3
2023-06-02 18:42:07,091:INFO:_display_container: 2
2023-06-02 18:42:07,091:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:42:07,092:INFO:create_model() successfully completed......................................
2023-06-02 18:42:07,260:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:07,260:INFO:Creating metrics dataframe
2023-06-02 18:42:07,274:INFO:Initializing Decision Tree Classifier
2023-06-02 18:42:07,274:INFO:Total runtime is 0.21958172321319577 minutes
2023-06-02 18:42:07,278:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:07,278:INFO:Initializing create_model()
2023-06-02 18:42:07,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:07,279:INFO:Checking exceptions
2023-06-02 18:42:07,279:INFO:Importing libraries
2023-06-02 18:42:07,279:INFO:Copying training dataset
2023-06-02 18:42:07,284:INFO:Defining folds
2023-06-02 18:42:07,284:INFO:Declaring metric variables
2023-06-02 18:42:07,289:INFO:Importing untrained model
2023-06-02 18:42:07,293:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:42:07,300:INFO:Starting cross validation
2023-06-02 18:42:07,303:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:07,527:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,530:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,532:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:07,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,533:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,534:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,536:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:07,536:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,538:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,538:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:07,539:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,539:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,543:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,544:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:07,545:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,546:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,549:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:07,551:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:07,553:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:08,452:INFO:Calculating mean and std
2023-06-02 18:42:08,454:INFO:Creating metrics dataframe
2023-06-02 18:42:08,719:INFO:Uploading results into container
2023-06-02 18:42:08,720:INFO:Uploading model into container now
2023-06-02 18:42:08,721:INFO:_master_model_container: 4
2023-06-02 18:42:08,721:INFO:_display_container: 2
2023-06-02 18:42:08,722:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:42:08,722:INFO:create_model() successfully completed......................................
2023-06-02 18:42:08,900:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:08,900:INFO:Creating metrics dataframe
2023-06-02 18:42:08,914:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:42:08,914:INFO:Total runtime is 0.24692805210749305 minutes
2023-06-02 18:42:08,918:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:08,918:INFO:Initializing create_model()
2023-06-02 18:42:08,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:08,919:INFO:Checking exceptions
2023-06-02 18:42:08,919:INFO:Importing libraries
2023-06-02 18:42:08,919:INFO:Copying training dataset
2023-06-02 18:42:08,923:INFO:Defining folds
2023-06-02 18:42:08,924:INFO:Declaring metric variables
2023-06-02 18:42:08,928:INFO:Importing untrained model
2023-06-02 18:42:08,932:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:42:08,940:INFO:Starting cross validation
2023-06-02 18:42:08,941:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:09,109:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:42:09,111:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,115:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,117:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:09,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,124:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:42:09,126:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,129:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,129:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:42:09,131:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:09,131:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,132:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,135:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:42:09,135:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,136:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,137:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:09,140:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,141:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,144:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:09,145:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,148:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:42:09,150:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,154:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:09,156:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:09,158:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,068:INFO:Calculating mean and std
2023-06-02 18:42:10,070:INFO:Creating metrics dataframe
2023-06-02 18:42:10,335:INFO:Uploading results into container
2023-06-02 18:42:10,336:INFO:Uploading model into container now
2023-06-02 18:42:10,337:INFO:_master_model_container: 5
2023-06-02 18:42:10,337:INFO:_display_container: 2
2023-06-02 18:42:10,338:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:42:10,338:INFO:create_model() successfully completed......................................
2023-06-02 18:42:10,508:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:10,508:INFO:Creating metrics dataframe
2023-06-02 18:42:10,523:INFO:Initializing Ridge Classifier
2023-06-02 18:42:10,523:INFO:Total runtime is 0.27372971375783284 minutes
2023-06-02 18:42:10,528:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:10,528:INFO:Initializing create_model()
2023-06-02 18:42:10,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:10,528:INFO:Checking exceptions
2023-06-02 18:42:10,529:INFO:Importing libraries
2023-06-02 18:42:10,529:INFO:Copying training dataset
2023-06-02 18:42:10,533:INFO:Defining folds
2023-06-02 18:42:10,533:INFO:Declaring metric variables
2023-06-02 18:42:10,539:INFO:Importing untrained model
2023-06-02 18:42:10,543:INFO:Ridge Classifier Imported successfully
2023-06-02 18:42:10,551:INFO:Starting cross validation
2023-06-02 18:42:10,553:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:10,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:42:10,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:42:10,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,717:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,718:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,718:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:10,719:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:10,720:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,720:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,734:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:42:10,736:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,743:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:42:10,759:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,760:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:10,760:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,761:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,763:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,763:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:10,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:10,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:10,766:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:11,627:INFO:Calculating mean and std
2023-06-02 18:42:11,628:INFO:Creating metrics dataframe
2023-06-02 18:42:11,892:INFO:Uploading results into container
2023-06-02 18:42:11,893:INFO:Uploading model into container now
2023-06-02 18:42:11,894:INFO:_master_model_container: 6
2023-06-02 18:42:11,894:INFO:_display_container: 2
2023-06-02 18:42:11,894:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:42:11,894:INFO:create_model() successfully completed......................................
2023-06-02 18:42:12,060:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:12,060:INFO:Creating metrics dataframe
2023-06-02 18:42:12,074:INFO:Initializing Random Forest Classifier
2023-06-02 18:42:12,074:INFO:Total runtime is 0.29959052403767905 minutes
2023-06-02 18:42:12,078:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:12,079:INFO:Initializing create_model()
2023-06-02 18:42:12,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:12,079:INFO:Checking exceptions
2023-06-02 18:42:12,079:INFO:Importing libraries
2023-06-02 18:42:12,079:INFO:Copying training dataset
2023-06-02 18:42:12,083:INFO:Defining folds
2023-06-02 18:42:12,084:INFO:Declaring metric variables
2023-06-02 18:42:12,089:INFO:Importing untrained model
2023-06-02 18:42:12,094:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:42:12,102:INFO:Starting cross validation
2023-06-02 18:42:12,104:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:12,986:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,986:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,987:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:12,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,991:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,992:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:12,993:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:12,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:12,995:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:12,997:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:13,003:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:13,006:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:13,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:13,008:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:13,904:INFO:Calculating mean and std
2023-06-02 18:42:13,905:INFO:Creating metrics dataframe
2023-06-02 18:42:14,171:INFO:Uploading results into container
2023-06-02 18:42:14,172:INFO:Uploading model into container now
2023-06-02 18:42:14,173:INFO:_master_model_container: 7
2023-06-02 18:42:14,173:INFO:_display_container: 2
2023-06-02 18:42:14,174:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:42:14,174:INFO:create_model() successfully completed......................................
2023-06-02 18:42:14,353:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:14,353:INFO:Creating metrics dataframe
2023-06-02 18:42:14,369:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:42:14,370:INFO:Total runtime is 0.3378562887509664 minutes
2023-06-02 18:42:14,374:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:14,375:INFO:Initializing create_model()
2023-06-02 18:42:14,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:14,375:INFO:Checking exceptions
2023-06-02 18:42:14,375:INFO:Importing libraries
2023-06-02 18:42:14,375:INFO:Copying training dataset
2023-06-02 18:42:14,380:INFO:Defining folds
2023-06-02 18:42:14,380:INFO:Declaring metric variables
2023-06-02 18:42:14,385:INFO:Importing untrained model
2023-06-02 18:42:14,390:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:42:14,399:INFO:Starting cross validation
2023-06-02 18:42:14,400:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:14,513:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:42:14,518:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:42:14,528:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:42:14,529:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:42:14,531:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:42:14,569:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,570:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,571:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,582:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,583:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,583:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,584:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,584:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,584:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,591:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,592:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,592:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,623:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,624:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,624:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,627:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:42:14,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,631:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:14,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:42:14,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,636:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:14,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,639:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,641:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:42:14,642:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,644:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,644:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,644:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,645:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,647:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:14,648:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,648:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:42:14,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:42:14,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:42:14,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:42:14,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:42:14,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,654:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,655:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:14,656:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,657:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:14,658:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:14,659:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:15,555:INFO:Calculating mean and std
2023-06-02 18:42:15,557:INFO:Creating metrics dataframe
2023-06-02 18:42:15,830:INFO:Uploading results into container
2023-06-02 18:42:15,831:INFO:Uploading model into container now
2023-06-02 18:42:15,831:INFO:_master_model_container: 8
2023-06-02 18:42:15,831:INFO:_display_container: 2
2023-06-02 18:42:15,832:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:42:15,832:INFO:create_model() successfully completed......................................
2023-06-02 18:42:16,005:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:16,005:INFO:Creating metrics dataframe
2023-06-02 18:42:16,021:INFO:Initializing Ada Boost Classifier
2023-06-02 18:42:16,021:INFO:Total runtime is 0.36537504593531295 minutes
2023-06-02 18:42:16,025:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:16,026:INFO:Initializing create_model()
2023-06-02 18:42:16,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:16,026:INFO:Checking exceptions
2023-06-02 18:42:16,026:INFO:Importing libraries
2023-06-02 18:42:16,027:INFO:Copying training dataset
2023-06-02 18:42:16,031:INFO:Defining folds
2023-06-02 18:42:16,031:INFO:Declaring metric variables
2023-06-02 18:42:16,036:INFO:Importing untrained model
2023-06-02 18:42:16,040:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:42:16,048:INFO:Starting cross validation
2023-06-02 18:42:16,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:16,498:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,501:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,502:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:16,503:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,619:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,621:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:16,623:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,623:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,624:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:16,626:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,631:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,634:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:16,636:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:16,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:16,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:17,471:INFO:Calculating mean and std
2023-06-02 18:42:17,472:INFO:Creating metrics dataframe
2023-06-02 18:42:17,743:INFO:Uploading results into container
2023-06-02 18:42:17,744:INFO:Uploading model into container now
2023-06-02 18:42:17,744:INFO:_master_model_container: 9
2023-06-02 18:42:17,745:INFO:_display_container: 2
2023-06-02 18:42:17,745:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:42:17,745:INFO:create_model() successfully completed......................................
2023-06-02 18:42:17,912:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:17,912:INFO:Creating metrics dataframe
2023-06-02 18:42:17,929:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:42:17,929:INFO:Total runtime is 0.3971677660942078 minutes
2023-06-02 18:42:17,933:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:17,934:INFO:Initializing create_model()
2023-06-02 18:42:17,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:17,934:INFO:Checking exceptions
2023-06-02 18:42:17,934:INFO:Importing libraries
2023-06-02 18:42:17,934:INFO:Copying training dataset
2023-06-02 18:42:17,939:INFO:Defining folds
2023-06-02 18:42:17,939:INFO:Declaring metric variables
2023-06-02 18:42:17,943:INFO:Importing untrained model
2023-06-02 18:42:17,948:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:42:17,956:INFO:Starting cross validation
2023-06-02 18:42:17,957:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:19,671:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:42:19,685:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:42:19,693:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:42:19,705:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:42:19,707:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:42:21,213:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,216:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,217:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:21,218:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,264:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,267:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,268:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:21,270:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,276:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,278:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,280:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,280:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:21,281:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,283:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,285:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:21,287:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,301:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,304:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:21,306:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:21,307:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,159:INFO:Calculating mean and std
2023-06-02 18:42:22,161:INFO:Creating metrics dataframe
2023-06-02 18:42:22,431:INFO:Uploading results into container
2023-06-02 18:42:22,432:INFO:Uploading model into container now
2023-06-02 18:42:22,432:INFO:_master_model_container: 10
2023-06-02 18:42:22,432:INFO:_display_container: 2
2023-06-02 18:42:22,433:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:42:22,433:INFO:create_model() successfully completed......................................
2023-06-02 18:42:22,605:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:22,606:INFO:Creating metrics dataframe
2023-06-02 18:42:22,623:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:42:22,623:INFO:Total runtime is 0.4754098733266195 minutes
2023-06-02 18:42:22,627:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:22,628:INFO:Initializing create_model()
2023-06-02 18:42:22,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:22,628:INFO:Checking exceptions
2023-06-02 18:42:22,628:INFO:Importing libraries
2023-06-02 18:42:22,628:INFO:Copying training dataset
2023-06-02 18:42:22,633:INFO:Defining folds
2023-06-02 18:42:22,633:INFO:Declaring metric variables
2023-06-02 18:42:22,637:INFO:Importing untrained model
2023-06-02 18:42:22,642:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:42:22,650:INFO:Starting cross validation
2023-06-02 18:42:22,652:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:22,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,879:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,880:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,881:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,882:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,882:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:22,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:22,883:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:22,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,884:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,885:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,888:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,891:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,893:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:22,894:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,897:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,900:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:22,902:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:22,904:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:23,816:INFO:Calculating mean and std
2023-06-02 18:42:23,817:INFO:Creating metrics dataframe
2023-06-02 18:42:24,096:INFO:Uploading results into container
2023-06-02 18:42:24,097:INFO:Uploading model into container now
2023-06-02 18:42:24,097:INFO:_master_model_container: 11
2023-06-02 18:42:24,097:INFO:_display_container: 2
2023-06-02 18:42:24,098:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:42:24,098:INFO:create_model() successfully completed......................................
2023-06-02 18:42:24,260:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:24,261:INFO:Creating metrics dataframe
2023-06-02 18:42:24,277:INFO:Initializing Extra Trees Classifier
2023-06-02 18:42:24,277:INFO:Total runtime is 0.5029648423194886 minutes
2023-06-02 18:42:24,281:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:24,281:INFO:Initializing create_model()
2023-06-02 18:42:24,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:24,281:INFO:Checking exceptions
2023-06-02 18:42:24,281:INFO:Importing libraries
2023-06-02 18:42:24,281:INFO:Copying training dataset
2023-06-02 18:42:24,286:INFO:Defining folds
2023-06-02 18:42:24,286:INFO:Declaring metric variables
2023-06-02 18:42:24,290:INFO:Importing untrained model
2023-06-02 18:42:24,294:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:42:24,301:INFO:Starting cross validation
2023-06-02 18:42:24,303:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:25,141:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,144:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,146:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:25,147:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,159:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,162:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,163:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:25,164:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,165:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,169:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,171:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,171:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:25,173:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,174:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,176:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:25,178:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,194:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,196:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:25,198:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:25,199:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,115:INFO:Calculating mean and std
2023-06-02 18:42:26,116:INFO:Creating metrics dataframe
2023-06-02 18:42:26,401:INFO:Uploading results into container
2023-06-02 18:42:26,401:INFO:Uploading model into container now
2023-06-02 18:42:26,402:INFO:_master_model_container: 12
2023-06-02 18:42:26,402:INFO:_display_container: 2
2023-06-02 18:42:26,403:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:42:26,403:INFO:create_model() successfully completed......................................
2023-06-02 18:42:26,568:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:26,568:INFO:Creating metrics dataframe
2023-06-02 18:42:26,585:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:42:26,586:INFO:Total runtime is 0.5414602359135946 minutes
2023-06-02 18:42:26,590:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:26,590:INFO:Initializing create_model()
2023-06-02 18:42:26,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:26,591:INFO:Checking exceptions
2023-06-02 18:42:26,591:INFO:Importing libraries
2023-06-02 18:42:26,591:INFO:Copying training dataset
2023-06-02 18:42:26,595:INFO:Defining folds
2023-06-02 18:42:26,595:INFO:Declaring metric variables
2023-06-02 18:42:26,599:INFO:Importing untrained model
2023-06-02 18:42:26,604:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:42:26,613:INFO:Starting cross validation
2023-06-02 18:42:26,614:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:26,964:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,967:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,968:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:26,970:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,971:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,973:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,975:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:26,976:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,978:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,980:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,981:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,982:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:26,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,986:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:26,988:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:26,998:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:27,001:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:27,003:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:27,004:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:27,914:INFO:Calculating mean and std
2023-06-02 18:42:27,916:INFO:Creating metrics dataframe
2023-06-02 18:42:28,200:INFO:Uploading results into container
2023-06-02 18:42:28,201:INFO:Uploading model into container now
2023-06-02 18:42:28,201:INFO:_master_model_container: 13
2023-06-02 18:42:28,201:INFO:_display_container: 2
2023-06-02 18:42:28,202:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:42:28,202:INFO:create_model() successfully completed......................................
2023-06-02 18:42:28,367:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:28,367:INFO:Creating metrics dataframe
2023-06-02 18:42:28,390:INFO:Initializing Dummy Classifier
2023-06-02 18:42:28,391:INFO:Total runtime is 0.5715375383694967 minutes
2023-06-02 18:42:28,394:INFO:SubProcess create_model() called ==================================
2023-06-02 18:42:28,395:INFO:Initializing create_model()
2023-06-02 18:42:28,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D3E0FC4F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:28,395:INFO:Checking exceptions
2023-06-02 18:42:28,395:INFO:Importing libraries
2023-06-02 18:42:28,395:INFO:Copying training dataset
2023-06-02 18:42:28,401:INFO:Defining folds
2023-06-02 18:42:28,401:INFO:Declaring metric variables
2023-06-02 18:42:28,405:INFO:Importing untrained model
2023-06-02 18:42:28,409:INFO:Dummy Classifier Imported successfully
2023-06-02 18:42:28,416:INFO:Starting cross validation
2023-06-02 18:42:28,418:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:42:28,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,632:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,633:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,634:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:28,634:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:28,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,635:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,637:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:28,639:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,640:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,644:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,645:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:28,646:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,651:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,655:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:28,656:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:42:28,657:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:42:29,575:INFO:Calculating mean and std
2023-06-02 18:42:29,576:INFO:Creating metrics dataframe
2023-06-02 18:42:29,869:INFO:Uploading results into container
2023-06-02 18:42:29,870:INFO:Uploading model into container now
2023-06-02 18:42:29,870:INFO:_master_model_container: 14
2023-06-02 18:42:29,870:INFO:_display_container: 2
2023-06-02 18:42:29,871:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:42:29,871:INFO:create_model() successfully completed......................................
2023-06-02 18:42:30,038:INFO:SubProcess create_model() end ==================================
2023-06-02 18:42:30,038:INFO:Creating metrics dataframe
2023-06-02 18:42:30,067:INFO:Initializing create_model()
2023-06-02 18:42:30,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:30,067:INFO:Checking exceptions
2023-06-02 18:42:30,070:INFO:Importing libraries
2023-06-02 18:42:30,070:INFO:Copying training dataset
2023-06-02 18:42:30,074:INFO:Defining folds
2023-06-02 18:42:30,074:INFO:Declaring metric variables
2023-06-02 18:42:30,074:INFO:Importing untrained model
2023-06-02 18:42:30,074:INFO:Declaring custom model
2023-06-02 18:42:30,075:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:42:30,076:INFO:Cross validation set to False
2023-06-02 18:42:30,076:INFO:Fitting Model
2023-06-02 18:42:30,150:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:42:30,363:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:42:30,363:INFO:create_model() successfully completed......................................
2023-06-02 18:42:30,531:INFO:Initializing create_model()
2023-06-02 18:42:30,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:30,531:INFO:Checking exceptions
2023-06-02 18:42:30,533:INFO:Importing libraries
2023-06-02 18:42:30,534:INFO:Copying training dataset
2023-06-02 18:42:30,537:INFO:Defining folds
2023-06-02 18:42:30,537:INFO:Declaring metric variables
2023-06-02 18:42:30,538:INFO:Importing untrained model
2023-06-02 18:42:30,538:INFO:Declaring custom model
2023-06-02 18:42:30,538:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:42:30,540:INFO:Cross validation set to False
2023-06-02 18:42:30,540:INFO:Fitting Model
2023-06-02 18:42:30,838:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:42:30,838:INFO:create_model() successfully completed......................................
2023-06-02 18:42:31,005:INFO:Initializing create_model()
2023-06-02 18:42:31,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:31,006:INFO:Checking exceptions
2023-06-02 18:42:31,008:INFO:Importing libraries
2023-06-02 18:42:31,008:INFO:Copying training dataset
2023-06-02 18:42:31,012:INFO:Defining folds
2023-06-02 18:42:31,012:INFO:Declaring metric variables
2023-06-02 18:42:31,012:INFO:Importing untrained model
2023-06-02 18:42:31,012:INFO:Declaring custom model
2023-06-02 18:42:31,012:INFO:Naive Bayes Imported successfully
2023-06-02 18:42:31,014:INFO:Cross validation set to False
2023-06-02 18:42:31,014:INFO:Fitting Model
2023-06-02 18:42:31,315:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:42:31,315:INFO:create_model() successfully completed......................................
2023-06-02 18:42:31,483:INFO:Initializing create_model()
2023-06-02 18:42:31,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:31,483:INFO:Checking exceptions
2023-06-02 18:42:31,486:INFO:Importing libraries
2023-06-02 18:42:31,486:INFO:Copying training dataset
2023-06-02 18:42:31,492:INFO:Defining folds
2023-06-02 18:42:31,492:INFO:Declaring metric variables
2023-06-02 18:42:31,492:INFO:Importing untrained model
2023-06-02 18:42:31,492:INFO:Declaring custom model
2023-06-02 18:42:31,493:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:42:31,495:INFO:Cross validation set to False
2023-06-02 18:42:31,495:INFO:Fitting Model
2023-06-02 18:42:31,794:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:42:31,794:INFO:create_model() successfully completed......................................
2023-06-02 18:42:31,961:INFO:Initializing create_model()
2023-06-02 18:42:31,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43D0C490>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:42:31,961:INFO:Checking exceptions
2023-06-02 18:42:31,963:INFO:Importing libraries
2023-06-02 18:42:31,964:INFO:Copying training dataset
2023-06-02 18:42:31,967:INFO:Defining folds
2023-06-02 18:42:31,967:INFO:Declaring metric variables
2023-06-02 18:42:31,967:INFO:Importing untrained model
2023-06-02 18:42:31,967:INFO:Declaring custom model
2023-06-02 18:42:31,968:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:42:31,969:INFO:Cross validation set to False
2023-06-02 18:42:31,969:INFO:Fitting Model
2023-06-02 18:42:32,645:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:42:32,645:INFO:create_model() successfully completed......................................
2023-06-02 18:42:32,846:INFO:_master_model_container: 14
2023-06-02 18:42:32,846:INFO:_display_container: 2
2023-06-02 18:42:32,847:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:42:32,848:INFO:compare_models() successfully completed......................................
2023-06-02 18:42:33,107:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_15692\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:42:38,758:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\ray\tune\experiment\experiment.py:170: UserWarning: The `local_dir` argument of `Experiment is deprecated. Use `storage_path` or set the `TUNE_RESULT_DIR` environment variable instead.
  warnings.warn(

2023-06-02 18:43:40,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:43:40,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:43:40,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:43:40,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:43:40,840:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:43:41,288:INFO:PyCaret ClassificationExperiment
2023-06-02 18:43:41,288:INFO:Logging name: clf-default-name
2023-06-02 18:43:41,288:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:43:41,288:INFO:version 3.0.2
2023-06-02 18:43:41,289:INFO:Initializing setup()
2023-06-02 18:43:41,289:INFO:self.USI: 90fa
2023-06-02 18:43:41,289:INFO:self._variable_keys: {'exp_name_log', 'fold_generator', 'y', 'data', 'target_param', '_available_plots', 'gpu_param', 'html_param', 'y_test', 'X', 'log_plots_param', 'USI', 'X_train', 'exp_id', 'seed', 'fold_groups_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'idx', 'is_multiclass', 'fix_imbalance', 'n_jobs_param', '_ml_usecase', 'y_train', 'logging_param', 'X_test', 'memory', 'pipeline'}
2023-06-02 18:43:41,289:INFO:Checking environment
2023-06-02 18:43:41,289:INFO:python_version: 3.8.16
2023-06-02 18:43:41,289:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:43:41,289:INFO:machine: AMD64
2023-06-02 18:43:41,289:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:43:41,290:INFO:Memory: svmem(total=17106501632, available=8476708864, percent=50.4, used=8629792768, free=8476708864)
2023-06-02 18:43:41,290:INFO:Physical Core: 6
2023-06-02 18:43:41,290:INFO:Logical Core: 12
2023-06-02 18:43:41,290:INFO:Checking libraries
2023-06-02 18:43:41,290:INFO:System:
2023-06-02 18:43:41,290:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:43:41,290:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:43:41,290:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:43:41,290:INFO:PyCaret required dependencies:
2023-06-02 18:43:41,290:INFO:                 pip: 23.0.1
2023-06-02 18:43:41,291:INFO:          setuptools: 67.8.0
2023-06-02 18:43:41,291:INFO:             pycaret: 3.0.2
2023-06-02 18:43:41,291:INFO:             IPython: 8.8.0
2023-06-02 18:43:41,291:INFO:          ipywidgets: 8.0.6
2023-06-02 18:43:41,291:INFO:                tqdm: 4.65.0
2023-06-02 18:43:41,291:INFO:               numpy: 1.23.5
2023-06-02 18:43:41,291:INFO:              pandas: 1.5.3
2023-06-02 18:43:41,291:INFO:              jinja2: 3.1.2
2023-06-02 18:43:41,291:INFO:               scipy: 1.10.1
2023-06-02 18:43:41,291:INFO:              joblib: 1.2.0
2023-06-02 18:43:41,291:INFO:             sklearn: 1.2.2
2023-06-02 18:43:41,291:INFO:                pyod: 1.0.9
2023-06-02 18:43:41,292:INFO:            imblearn: 0.10.1
2023-06-02 18:43:41,292:INFO:   category_encoders: 2.6.1
2023-06-02 18:43:41,292:INFO:            lightgbm: 3.3.5
2023-06-02 18:43:41,292:INFO:               numba: 0.57.0
2023-06-02 18:43:41,292:INFO:            requests: 2.31.0
2023-06-02 18:43:41,292:INFO:          matplotlib: 3.7.1
2023-06-02 18:43:41,292:INFO:          scikitplot: 0.3.7
2023-06-02 18:43:41,292:INFO:         yellowbrick: 1.5
2023-06-02 18:43:41,292:INFO:              plotly: 5.14.1
2023-06-02 18:43:41,292:INFO:             kaleido: 0.2.1
2023-06-02 18:43:41,292:INFO:         statsmodels: 0.14.0
2023-06-02 18:43:41,292:INFO:              sktime: 0.17.0
2023-06-02 18:43:41,293:INFO:               tbats: 1.1.3
2023-06-02 18:43:41,293:INFO:            pmdarima: 2.0.3
2023-06-02 18:43:41,293:INFO:              psutil: 5.9.5
2023-06-02 18:43:41,293:INFO:PyCaret optional dependencies:
2023-06-02 18:43:41,317:INFO:                shap: Not installed
2023-06-02 18:43:41,317:INFO:           interpret: Not installed
2023-06-02 18:43:41,317:INFO:                umap: Not installed
2023-06-02 18:43:41,317:INFO:    pandas_profiling: Not installed
2023-06-02 18:43:41,317:INFO:  explainerdashboard: Not installed
2023-06-02 18:43:41,318:INFO:             autoviz: Not installed
2023-06-02 18:43:41,318:INFO:           fairlearn: Not installed
2023-06-02 18:43:41,318:INFO:             xgboost: Not installed
2023-06-02 18:43:41,318:INFO:            catboost: Not installed
2023-06-02 18:43:41,318:INFO:              kmodes: Not installed
2023-06-02 18:43:41,318:INFO:             mlxtend: Not installed
2023-06-02 18:43:41,318:INFO:       statsforecast: Not installed
2023-06-02 18:43:41,318:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:43:41,318:INFO:                 ray: 2.4.0
2023-06-02 18:43:41,318:INFO:            hyperopt: Not installed
2023-06-02 18:43:41,319:INFO:              optuna: Not installed
2023-06-02 18:43:41,319:INFO:               skopt: Not installed
2023-06-02 18:43:41,319:INFO:              mlflow: Not installed
2023-06-02 18:43:41,319:INFO:              gradio: Not installed
2023-06-02 18:43:41,319:INFO:             fastapi: Not installed
2023-06-02 18:43:41,319:INFO:             uvicorn: Not installed
2023-06-02 18:43:41,319:INFO:              m2cgen: Not installed
2023-06-02 18:43:41,319:INFO:           evidently: Not installed
2023-06-02 18:43:41,319:INFO:               fugue: Not installed
2023-06-02 18:43:41,319:INFO:           streamlit: Not installed
2023-06-02 18:43:41,319:INFO:             prophet: Not installed
2023-06-02 18:43:41,319:INFO:None
2023-06-02 18:43:41,319:INFO:Set up data.
2023-06-02 18:43:41,325:INFO:Set up train/test split.
2023-06-02 18:43:41,330:INFO:Set up index.
2023-06-02 18:43:41,330:INFO:Set up folding strategy.
2023-06-02 18:43:41,330:INFO:Assigning column types.
2023-06-02 18:43:41,335:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:43:41,408:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:43:41,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:43:41,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:43:41,569:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:43:41,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,623:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:43:41,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:43:41,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,811:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:43:41,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,855:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:43:41,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:41,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,089:INFO:Preparing preprocessing pipeline...
2023-06-02 18:43:42,090:INFO:Set up label encoding.
2023-06-02 18:43:42,090:INFO:Set up simple imputation.
2023-06-02 18:43:42,092:INFO:Set up encoding of categorical features.
2023-06-02 18:43:42,164:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:43:42,175:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:43:42,175:INFO:Creating final display dataframe.
2023-06-02 18:43:42,416:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               90fa  
2023-06-02 18:43:42,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:43:42,654:INFO:setup() successfully completed in 1.63s...............
2023-06-02 18:43:42,711:INFO:Initializing compare_models()
2023-06-02 18:43:42,711:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:43:42,711:INFO:Checking exceptions
2023-06-02 18:43:42,715:INFO:Preparing display monitor
2023-06-02 18:43:42,746:INFO:Initializing Logistic Regression
2023-06-02 18:43:42,746:INFO:Total runtime is 0.0 minutes
2023-06-02 18:43:42,750:INFO:SubProcess create_model() called ==================================
2023-06-02 18:43:42,751:INFO:Initializing create_model()
2023-06-02 18:43:42,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:43:42,751:INFO:Checking exceptions
2023-06-02 18:43:42,751:INFO:Importing libraries
2023-06-02 18:43:42,751:INFO:Copying training dataset
2023-06-02 18:43:42,759:INFO:Defining folds
2023-06-02 18:43:42,760:INFO:Declaring metric variables
2023-06-02 18:43:42,764:INFO:Importing untrained model
2023-06-02 18:43:42,770:INFO:Logistic Regression Imported successfully
2023-06-02 18:43:42,785:INFO:Starting cross validation
2023-06-02 18:43:42,786:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:43:47,320:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,323:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,324:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:47,326:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,333:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,335:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,337:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:47,338:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,338:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,341:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,343:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:47,344:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,347:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,350:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,351:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:47,353:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,360:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,362:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:47,364:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:47,365:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:48,302:INFO:Calculating mean and std
2023-06-02 18:43:48,304:INFO:Creating metrics dataframe
2023-06-02 18:43:48,579:INFO:Uploading results into container
2023-06-02 18:43:48,580:INFO:Uploading model into container now
2023-06-02 18:43:48,581:INFO:_master_model_container: 1
2023-06-02 18:43:48,581:INFO:_display_container: 2
2023-06-02 18:43:48,581:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:43:48,581:INFO:create_model() successfully completed......................................
2023-06-02 18:43:48,733:INFO:SubProcess create_model() end ==================================
2023-06-02 18:43:48,733:INFO:Creating metrics dataframe
2023-06-02 18:43:48,745:INFO:Initializing K Neighbors Classifier
2023-06-02 18:43:48,745:INFO:Total runtime is 0.0999857465426127 minutes
2023-06-02 18:43:48,748:INFO:SubProcess create_model() called ==================================
2023-06-02 18:43:48,749:INFO:Initializing create_model()
2023-06-02 18:43:48,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:43:48,749:INFO:Checking exceptions
2023-06-02 18:43:48,749:INFO:Importing libraries
2023-06-02 18:43:48,750:INFO:Copying training dataset
2023-06-02 18:43:48,754:INFO:Defining folds
2023-06-02 18:43:48,754:INFO:Declaring metric variables
2023-06-02 18:43:48,759:INFO:Importing untrained model
2023-06-02 18:43:48,765:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:43:48,772:INFO:Starting cross validation
2023-06-02 18:43:48,774:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:43:51,717:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,721:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:51,724:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,724:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:51,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,753:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,754:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:51,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:51,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:51,756:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,756:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:51,756:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:52,694:INFO:Calculating mean and std
2023-06-02 18:43:52,695:INFO:Creating metrics dataframe
2023-06-02 18:43:52,967:INFO:Uploading results into container
2023-06-02 18:43:52,967:INFO:Uploading model into container now
2023-06-02 18:43:52,968:INFO:_master_model_container: 2
2023-06-02 18:43:52,968:INFO:_display_container: 2
2023-06-02 18:43:52,968:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:43:52,968:INFO:create_model() successfully completed......................................
2023-06-02 18:43:53,124:INFO:SubProcess create_model() end ==================================
2023-06-02 18:43:53,124:INFO:Creating metrics dataframe
2023-06-02 18:43:53,137:INFO:Initializing Naive Bayes
2023-06-02 18:43:53,137:INFO:Total runtime is 0.17318813800811766 minutes
2023-06-02 18:43:53,142:INFO:SubProcess create_model() called ==================================
2023-06-02 18:43:53,142:INFO:Initializing create_model()
2023-06-02 18:43:53,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:43:53,142:INFO:Checking exceptions
2023-06-02 18:43:53,143:INFO:Importing libraries
2023-06-02 18:43:53,143:INFO:Copying training dataset
2023-06-02 18:43:53,147:INFO:Defining folds
2023-06-02 18:43:53,148:INFO:Declaring metric variables
2023-06-02 18:43:53,152:INFO:Importing untrained model
2023-06-02 18:43:53,156:INFO:Naive Bayes Imported successfully
2023-06-02 18:43:53,166:INFO:Starting cross validation
2023-06-02 18:43:53,168:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:43:53,400:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,403:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,404:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:53,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,406:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,409:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,410:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,411:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,412:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:53,413:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:53,414:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:53,414:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,702:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,704:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,705:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,706:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:55,707:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,707:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:55,709:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:55,971:INFO:Calculating mean and std
2023-06-02 18:43:55,972:INFO:Creating metrics dataframe
2023-06-02 18:43:56,244:INFO:Uploading results into container
2023-06-02 18:43:56,245:INFO:Uploading model into container now
2023-06-02 18:43:56,246:INFO:_master_model_container: 3
2023-06-02 18:43:56,246:INFO:_display_container: 2
2023-06-02 18:43:56,246:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:43:56,246:INFO:create_model() successfully completed......................................
2023-06-02 18:43:56,396:INFO:SubProcess create_model() end ==================================
2023-06-02 18:43:56,396:INFO:Creating metrics dataframe
2023-06-02 18:43:56,410:INFO:Initializing Decision Tree Classifier
2023-06-02 18:43:56,410:INFO:Total runtime is 0.22772615750630695 minutes
2023-06-02 18:43:56,414:INFO:SubProcess create_model() called ==================================
2023-06-02 18:43:56,414:INFO:Initializing create_model()
2023-06-02 18:43:56,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:43:56,414:INFO:Checking exceptions
2023-06-02 18:43:56,414:INFO:Importing libraries
2023-06-02 18:43:56,415:INFO:Copying training dataset
2023-06-02 18:43:56,419:INFO:Defining folds
2023-06-02 18:43:56,419:INFO:Declaring metric variables
2023-06-02 18:43:56,422:INFO:Importing untrained model
2023-06-02 18:43:56,427:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:43:56,436:INFO:Starting cross validation
2023-06-02 18:43:56,438:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:43:56,655:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,655:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,657:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,658:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,659:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:56,659:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:56,660:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,660:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,667:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,669:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,671:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:56,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,674:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,676:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,678:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:56,679:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,685:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,689:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:56,691:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:56,693:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:57,597:INFO:Calculating mean and std
2023-06-02 18:43:57,598:INFO:Creating metrics dataframe
2023-06-02 18:43:57,858:INFO:Uploading results into container
2023-06-02 18:43:57,859:INFO:Uploading model into container now
2023-06-02 18:43:57,859:INFO:_master_model_container: 4
2023-06-02 18:43:57,859:INFO:_display_container: 2
2023-06-02 18:43:57,860:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:43:57,860:INFO:create_model() successfully completed......................................
2023-06-02 18:43:58,012:INFO:SubProcess create_model() end ==================================
2023-06-02 18:43:58,013:INFO:Creating metrics dataframe
2023-06-02 18:43:58,028:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:43:58,028:INFO:Total runtime is 0.25469741423924763 minutes
2023-06-02 18:43:58,032:INFO:SubProcess create_model() called ==================================
2023-06-02 18:43:58,032:INFO:Initializing create_model()
2023-06-02 18:43:58,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:43:58,033:INFO:Checking exceptions
2023-06-02 18:43:58,033:INFO:Importing libraries
2023-06-02 18:43:58,033:INFO:Copying training dataset
2023-06-02 18:43:58,038:INFO:Defining folds
2023-06-02 18:43:58,038:INFO:Declaring metric variables
2023-06-02 18:43:58,042:INFO:Importing untrained model
2023-06-02 18:43:58,048:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:43:58,056:INFO:Starting cross validation
2023-06-02 18:43:58,057:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:43:58,231:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:43:58,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:43:58,232:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,233:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,236:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:58,236:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,237:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,239:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:58,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,245:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:43:58,246:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,247:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:43:58,249:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,249:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,251:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:58,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:43:58,253:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:58,254:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,254:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:58,259:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:58,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,178:INFO:Calculating mean and std
2023-06-02 18:43:59,180:INFO:Creating metrics dataframe
2023-06-02 18:43:59,446:INFO:Uploading results into container
2023-06-02 18:43:59,447:INFO:Uploading model into container now
2023-06-02 18:43:59,448:INFO:_master_model_container: 5
2023-06-02 18:43:59,448:INFO:_display_container: 2
2023-06-02 18:43:59,449:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:43:59,449:INFO:create_model() successfully completed......................................
2023-06-02 18:43:59,598:INFO:SubProcess create_model() end ==================================
2023-06-02 18:43:59,598:INFO:Creating metrics dataframe
2023-06-02 18:43:59,613:INFO:Initializing Ridge Classifier
2023-06-02 18:43:59,613:INFO:Total runtime is 0.28112295468648274 minutes
2023-06-02 18:43:59,617:INFO:SubProcess create_model() called ==================================
2023-06-02 18:43:59,617:INFO:Initializing create_model()
2023-06-02 18:43:59,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:43:59,617:INFO:Checking exceptions
2023-06-02 18:43:59,617:INFO:Importing libraries
2023-06-02 18:43:59,618:INFO:Copying training dataset
2023-06-02 18:43:59,622:INFO:Defining folds
2023-06-02 18:43:59,623:INFO:Declaring metric variables
2023-06-02 18:43:59,627:INFO:Importing untrained model
2023-06-02 18:43:59,632:INFO:Ridge Classifier Imported successfully
2023-06-02 18:43:59,639:INFO:Starting cross validation
2023-06-02 18:43:59,640:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:43:59,798:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:43:59,800:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,803:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:43:59,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:59,804:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,806:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:43:59,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:59,810:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,810:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,810:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:43:59,811:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:59,812:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,812:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:43:59,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,814:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:59,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,817:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:43:59,818:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:43:59,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:00,772:INFO:Calculating mean and std
2023-06-02 18:44:00,773:INFO:Creating metrics dataframe
2023-06-02 18:44:01,040:INFO:Uploading results into container
2023-06-02 18:44:01,041:INFO:Uploading model into container now
2023-06-02 18:44:01,042:INFO:_master_model_container: 6
2023-06-02 18:44:01,042:INFO:_display_container: 2
2023-06-02 18:44:01,042:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:44:01,042:INFO:create_model() successfully completed......................................
2023-06-02 18:44:01,193:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:01,193:INFO:Creating metrics dataframe
2023-06-02 18:44:01,208:INFO:Initializing Random Forest Classifier
2023-06-02 18:44:01,209:INFO:Total runtime is 0.3077120621999105 minutes
2023-06-02 18:44:01,212:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:01,212:INFO:Initializing create_model()
2023-06-02 18:44:01,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:01,213:INFO:Checking exceptions
2023-06-02 18:44:01,213:INFO:Importing libraries
2023-06-02 18:44:01,213:INFO:Copying training dataset
2023-06-02 18:44:01,217:INFO:Defining folds
2023-06-02 18:44:01,217:INFO:Declaring metric variables
2023-06-02 18:44:01,222:INFO:Importing untrained model
2023-06-02 18:44:01,226:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:44:01,234:INFO:Starting cross validation
2023-06-02 18:44:01,236:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:02,104:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,106:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,108:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:02,109:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,118:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,120:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:02,122:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,123:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,125:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,125:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,126:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:02,126:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:02,128:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,128:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,154:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,156:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:02,158:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:02,160:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,078:INFO:Calculating mean and std
2023-06-02 18:44:03,081:INFO:Creating metrics dataframe
2023-06-02 18:44:03,350:INFO:Uploading results into container
2023-06-02 18:44:03,351:INFO:Uploading model into container now
2023-06-02 18:44:03,352:INFO:_master_model_container: 7
2023-06-02 18:44:03,352:INFO:_display_container: 2
2023-06-02 18:44:03,353:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:44:03,353:INFO:create_model() successfully completed......................................
2023-06-02 18:44:03,503:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:03,503:INFO:Creating metrics dataframe
2023-06-02 18:44:03,519:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:44:03,519:INFO:Total runtime is 0.34621355930964154 minutes
2023-06-02 18:44:03,523:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:03,523:INFO:Initializing create_model()
2023-06-02 18:44:03,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:03,524:INFO:Checking exceptions
2023-06-02 18:44:03,524:INFO:Importing libraries
2023-06-02 18:44:03,524:INFO:Copying training dataset
2023-06-02 18:44:03,529:INFO:Defining folds
2023-06-02 18:44:03,530:INFO:Declaring metric variables
2023-06-02 18:44:03,534:INFO:Importing untrained model
2023-06-02 18:44:03,538:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:44:03,547:INFO:Starting cross validation
2023-06-02 18:44:03,549:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:03,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:44:03,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:44:03,661:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:44:03,664:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:44:03,667:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:44:03,701:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,702:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,702:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,704:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,705:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,705:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,712:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,712:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,712:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,715:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,718:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,719:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,719:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,754:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,755:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,757:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,757:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,757:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,758:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:44:03,759:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,761:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:44:03,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,763:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:03,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,765:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,767:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:03,768:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,769:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,770:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,772:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:44:03,773:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:44:03,774:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,774:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,775:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:44:03,776:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:44:03,776:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:44:03,776:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,778:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,778:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:03,780:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:03,780:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,780:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:44:03,781:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,782:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,784:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:03,786:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:03,787:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:04,712:INFO:Calculating mean and std
2023-06-02 18:44:04,713:INFO:Creating metrics dataframe
2023-06-02 18:44:04,983:INFO:Uploading results into container
2023-06-02 18:44:04,984:INFO:Uploading model into container now
2023-06-02 18:44:04,985:INFO:_master_model_container: 8
2023-06-02 18:44:04,985:INFO:_display_container: 2
2023-06-02 18:44:04,985:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:44:04,985:INFO:create_model() successfully completed......................................
2023-06-02 18:44:05,142:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:05,142:INFO:Creating metrics dataframe
2023-06-02 18:44:05,159:INFO:Initializing Ada Boost Classifier
2023-06-02 18:44:05,159:INFO:Total runtime is 0.3735501368840536 minutes
2023-06-02 18:44:05,166:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:05,166:INFO:Initializing create_model()
2023-06-02 18:44:05,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:05,167:INFO:Checking exceptions
2023-06-02 18:44:05,167:INFO:Importing libraries
2023-06-02 18:44:05,167:INFO:Copying training dataset
2023-06-02 18:44:05,174:INFO:Defining folds
2023-06-02 18:44:05,174:INFO:Declaring metric variables
2023-06-02 18:44:05,179:INFO:Importing untrained model
2023-06-02 18:44:05,183:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:44:05,192:INFO:Starting cross validation
2023-06-02 18:44:05,193:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:05,613:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,615:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,617:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:05,618:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,622:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,624:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,626:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:05,627:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,638:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,641:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,643:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:05,644:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,646:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,652:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:05,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,756:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,761:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:05,762:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:05,764:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:06,600:INFO:Calculating mean and std
2023-06-02 18:44:06,601:INFO:Creating metrics dataframe
2023-06-02 18:44:06,875:INFO:Uploading results into container
2023-06-02 18:44:06,876:INFO:Uploading model into container now
2023-06-02 18:44:06,877:INFO:_master_model_container: 9
2023-06-02 18:44:06,877:INFO:_display_container: 2
2023-06-02 18:44:06,877:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:44:06,878:INFO:create_model() successfully completed......................................
2023-06-02 18:44:07,032:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:07,032:INFO:Creating metrics dataframe
2023-06-02 18:44:07,048:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:44:07,048:INFO:Total runtime is 0.4050310055414836 minutes
2023-06-02 18:44:07,052:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:07,053:INFO:Initializing create_model()
2023-06-02 18:44:07,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:07,053:INFO:Checking exceptions
2023-06-02 18:44:07,053:INFO:Importing libraries
2023-06-02 18:44:07,053:INFO:Copying training dataset
2023-06-02 18:44:07,057:INFO:Defining folds
2023-06-02 18:44:07,058:INFO:Declaring metric variables
2023-06-02 18:44:07,062:INFO:Importing untrained model
2023-06-02 18:44:07,066:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:44:07,073:INFO:Starting cross validation
2023-06-02 18:44:07,075:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:08,692:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:44:08,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:44:08,719:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:44:08,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:44:08,741:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:44:10,223:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,225:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,227:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:10,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,242:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,244:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:10,245:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,247:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,250:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,251:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:10,252:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,255:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,257:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,259:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:10,260:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,288:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,291:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:10,293:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:10,294:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,220:INFO:Calculating mean and std
2023-06-02 18:44:11,222:INFO:Creating metrics dataframe
2023-06-02 18:44:11,498:INFO:Uploading results into container
2023-06-02 18:44:11,499:INFO:Uploading model into container now
2023-06-02 18:44:11,499:INFO:_master_model_container: 10
2023-06-02 18:44:11,499:INFO:_display_container: 2
2023-06-02 18:44:11,500:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:44:11,500:INFO:create_model() successfully completed......................................
2023-06-02 18:44:11,652:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:11,652:INFO:Creating metrics dataframe
2023-06-02 18:44:11,669:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:44:11,669:INFO:Total runtime is 0.48204628626505536 minutes
2023-06-02 18:44:11,673:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:11,673:INFO:Initializing create_model()
2023-06-02 18:44:11,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:11,673:INFO:Checking exceptions
2023-06-02 18:44:11,674:INFO:Importing libraries
2023-06-02 18:44:11,674:INFO:Copying training dataset
2023-06-02 18:44:11,679:INFO:Defining folds
2023-06-02 18:44:11,679:INFO:Declaring metric variables
2023-06-02 18:44:11,683:INFO:Importing untrained model
2023-06-02 18:44:11,688:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:44:11,696:INFO:Starting cross validation
2023-06-02 18:44:11,698:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:11,908:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,910:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,912:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:11,913:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,916:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,919:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,920:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:11,921:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,922:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,922:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,923:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:11,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,925:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,926:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:11,928:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,929:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:11,930:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:11,931:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:12,896:INFO:Calculating mean and std
2023-06-02 18:44:12,898:INFO:Creating metrics dataframe
2023-06-02 18:44:13,174:INFO:Uploading results into container
2023-06-02 18:44:13,175:INFO:Uploading model into container now
2023-06-02 18:44:13,176:INFO:_master_model_container: 11
2023-06-02 18:44:13,176:INFO:_display_container: 2
2023-06-02 18:44:13,176:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:44:13,176:INFO:create_model() successfully completed......................................
2023-06-02 18:44:13,334:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:13,334:INFO:Creating metrics dataframe
2023-06-02 18:44:13,351:INFO:Initializing Extra Trees Classifier
2023-06-02 18:44:13,351:INFO:Total runtime is 0.5100820581118266 minutes
2023-06-02 18:44:13,355:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:13,356:INFO:Initializing create_model()
2023-06-02 18:44:13,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:13,356:INFO:Checking exceptions
2023-06-02 18:44:13,356:INFO:Importing libraries
2023-06-02 18:44:13,356:INFO:Copying training dataset
2023-06-02 18:44:13,361:INFO:Defining folds
2023-06-02 18:44:13,362:INFO:Declaring metric variables
2023-06-02 18:44:13,366:INFO:Importing untrained model
2023-06-02 18:44:13,370:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:44:13,379:INFO:Starting cross validation
2023-06-02 18:44:13,381:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:14,180:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,182:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,184:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:14,185:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,203:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,205:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,206:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,207:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:14,208:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,208:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,210:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:14,212:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,222:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,225:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,226:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:14,228:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,236:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,239:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:14,240:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:14,241:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,152:INFO:Calculating mean and std
2023-06-02 18:44:15,154:INFO:Creating metrics dataframe
2023-06-02 18:44:15,434:INFO:Uploading results into container
2023-06-02 18:44:15,435:INFO:Uploading model into container now
2023-06-02 18:44:15,435:INFO:_master_model_container: 12
2023-06-02 18:44:15,435:INFO:_display_container: 2
2023-06-02 18:44:15,436:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:44:15,436:INFO:create_model() successfully completed......................................
2023-06-02 18:44:15,595:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:15,595:INFO:Creating metrics dataframe
2023-06-02 18:44:15,612:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:44:15,613:INFO:Total runtime is 0.547779401143392 minutes
2023-06-02 18:44:15,617:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:15,617:INFO:Initializing create_model()
2023-06-02 18:44:15,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:15,617:INFO:Checking exceptions
2023-06-02 18:44:15,617:INFO:Importing libraries
2023-06-02 18:44:15,617:INFO:Copying training dataset
2023-06-02 18:44:15,622:INFO:Defining folds
2023-06-02 18:44:15,622:INFO:Declaring metric variables
2023-06-02 18:44:15,627:INFO:Importing untrained model
2023-06-02 18:44:15,631:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:44:15,639:INFO:Starting cross validation
2023-06-02 18:44:15,641:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:15,980:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,983:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,984:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:15,985:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,987:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,989:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:15,990:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,992:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:15,994:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:15,996:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,003:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,006:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:16,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:16,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:16,965:INFO:Calculating mean and std
2023-06-02 18:44:16,966:INFO:Creating metrics dataframe
2023-06-02 18:44:17,246:INFO:Uploading results into container
2023-06-02 18:44:17,247:INFO:Uploading model into container now
2023-06-02 18:44:17,247:INFO:_master_model_container: 13
2023-06-02 18:44:17,247:INFO:_display_container: 2
2023-06-02 18:44:17,248:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:44:17,248:INFO:create_model() successfully completed......................................
2023-06-02 18:44:17,403:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:17,403:INFO:Creating metrics dataframe
2023-06-02 18:44:17,422:INFO:Initializing Dummy Classifier
2023-06-02 18:44:17,422:INFO:Total runtime is 0.5779413143793742 minutes
2023-06-02 18:44:17,427:INFO:SubProcess create_model() called ==================================
2023-06-02 18:44:17,427:INFO:Initializing create_model()
2023-06-02 18:44:17,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000205F2C324C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:17,427:INFO:Checking exceptions
2023-06-02 18:44:17,427:INFO:Importing libraries
2023-06-02 18:44:17,427:INFO:Copying training dataset
2023-06-02 18:44:17,432:INFO:Defining folds
2023-06-02 18:44:17,432:INFO:Declaring metric variables
2023-06-02 18:44:17,437:INFO:Importing untrained model
2023-06-02 18:44:17,442:INFO:Dummy Classifier Imported successfully
2023-06-02 18:44:17,450:INFO:Starting cross validation
2023-06-02 18:44:17,452:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:44:17,661:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,665:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,666:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:17,667:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,681:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,684:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,685:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:17,686:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,687:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,689:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,690:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,690:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:17,690:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,691:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:17,692:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,693:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,693:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:17,695:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:44:17,696:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:44:18,678:INFO:Calculating mean and std
2023-06-02 18:44:18,680:INFO:Creating metrics dataframe
2023-06-02 18:44:18,961:INFO:Uploading results into container
2023-06-02 18:44:18,962:INFO:Uploading model into container now
2023-06-02 18:44:18,963:INFO:_master_model_container: 14
2023-06-02 18:44:18,963:INFO:_display_container: 2
2023-06-02 18:44:18,963:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:44:18,963:INFO:create_model() successfully completed......................................
2023-06-02 18:44:19,119:INFO:SubProcess create_model() end ==================================
2023-06-02 18:44:19,119:INFO:Creating metrics dataframe
2023-06-02 18:44:19,148:INFO:Initializing create_model()
2023-06-02 18:44:19,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:19,148:INFO:Checking exceptions
2023-06-02 18:44:19,150:INFO:Importing libraries
2023-06-02 18:44:19,150:INFO:Copying training dataset
2023-06-02 18:44:19,154:INFO:Defining folds
2023-06-02 18:44:19,154:INFO:Declaring metric variables
2023-06-02 18:44:19,155:INFO:Importing untrained model
2023-06-02 18:44:19,155:INFO:Declaring custom model
2023-06-02 18:44:19,155:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:44:19,157:INFO:Cross validation set to False
2023-06-02 18:44:19,157:INFO:Fitting Model
2023-06-02 18:44:19,235:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:44:19,463:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:44:19,463:INFO:create_model() successfully completed......................................
2023-06-02 18:44:19,619:INFO:Initializing create_model()
2023-06-02 18:44:19,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:19,620:INFO:Checking exceptions
2023-06-02 18:44:19,622:INFO:Importing libraries
2023-06-02 18:44:19,622:INFO:Copying training dataset
2023-06-02 18:44:19,626:INFO:Defining folds
2023-06-02 18:44:19,626:INFO:Declaring metric variables
2023-06-02 18:44:19,627:INFO:Importing untrained model
2023-06-02 18:44:19,627:INFO:Declaring custom model
2023-06-02 18:44:19,627:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:44:19,629:INFO:Cross validation set to False
2023-06-02 18:44:19,629:INFO:Fitting Model
2023-06-02 18:44:19,925:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:44:19,925:INFO:create_model() successfully completed......................................
2023-06-02 18:44:20,078:INFO:Initializing create_model()
2023-06-02 18:44:20,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:20,078:INFO:Checking exceptions
2023-06-02 18:44:20,081:INFO:Importing libraries
2023-06-02 18:44:20,081:INFO:Copying training dataset
2023-06-02 18:44:20,085:INFO:Defining folds
2023-06-02 18:44:20,085:INFO:Declaring metric variables
2023-06-02 18:44:20,086:INFO:Importing untrained model
2023-06-02 18:44:20,086:INFO:Declaring custom model
2023-06-02 18:44:20,086:INFO:Naive Bayes Imported successfully
2023-06-02 18:44:20,088:INFO:Cross validation set to False
2023-06-02 18:44:20,088:INFO:Fitting Model
2023-06-02 18:44:20,401:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:44:20,401:INFO:create_model() successfully completed......................................
2023-06-02 18:44:20,555:INFO:Initializing create_model()
2023-06-02 18:44:20,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:20,556:INFO:Checking exceptions
2023-06-02 18:44:20,558:INFO:Importing libraries
2023-06-02 18:44:20,558:INFO:Copying training dataset
2023-06-02 18:44:20,563:INFO:Defining folds
2023-06-02 18:44:20,564:INFO:Declaring metric variables
2023-06-02 18:44:20,564:INFO:Importing untrained model
2023-06-02 18:44:20,564:INFO:Declaring custom model
2023-06-02 18:44:20,565:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:44:20,566:INFO:Cross validation set to False
2023-06-02 18:44:20,566:INFO:Fitting Model
2023-06-02 18:44:20,884:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:44:20,884:INFO:create_model() successfully completed......................................
2023-06-02 18:44:21,049:INFO:Initializing create_model()
2023-06-02 18:44:21,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000205F2C09FD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:44:21,050:INFO:Checking exceptions
2023-06-02 18:44:21,052:INFO:Importing libraries
2023-06-02 18:44:21,052:INFO:Copying training dataset
2023-06-02 18:44:21,055:INFO:Defining folds
2023-06-02 18:44:21,056:INFO:Declaring metric variables
2023-06-02 18:44:21,056:INFO:Importing untrained model
2023-06-02 18:44:21,056:INFO:Declaring custom model
2023-06-02 18:44:21,057:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:44:21,058:INFO:Cross validation set to False
2023-06-02 18:44:21,058:INFO:Fitting Model
2023-06-02 18:44:21,736:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:44:21,736:INFO:create_model() successfully completed......................................
2023-06-02 18:44:21,927:INFO:_master_model_container: 14
2023-06-02 18:44:21,927:INFO:_display_container: 2
2023-06-02 18:44:21,929:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:44:21,929:INFO:compare_models() successfully completed......................................
2023-06-02 18:44:22,174:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_16768\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:44:27,777:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\ray\tune\experiment\experiment.py:170: UserWarning: The `local_dir` argument of `Experiment is deprecated. Use `storage_path` or set the `TUNE_RESULT_DIR` environment variable instead.
  warnings.warn(

2023-06-02 18:53:02,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:53:02,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:53:02,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:53:02,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-02 18:53:06,472:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-02 18:53:07,890:INFO:PyCaret ClassificationExperiment
2023-06-02 18:53:07,890:INFO:Logging name: clf-default-name
2023-06-02 18:53:07,890:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-02 18:53:07,891:INFO:version 3.0.2
2023-06-02 18:53:07,891:INFO:Initializing setup()
2023-06-02 18:53:07,891:INFO:self.USI: a8dd
2023-06-02 18:53:07,891:INFO:self._variable_keys: {'exp_name_log', 'html_param', 'exp_id', 'fold_groups_param', 'seed', 'gpu_param', 'X_test', 'fix_imbalance', 'is_multiclass', '_ml_usecase', 'y_train', 'memory', 'y', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'y_test', 'X_train', 'fold_shuffle_param', 'n_jobs_param', 'idx', 'data', 'USI', 'X', 'fold_generator', 'logging_param', 'log_plots_param', 'target_param'}
2023-06-02 18:53:07,891:INFO:Checking environment
2023-06-02 18:53:07,891:INFO:python_version: 3.8.16
2023-06-02 18:53:07,891:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-06-02 18:53:07,891:INFO:machine: AMD64
2023-06-02 18:53:07,891:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-02 18:53:07,891:INFO:Memory: svmem(total=17106501632, available=11284746240, percent=34.0, used=5821755392, free=11284746240)
2023-06-02 18:53:07,891:INFO:Physical Core: 6
2023-06-02 18:53:07,891:INFO:Logical Core: 12
2023-06-02 18:53:07,891:INFO:Checking libraries
2023-06-02 18:53:07,891:INFO:System:
2023-06-02 18:53:07,891:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-06-02 18:53:07,892:INFO:executable: c:\Users\rastu\.conda\envs\forpycaret\python.exe
2023-06-02 18:53:07,892:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-02 18:53:07,892:INFO:PyCaret required dependencies:
2023-06-02 18:53:07,892:INFO:                 pip: 23.0.1
2023-06-02 18:53:07,892:INFO:          setuptools: 67.8.0
2023-06-02 18:53:07,892:INFO:             pycaret: 3.0.2
2023-06-02 18:53:07,892:INFO:             IPython: 8.8.0
2023-06-02 18:53:07,892:INFO:          ipywidgets: 8.0.6
2023-06-02 18:53:07,892:INFO:                tqdm: 4.65.0
2023-06-02 18:53:07,892:INFO:               numpy: 1.23.5
2023-06-02 18:53:07,892:INFO:              pandas: 1.5.3
2023-06-02 18:53:07,892:INFO:              jinja2: 3.1.2
2023-06-02 18:53:07,892:INFO:               scipy: 1.10.1
2023-06-02 18:53:07,892:INFO:              joblib: 1.2.0
2023-06-02 18:53:07,892:INFO:             sklearn: 1.2.2
2023-06-02 18:53:07,893:INFO:                pyod: 1.0.9
2023-06-02 18:53:07,893:INFO:            imblearn: 0.10.1
2023-06-02 18:53:07,893:INFO:   category_encoders: 2.6.1
2023-06-02 18:53:07,893:INFO:            lightgbm: 3.3.5
2023-06-02 18:53:07,893:INFO:               numba: 0.57.0
2023-06-02 18:53:07,893:INFO:            requests: 2.31.0
2023-06-02 18:53:07,893:INFO:          matplotlib: 3.7.1
2023-06-02 18:53:07,893:INFO:          scikitplot: 0.3.7
2023-06-02 18:53:07,893:INFO:         yellowbrick: 1.5
2023-06-02 18:53:07,893:INFO:              plotly: 5.14.1
2023-06-02 18:53:07,893:INFO:             kaleido: 0.2.1
2023-06-02 18:53:07,893:INFO:         statsmodels: 0.14.0
2023-06-02 18:53:07,893:INFO:              sktime: 0.17.0
2023-06-02 18:53:07,893:INFO:               tbats: 1.1.3
2023-06-02 18:53:07,893:INFO:            pmdarima: 2.0.3
2023-06-02 18:53:07,893:INFO:              psutil: 5.9.5
2023-06-02 18:53:07,894:INFO:PyCaret optional dependencies:
2023-06-02 18:53:07,913:INFO:                shap: Not installed
2023-06-02 18:53:07,913:INFO:           interpret: Not installed
2023-06-02 18:53:07,913:INFO:                umap: Not installed
2023-06-02 18:53:07,913:INFO:    pandas_profiling: Not installed
2023-06-02 18:53:07,914:INFO:  explainerdashboard: Not installed
2023-06-02 18:53:07,914:INFO:             autoviz: Not installed
2023-06-02 18:53:07,914:INFO:           fairlearn: Not installed
2023-06-02 18:53:07,914:INFO:             xgboost: Not installed
2023-06-02 18:53:07,914:INFO:            catboost: Not installed
2023-06-02 18:53:07,914:INFO:              kmodes: Not installed
2023-06-02 18:53:07,914:INFO:             mlxtend: Not installed
2023-06-02 18:53:07,914:INFO:       statsforecast: Not installed
2023-06-02 18:53:07,914:INFO:        tune_sklearn: 0.4.5
2023-06-02 18:53:07,914:INFO:                 ray: 2.4.0
2023-06-02 18:53:07,914:INFO:            hyperopt: Not installed
2023-06-02 18:53:07,914:INFO:              optuna: Not installed
2023-06-02 18:53:07,914:INFO:               skopt: Not installed
2023-06-02 18:53:07,914:INFO:              mlflow: Not installed
2023-06-02 18:53:07,914:INFO:              gradio: Not installed
2023-06-02 18:53:07,914:INFO:             fastapi: Not installed
2023-06-02 18:53:07,915:INFO:             uvicorn: Not installed
2023-06-02 18:53:07,915:INFO:              m2cgen: Not installed
2023-06-02 18:53:07,915:INFO:           evidently: Not installed
2023-06-02 18:53:07,915:INFO:               fugue: Not installed
2023-06-02 18:53:07,915:INFO:           streamlit: Not installed
2023-06-02 18:53:07,915:INFO:             prophet: Not installed
2023-06-02 18:53:07,915:INFO:None
2023-06-02 18:53:07,915:INFO:Set up data.
2023-06-02 18:53:07,947:INFO:Set up train/test split.
2023-06-02 18:53:07,966:INFO:Set up index.
2023-06-02 18:53:07,966:INFO:Set up folding strategy.
2023-06-02 18:53:07,967:INFO:Assigning column types.
2023-06-02 18:53:07,970:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-02 18:53:08,044:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:53:08,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:53:08,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-02 18:53:08,313:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:53:08,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,355:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-02 18:53:08,430:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:53:08,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-02 18:53:08,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,585:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-02 18:53:08,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:08,844:INFO:Preparing preprocessing pipeline...
2023-06-02 18:53:08,854:INFO:Set up label encoding.
2023-06-02 18:53:08,854:INFO:Set up simple imputation.
2023-06-02 18:53:08,857:INFO:Set up encoding of categorical features.
2023-06-02 18:53:08,958:INFO:Finished creating preprocessing pipeline.
2023-06-02 18:53:08,980:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\rastu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Filepath'],
                                    transformer=TargetEncoder(cols=['Filepath'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-02 18:53:08,980:INFO:Creating final display dataframe.
2023-06-02 18:53:09,216:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 123  
1                                               Label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 2)  
5                                            (300, 2)  
6                                            (210, 2)  
7                                             (90, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               a8dd  
2023-06-02 18:53:09,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:09,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:09,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:09,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-02 18:53:09,472:INFO:setup() successfully completed in 1.93s...............
2023-06-02 18:53:09,519:INFO:Initializing compare_models()
2023-06-02 18:53:09,520:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, include=None, fold=5, round=4, cross_validation=True, sort=F1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-02 18:53:09,520:INFO:Checking exceptions
2023-06-02 18:53:09,523:INFO:Preparing display monitor
2023-06-02 18:53:09,552:INFO:Initializing Logistic Regression
2023-06-02 18:53:09,553:INFO:Total runtime is 1.668532689412435e-05 minutes
2023-06-02 18:53:09,557:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:09,557:INFO:Initializing create_model()
2023-06-02 18:53:09,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:09,557:INFO:Checking exceptions
2023-06-02 18:53:09,557:INFO:Importing libraries
2023-06-02 18:53:09,558:INFO:Copying training dataset
2023-06-02 18:53:09,562:INFO:Defining folds
2023-06-02 18:53:09,562:INFO:Declaring metric variables
2023-06-02 18:53:09,567:INFO:Importing untrained model
2023-06-02 18:53:09,572:INFO:Logistic Regression Imported successfully
2023-06-02 18:53:09,582:INFO:Starting cross validation
2023-06-02 18:53:09,583:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:14,177:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,180:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,180:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,181:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,181:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,182:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:14,182:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:14,183:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:14,183:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:14,183:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,183:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,184:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:14,184:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:15,209:INFO:Calculating mean and std
2023-06-02 18:53:15,211:INFO:Creating metrics dataframe
2023-06-02 18:53:15,518:INFO:Uploading results into container
2023-06-02 18:53:15,519:INFO:Uploading model into container now
2023-06-02 18:53:15,519:INFO:_master_model_container: 1
2023-06-02 18:53:15,519:INFO:_display_container: 2
2023-06-02 18:53:15,520:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-02 18:53:15,520:INFO:create_model() successfully completed......................................
2023-06-02 18:53:15,673:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:15,673:INFO:Creating metrics dataframe
2023-06-02 18:53:15,685:INFO:Initializing K Neighbors Classifier
2023-06-02 18:53:15,686:INFO:Total runtime is 0.10223821004231771 minutes
2023-06-02 18:53:15,690:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:15,690:INFO:Initializing create_model()
2023-06-02 18:53:15,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:15,691:INFO:Checking exceptions
2023-06-02 18:53:15,691:INFO:Importing libraries
2023-06-02 18:53:15,691:INFO:Copying training dataset
2023-06-02 18:53:15,696:INFO:Defining folds
2023-06-02 18:53:15,697:INFO:Declaring metric variables
2023-06-02 18:53:15,702:INFO:Importing untrained model
2023-06-02 18:53:15,707:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:53:15,716:INFO:Starting cross validation
2023-06-02 18:53:15,717:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:18,644:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,645:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,647:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,648:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:18,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:18,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,651:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,651:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,652:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:18,652:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,654:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,655:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,656:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:18,657:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,658:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:18,659:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:18,660:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:19,656:INFO:Calculating mean and std
2023-06-02 18:53:19,657:INFO:Creating metrics dataframe
2023-06-02 18:53:19,957:INFO:Uploading results into container
2023-06-02 18:53:19,958:INFO:Uploading model into container now
2023-06-02 18:53:19,958:INFO:_master_model_container: 2
2023-06-02 18:53:19,958:INFO:_display_container: 2
2023-06-02 18:53:19,959:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:53:19,959:INFO:create_model() successfully completed......................................
2023-06-02 18:53:20,108:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:20,109:INFO:Creating metrics dataframe
2023-06-02 18:53:20,122:INFO:Initializing Naive Bayes
2023-06-02 18:53:20,122:INFO:Total runtime is 0.1761717955271403 minutes
2023-06-02 18:53:20,126:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:20,126:INFO:Initializing create_model()
2023-06-02 18:53:20,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:20,127:INFO:Checking exceptions
2023-06-02 18:53:20,127:INFO:Importing libraries
2023-06-02 18:53:20,127:INFO:Copying training dataset
2023-06-02 18:53:20,132:INFO:Defining folds
2023-06-02 18:53:20,132:INFO:Declaring metric variables
2023-06-02 18:53:20,137:INFO:Importing untrained model
2023-06-02 18:53:20,141:INFO:Naive Bayes Imported successfully
2023-06-02 18:53:20,150:INFO:Starting cross validation
2023-06-02 18:53:20,151:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:20,396:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,401:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:20,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,403:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:20,404:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,404:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,407:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:20,409:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:20,411:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,708:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,710:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,711:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,712:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:22,713:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,714:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,716:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:22,717:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:22,984:INFO:Calculating mean and std
2023-06-02 18:53:22,986:INFO:Creating metrics dataframe
2023-06-02 18:53:23,289:INFO:Uploading results into container
2023-06-02 18:53:23,290:INFO:Uploading model into container now
2023-06-02 18:53:23,291:INFO:_master_model_container: 3
2023-06-02 18:53:23,291:INFO:_display_container: 2
2023-06-02 18:53:23,291:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:53:23,291:INFO:create_model() successfully completed......................................
2023-06-02 18:53:23,440:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:23,440:INFO:Creating metrics dataframe
2023-06-02 18:53:23,454:INFO:Initializing Decision Tree Classifier
2023-06-02 18:53:23,454:INFO:Total runtime is 0.23170104424158733 minutes
2023-06-02 18:53:23,458:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:23,458:INFO:Initializing create_model()
2023-06-02 18:53:23,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:23,458:INFO:Checking exceptions
2023-06-02 18:53:23,459:INFO:Importing libraries
2023-06-02 18:53:23,459:INFO:Copying training dataset
2023-06-02 18:53:23,463:INFO:Defining folds
2023-06-02 18:53:23,463:INFO:Declaring metric variables
2023-06-02 18:53:23,468:INFO:Importing untrained model
2023-06-02 18:53:23,473:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:53:23,481:INFO:Starting cross validation
2023-06-02 18:53:23,483:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:23,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,729:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,731:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:23,732:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,734:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,737:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,738:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,739:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:23,739:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:23,739:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:23,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,740:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:23,741:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:23,743:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:24,719:INFO:Calculating mean and std
2023-06-02 18:53:24,720:INFO:Creating metrics dataframe
2023-06-02 18:53:25,024:INFO:Uploading results into container
2023-06-02 18:53:25,025:INFO:Uploading model into container now
2023-06-02 18:53:25,026:INFO:_master_model_container: 4
2023-06-02 18:53:25,026:INFO:_display_container: 2
2023-06-02 18:53:25,026:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:53:25,027:INFO:create_model() successfully completed......................................
2023-06-02 18:53:25,176:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:25,177:INFO:Creating metrics dataframe
2023-06-02 18:53:25,191:INFO:Initializing SVM - Linear Kernel
2023-06-02 18:53:25,191:INFO:Total runtime is 0.26065769195556643 minutes
2023-06-02 18:53:25,195:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:25,195:INFO:Initializing create_model()
2023-06-02 18:53:25,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:25,197:INFO:Checking exceptions
2023-06-02 18:53:25,197:INFO:Importing libraries
2023-06-02 18:53:25,197:INFO:Copying training dataset
2023-06-02 18:53:25,201:INFO:Defining folds
2023-06-02 18:53:25,201:INFO:Declaring metric variables
2023-06-02 18:53:25,206:INFO:Importing untrained model
2023-06-02 18:53:25,210:INFO:SVM - Linear Kernel Imported successfully
2023-06-02 18:53:25,218:INFO:Starting cross validation
2023-06-02 18:53:25,220:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:25,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:53:25,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:53:25,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:53:25,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-02 18:53:25,488:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,488:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,488:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,492:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:25,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:25,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:25,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:25,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,497:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:25,498:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:25,500:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:26,487:INFO:Calculating mean and std
2023-06-02 18:53:26,489:INFO:Creating metrics dataframe
2023-06-02 18:53:26,790:INFO:Uploading results into container
2023-06-02 18:53:26,791:INFO:Uploading model into container now
2023-06-02 18:53:26,791:INFO:_master_model_container: 5
2023-06-02 18:53:26,792:INFO:_display_container: 2
2023-06-02 18:53:26,792:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-02 18:53:26,793:INFO:create_model() successfully completed......................................
2023-06-02 18:53:26,943:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:26,944:INFO:Creating metrics dataframe
2023-06-02 18:53:26,959:INFO:Initializing Ridge Classifier
2023-06-02 18:53:26,959:INFO:Total runtime is 0.29012392759323125 minutes
2023-06-02 18:53:26,964:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:26,964:INFO:Initializing create_model()
2023-06-02 18:53:26,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:26,964:INFO:Checking exceptions
2023-06-02 18:53:26,965:INFO:Importing libraries
2023-06-02 18:53:26,965:INFO:Copying training dataset
2023-06-02 18:53:26,969:INFO:Defining folds
2023-06-02 18:53:26,969:INFO:Declaring metric variables
2023-06-02 18:53:26,973:INFO:Importing untrained model
2023-06-02 18:53:26,977:INFO:Ridge Classifier Imported successfully
2023-06-02 18:53:26,987:INFO:Starting cross validation
2023-06-02 18:53:26,989:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:27,379:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:53:27,381:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,384:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,385:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:27,386:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,387:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:53:27,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,388:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:53:27,389:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,391:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,393:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,393:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:27,393:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:53:27,394:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,395:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-06-02 18:53:27,397:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,398:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,398:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-02 18:53:27,399:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,400:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:27,401:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,402:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:27,404:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:27,405:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:28,387:INFO:Calculating mean and std
2023-06-02 18:53:28,389:INFO:Creating metrics dataframe
2023-06-02 18:53:28,697:INFO:Uploading results into container
2023-06-02 18:53:28,698:INFO:Uploading model into container now
2023-06-02 18:53:28,699:INFO:_master_model_container: 6
2023-06-02 18:53:28,699:INFO:_display_container: 2
2023-06-02 18:53:28,699:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-06-02 18:53:28,699:INFO:create_model() successfully completed......................................
2023-06-02 18:53:28,851:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:28,851:INFO:Creating metrics dataframe
2023-06-02 18:53:28,867:INFO:Initializing Random Forest Classifier
2023-06-02 18:53:28,868:INFO:Total runtime is 0.3219310323397319 minutes
2023-06-02 18:53:28,872:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:28,872:INFO:Initializing create_model()
2023-06-02 18:53:28,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:28,873:INFO:Checking exceptions
2023-06-02 18:53:28,873:INFO:Importing libraries
2023-06-02 18:53:28,873:INFO:Copying training dataset
2023-06-02 18:53:28,879:INFO:Defining folds
2023-06-02 18:53:28,879:INFO:Declaring metric variables
2023-06-02 18:53:28,884:INFO:Importing untrained model
2023-06-02 18:53:28,888:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:53:28,896:INFO:Starting cross validation
2023-06-02 18:53:28,899:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:29,802:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,805:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,807:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:29,808:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,813:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,816:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,817:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:29,819:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,819:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,820:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:29,822:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,822:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,825:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,826:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:29,828:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,828:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,831:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:29,833:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:29,834:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:30,832:INFO:Calculating mean and std
2023-06-02 18:53:30,833:INFO:Creating metrics dataframe
2023-06-02 18:53:31,142:INFO:Uploading results into container
2023-06-02 18:53:31,143:INFO:Uploading model into container now
2023-06-02 18:53:31,143:INFO:_master_model_container: 7
2023-06-02 18:53:31,143:INFO:_display_container: 2
2023-06-02 18:53:31,144:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:53:31,144:INFO:create_model() successfully completed......................................
2023-06-02 18:53:31,301:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:31,302:INFO:Creating metrics dataframe
2023-06-02 18:53:31,317:INFO:Initializing Quadratic Discriminant Analysis
2023-06-02 18:53:31,318:INFO:Total runtime is 0.3627742886543275 minutes
2023-06-02 18:53:31,322:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:31,322:INFO:Initializing create_model()
2023-06-02 18:53:31,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:31,323:INFO:Checking exceptions
2023-06-02 18:53:31,323:INFO:Importing libraries
2023-06-02 18:53:31,323:INFO:Copying training dataset
2023-06-02 18:53:31,328:INFO:Defining folds
2023-06-02 18:53:31,328:INFO:Declaring metric variables
2023-06-02 18:53:31,333:INFO:Importing untrained model
2023-06-02 18:53:31,337:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:53:31,346:INFO:Starting cross validation
2023-06-02 18:53:31,348:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:31,556:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:53:31,556:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:53:31,556:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:53:31,556:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:53:31,609:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,609:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,610:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,615:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,615:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,616:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,649:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,667:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,668:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,669:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,670:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,670:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,671:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,671:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,672:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,702:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,703:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,703:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,720:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,721:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,721:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,721:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-02 18:53:31,722:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-02 18:53:31,722:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-06-02 18:53:31,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:53:31,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:53:31,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:53:31,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-02 18:53:31,729:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,730:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,732:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,733:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,733:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,733:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,734:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:31,734:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:31,734:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:31,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:31,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:31,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,735:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,736:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,736:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:31,736:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:32,764:INFO:Calculating mean and std
2023-06-02 18:53:32,766:INFO:Creating metrics dataframe
2023-06-02 18:53:33,073:INFO:Uploading results into container
2023-06-02 18:53:33,074:INFO:Uploading model into container now
2023-06-02 18:53:33,075:INFO:_master_model_container: 8
2023-06-02 18:53:33,075:INFO:_display_container: 2
2023-06-02 18:53:33,075:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:53:33,075:INFO:create_model() successfully completed......................................
2023-06-02 18:53:33,224:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:33,224:INFO:Creating metrics dataframe
2023-06-02 18:53:33,240:INFO:Initializing Ada Boost Classifier
2023-06-02 18:53:33,240:INFO:Total runtime is 0.39479581117630014 minutes
2023-06-02 18:53:33,244:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:33,244:INFO:Initializing create_model()
2023-06-02 18:53:33,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:33,245:INFO:Checking exceptions
2023-06-02 18:53:33,245:INFO:Importing libraries
2023-06-02 18:53:33,245:INFO:Copying training dataset
2023-06-02 18:53:33,249:INFO:Defining folds
2023-06-02 18:53:33,250:INFO:Declaring metric variables
2023-06-02 18:53:33,254:INFO:Importing untrained model
2023-06-02 18:53:33,259:INFO:Ada Boost Classifier Imported successfully
2023-06-02 18:53:33,266:INFO:Starting cross validation
2023-06-02 18:53:33,268:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:33,706:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,709:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,710:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:33,711:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,717:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,720:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,721:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:33,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,723:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,726:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,728:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:33,729:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,846:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,850:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:33,853:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,859:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,863:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:33,865:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:33,867:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:34,756:INFO:Calculating mean and std
2023-06-02 18:53:34,757:INFO:Creating metrics dataframe
2023-06-02 18:53:35,070:INFO:Uploading results into container
2023-06-02 18:53:35,071:INFO:Uploading model into container now
2023-06-02 18:53:35,072:INFO:_master_model_container: 9
2023-06-02 18:53:35,072:INFO:_display_container: 2
2023-06-02 18:53:35,072:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-06-02 18:53:35,072:INFO:create_model() successfully completed......................................
2023-06-02 18:53:35,218:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:35,218:INFO:Creating metrics dataframe
2023-06-02 18:53:35,239:INFO:Initializing Gradient Boosting Classifier
2023-06-02 18:53:35,239:INFO:Total runtime is 0.4281201124191285 minutes
2023-06-02 18:53:35,243:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:35,243:INFO:Initializing create_model()
2023-06-02 18:53:35,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:35,243:INFO:Checking exceptions
2023-06-02 18:53:35,244:INFO:Importing libraries
2023-06-02 18:53:35,244:INFO:Copying training dataset
2023-06-02 18:53:35,249:INFO:Defining folds
2023-06-02 18:53:35,250:INFO:Declaring metric variables
2023-06-02 18:53:35,254:INFO:Importing untrained model
2023-06-02 18:53:35,259:INFO:Gradient Boosting Classifier Imported successfully
2023-06-02 18:53:35,267:INFO:Starting cross validation
2023-06-02 18:53:35,269:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:37,015:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:53:37,016:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:53:37,016:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:53:37,020:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:53:37,021:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-02 18:53:38,603:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,605:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,607:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:38,608:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,620:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,622:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,623:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,624:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:38,625:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,625:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,626:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:38,628:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,629:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,630:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:38,631:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,646:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,650:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:38,653:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:38,654:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:39,664:INFO:Calculating mean and std
2023-06-02 18:53:39,666:INFO:Creating metrics dataframe
2023-06-02 18:53:39,981:INFO:Uploading results into container
2023-06-02 18:53:39,982:INFO:Uploading model into container now
2023-06-02 18:53:39,982:INFO:_master_model_container: 10
2023-06-02 18:53:39,982:INFO:_display_container: 2
2023-06-02 18:53:39,983:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-02 18:53:39,983:INFO:create_model() successfully completed......................................
2023-06-02 18:53:40,135:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:40,135:INFO:Creating metrics dataframe
2023-06-02 18:53:40,153:INFO:Initializing Linear Discriminant Analysis
2023-06-02 18:53:40,153:INFO:Total runtime is 0.510021996498108 minutes
2023-06-02 18:53:40,157:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:40,157:INFO:Initializing create_model()
2023-06-02 18:53:40,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:40,158:INFO:Checking exceptions
2023-06-02 18:53:40,158:INFO:Importing libraries
2023-06-02 18:53:40,158:INFO:Copying training dataset
2023-06-02 18:53:40,162:INFO:Defining folds
2023-06-02 18:53:40,163:INFO:Declaring metric variables
2023-06-02 18:53:40,167:INFO:Importing untrained model
2023-06-02 18:53:40,171:INFO:Linear Discriminant Analysis Imported successfully
2023-06-02 18:53:40,180:INFO:Starting cross validation
2023-06-02 18:53:40,182:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:40,486:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,487:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,488:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,489:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,490:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:40,491:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,492:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:40,492:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,493:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:40,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:40,494:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:40,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:40,495:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:41,557:INFO:Calculating mean and std
2023-06-02 18:53:41,559:INFO:Creating metrics dataframe
2023-06-02 18:53:41,874:INFO:Uploading results into container
2023-06-02 18:53:41,875:INFO:Uploading model into container now
2023-06-02 18:53:41,876:INFO:_master_model_container: 11
2023-06-02 18:53:41,876:INFO:_display_container: 2
2023-06-02 18:53:41,876:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-02 18:53:41,876:INFO:create_model() successfully completed......................................
2023-06-02 18:53:42,026:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:42,026:INFO:Creating metrics dataframe
2023-06-02 18:53:42,043:INFO:Initializing Extra Trees Classifier
2023-06-02 18:53:42,043:INFO:Total runtime is 0.5415124654769898 minutes
2023-06-02 18:53:42,048:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:42,048:INFO:Initializing create_model()
2023-06-02 18:53:42,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:42,049:INFO:Checking exceptions
2023-06-02 18:53:42,049:INFO:Importing libraries
2023-06-02 18:53:42,049:INFO:Copying training dataset
2023-06-02 18:53:42,053:INFO:Defining folds
2023-06-02 18:53:42,054:INFO:Declaring metric variables
2023-06-02 18:53:42,058:INFO:Importing untrained model
2023-06-02 18:53:42,062:INFO:Extra Trees Classifier Imported successfully
2023-06-02 18:53:42,076:INFO:Starting cross validation
2023-06-02 18:53:42,079:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:43,029:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,032:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,034:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:43,034:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,035:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,037:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,038:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:43,039:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,045:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,046:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,048:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,049:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,051:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:43,051:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:43,052:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,053:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,057:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,060:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:43,062:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:43,063:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:44,101:INFO:Calculating mean and std
2023-06-02 18:53:44,102:INFO:Creating metrics dataframe
2023-06-02 18:53:44,420:INFO:Uploading results into container
2023-06-02 18:53:44,421:INFO:Uploading model into container now
2023-06-02 18:53:44,421:INFO:_master_model_container: 12
2023-06-02 18:53:44,422:INFO:_display_container: 2
2023-06-02 18:53:44,422:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-02 18:53:44,422:INFO:create_model() successfully completed......................................
2023-06-02 18:53:44,574:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:44,574:INFO:Creating metrics dataframe
2023-06-02 18:53:44,593:INFO:Initializing Light Gradient Boosting Machine
2023-06-02 18:53:44,593:INFO:Total runtime is 0.584021015961965 minutes
2023-06-02 18:53:44,597:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:44,597:INFO:Initializing create_model()
2023-06-02 18:53:44,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:44,598:INFO:Checking exceptions
2023-06-02 18:53:44,598:INFO:Importing libraries
2023-06-02 18:53:44,599:INFO:Copying training dataset
2023-06-02 18:53:44,605:INFO:Defining folds
2023-06-02 18:53:44,605:INFO:Declaring metric variables
2023-06-02 18:53:44,609:INFO:Importing untrained model
2023-06-02 18:53:44,614:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-02 18:53:44,621:INFO:Starting cross validation
2023-06-02 18:53:44,623:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:45,006:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,007:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,009:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,010:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:45,011:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:45,012:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,013:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,014:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,015:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:45,016:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,017:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,019:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:45,021:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,092:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,094:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:45,095:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:45,097:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,086:INFO:Calculating mean and std
2023-06-02 18:53:46,088:INFO:Creating metrics dataframe
2023-06-02 18:53:46,411:INFO:Uploading results into container
2023-06-02 18:53:46,412:INFO:Uploading model into container now
2023-06-02 18:53:46,412:INFO:_master_model_container: 13
2023-06-02 18:53:46,412:INFO:_display_container: 2
2023-06-02 18:53:46,413:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-02 18:53:46,414:INFO:create_model() successfully completed......................................
2023-06-02 18:53:46,569:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:46,569:INFO:Creating metrics dataframe
2023-06-02 18:53:46,587:INFO:Initializing Dummy Classifier
2023-06-02 18:53:46,587:INFO:Total runtime is 0.6172547539075216 minutes
2023-06-02 18:53:46,591:INFO:SubProcess create_model() called ==================================
2023-06-02 18:53:46,591:INFO:Initializing create_model()
2023-06-02 18:53:46,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029750B113D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:46,592:INFO:Checking exceptions
2023-06-02 18:53:46,592:INFO:Importing libraries
2023-06-02 18:53:46,592:INFO:Copying training dataset
2023-06-02 18:53:46,597:INFO:Defining folds
2023-06-02 18:53:46,597:INFO:Declaring metric variables
2023-06-02 18:53:46,602:INFO:Importing untrained model
2023-06-02 18:53:46,606:INFO:Dummy Classifier Imported successfully
2023-06-02 18:53:46,614:INFO:Starting cross validation
2023-06-02 18:53:46,616:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-02 18:53:46,831:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,834:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,835:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:46,836:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,837:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,840:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,841:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:46,842:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,852:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,854:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,856:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,856:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:46,857:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,858:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:46,860:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,864:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,867:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:46,869:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-02 18:53:46,870:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-02 18:53:47,888:INFO:Calculating mean and std
2023-06-02 18:53:47,889:INFO:Creating metrics dataframe
2023-06-02 18:53:48,200:INFO:Uploading results into container
2023-06-02 18:53:48,201:INFO:Uploading model into container now
2023-06-02 18:53:48,201:INFO:_master_model_container: 14
2023-06-02 18:53:48,201:INFO:_display_container: 2
2023-06-02 18:53:48,202:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-02 18:53:48,202:INFO:create_model() successfully completed......................................
2023-06-02 18:53:48,356:INFO:SubProcess create_model() end ==================================
2023-06-02 18:53:48,357:INFO:Creating metrics dataframe
2023-06-02 18:53:48,387:INFO:Initializing create_model()
2023-06-02 18:53:48,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:48,388:INFO:Checking exceptions
2023-06-02 18:53:48,390:INFO:Importing libraries
2023-06-02 18:53:48,390:INFO:Copying training dataset
2023-06-02 18:53:48,394:INFO:Defining folds
2023-06-02 18:53:48,394:INFO:Declaring metric variables
2023-06-02 18:53:48,394:INFO:Importing untrained model
2023-06-02 18:53:48,394:INFO:Declaring custom model
2023-06-02 18:53:48,395:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-02 18:53:48,396:INFO:Cross validation set to False
2023-06-02 18:53:48,396:INFO:Fitting Model
2023-06-02 18:53:48,474:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-02 18:53:48,733:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-02 18:53:48,734:INFO:create_model() successfully completed......................................
2023-06-02 18:53:48,889:INFO:Initializing create_model()
2023-06-02 18:53:48,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:48,889:INFO:Checking exceptions
2023-06-02 18:53:48,891:INFO:Importing libraries
2023-06-02 18:53:48,891:INFO:Copying training dataset
2023-06-02 18:53:48,894:INFO:Defining folds
2023-06-02 18:53:48,895:INFO:Declaring metric variables
2023-06-02 18:53:48,895:INFO:Importing untrained model
2023-06-02 18:53:48,895:INFO:Declaring custom model
2023-06-02 18:53:48,895:INFO:K Neighbors Classifier Imported successfully
2023-06-02 18:53:48,897:INFO:Cross validation set to False
2023-06-02 18:53:48,897:INFO:Fitting Model
2023-06-02 18:53:49,221:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-02 18:53:49,221:INFO:create_model() successfully completed......................................
2023-06-02 18:53:49,375:INFO:Initializing create_model()
2023-06-02 18:53:49,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:49,376:INFO:Checking exceptions
2023-06-02 18:53:49,378:INFO:Importing libraries
2023-06-02 18:53:49,378:INFO:Copying training dataset
2023-06-02 18:53:49,381:INFO:Defining folds
2023-06-02 18:53:49,382:INFO:Declaring metric variables
2023-06-02 18:53:49,382:INFO:Importing untrained model
2023-06-02 18:53:49,382:INFO:Declaring custom model
2023-06-02 18:53:49,382:INFO:Naive Bayes Imported successfully
2023-06-02 18:53:49,384:INFO:Cross validation set to False
2023-06-02 18:53:49,384:INFO:Fitting Model
2023-06-02 18:53:49,711:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-02 18:53:49,712:INFO:create_model() successfully completed......................................
2023-06-02 18:53:49,866:INFO:Initializing create_model()
2023-06-02 18:53:49,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:49,867:INFO:Checking exceptions
2023-06-02 18:53:49,869:INFO:Importing libraries
2023-06-02 18:53:49,869:INFO:Copying training dataset
2023-06-02 18:53:49,873:INFO:Defining folds
2023-06-02 18:53:49,873:INFO:Declaring metric variables
2023-06-02 18:53:49,873:INFO:Importing untrained model
2023-06-02 18:53:49,873:INFO:Declaring custom model
2023-06-02 18:53:49,874:INFO:Decision Tree Classifier Imported successfully
2023-06-02 18:53:49,875:INFO:Cross validation set to False
2023-06-02 18:53:49,875:INFO:Fitting Model
2023-06-02 18:53:50,209:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-02 18:53:50,209:INFO:create_model() successfully completed......................................
2023-06-02 18:53:50,369:INFO:Initializing create_model()
2023-06-02 18:53:50,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002975C6B5E50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-02 18:53:50,370:INFO:Checking exceptions
2023-06-02 18:53:50,372:INFO:Importing libraries
2023-06-02 18:53:50,372:INFO:Copying training dataset
2023-06-02 18:53:50,376:INFO:Defining folds
2023-06-02 18:53:50,376:INFO:Declaring metric variables
2023-06-02 18:53:50,376:INFO:Importing untrained model
2023-06-02 18:53:50,376:INFO:Declaring custom model
2023-06-02 18:53:50,377:INFO:Random Forest Classifier Imported successfully
2023-06-02 18:53:50,378:INFO:Cross validation set to False
2023-06-02 18:53:50,378:INFO:Fitting Model
2023-06-02 18:53:51,147:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-02 18:53:51,147:INFO:create_model() successfully completed......................................
2023-06-02 18:53:51,337:INFO:_master_model_container: 14
2023-06-02 18:53:51,337:INFO:_display_container: 2
2023-06-02 18:53:51,339:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)]
2023-06-02 18:53:51,339:INFO:compare_models() successfully completed......................................
2023-06-02 18:53:51,679:WARNING:C:\Users\rastu\AppData\Local\Temp\ipykernel_12144\634017761.py:1: DeprecationWarning: KerasClassifier is deprecated, use Sci-Keras (https://github.com/adriangb/scikeras) instead. See https://www.adriangb.com/scikeras/stable/migration.html for help migrating.
  model = KerasClassifier(build_fn=create_model)

2023-06-02 18:53:58,896:WARNING:c:\Users\rastu\.conda\envs\forpycaret\lib\site-packages\ray\tune\experiment\experiment.py:170: UserWarning: The `local_dir` argument of `Experiment is deprecated. Use `storage_path` or set the `TUNE_RESULT_DIR` environment variable instead.
  warnings.warn(

